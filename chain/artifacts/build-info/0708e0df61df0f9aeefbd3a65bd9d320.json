{"id":"0708e0df61df0f9aeefbd3a65bd9d320","_format":"hh-sol-build-info-1","solcVersion":"0.8.17","solcLongVersion":"0.8.17+commit.8df45f5f","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/security/Pausable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (security/Pausable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    bool private _paused;\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    constructor() {\n        _paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        require(!paused(), \"Pausable: paused\");\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        require(paused(), \"Pausable: not paused\");\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20.sol\";\nimport \"./extensions/IERC20Metadata.sol\";\nimport \"../../utils/Context.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20, IERC20Metadata {\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * The default value of {decimals} is 18. To select a different value for\n     * {decimals} you should overload it.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\n     * overridden;\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) public virtual override returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, amount);\n        _transfer(from, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        uint256 currentAllowance = allowance(owner, spender);\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        unchecked {\n            _approve(owner, spender, currentAllowance - subtractedValue);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Moves `amount` of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     */\n    function _transfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {\n        require(from != address(0), \"ERC20: transfer from the zero address\");\n        require(to != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, amount);\n\n        uint256 fromBalance = _balances[from];\n        require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n        unchecked {\n            _balances[from] = fromBalance - amount;\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\n            // decrementing then incrementing.\n            _balances[to] += amount;\n        }\n\n        emit Transfer(from, to, amount);\n\n        _afterTokenTransfer(from, to, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        unchecked {\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\n            _balances[account] += amount;\n        }\n        emit Transfer(address(0), account, amount);\n\n        _afterTokenTransfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        unchecked {\n            _balances[account] = accountBalance - amount;\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\n            _totalSupply -= amount;\n        }\n\n        emit Transfer(account, address(0), amount);\n\n        _afterTokenTransfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n     *\n     * Does not update the allowance amount in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Might emit an {Approval} event.\n     */\n    function _spendAllowance(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            require(currentAllowance >= amount, \"ERC20: insufficient allowance\");\n            unchecked {\n                _approve(owner, spender, currentAllowance - amount);\n            }\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * has been transferred to `to`.\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/extensions/ERC20Burnable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../ERC20.sol\";\nimport \"../../../utils/Context.sol\";\n\n/**\n * @dev Extension of {ERC20} that allows token holders to destroy both their own\n * tokens and those that they have an allowance for, in a way that can be\n * recognized off-chain (via event analysis).\n */\nabstract contract ERC20Burnable is Context, ERC20 {\n    /**\n     * @dev Destroys `amount` tokens from the caller.\n     *\n     * See {ERC20-_burn}.\n     */\n    function burn(uint256 amount) public virtual {\n        _burn(_msgSender(), amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, deducting from the caller's\n     * allowance.\n     *\n     * See {ERC20-_burn} and {ERC20-allowance}.\n     *\n     * Requirements:\n     *\n     * - the caller must have allowance for ``accounts``'s tokens of at least\n     * `amount`.\n     */\n    function burnFrom(address account, uint256 amount) public virtual {\n        _spendAllowance(account, _msgSender(), amount);\n        _burn(account, amount);\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n *\n * _Available since v4.1._\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SafeMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"},"contracts/ProvableGBP.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.4;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\";\nimport \"@openzeppelin/contracts/security/Pausable.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\n\ncontract ProvableGBP is ERC20, ERC20Burnable, Pausable, Ownable {\n\n    using SafeMath for uint256;\n\n    // --- Constants ---\n    // Requests are considered expired after 2h\n    uint256 public constant getExpiryTime = 2 hours;\n    // % of the trx we keep in bips (10 = 0.1%)\n    uint256 public constant seignorageFee = 10;\n    // 100% in bips\n    uint256 public constant oneHundredPercent = 10000;\n    // the actual amount we are going to mint\n    uint256 public constant actualMintedPercentage = oneHundredPercent - seignorageFee;\n\n    // the public key of the server-side account\n    bytes public publicKey = \"\";\n\n    struct Commitment {\n        bytes31 paramsHash;\n        address requester;\n        uint256 expiration;\n        uint256 amount;\n    }\n\n    // map of mint commitments\n    mapping(bytes32 => Commitment) private s_mintCommitments;\n\n\n    constructor(bytes memory _publicKey) ERC20(\"Provable GBP\", \"PGBP\") {\n        publicKey = _publicKey;\n    }\n\n    event MintRequest(\n        address indexed requester,\n        bytes32 indexed requestId,\n        uint256 amount,\n        uint256 expiration,\n        bytes encryptedData\n    );\n\n    event AuthRequest(\n        address indexed requester,\n        bytes32 indexed requestId,\n        bytes authEncryptedData\n    );\n\n    event AuthGranted(\n        address indexed requester,\n        bytes32 indexed requestId,\n        bytes grantEncryptedData\n    );\n\n    function pause() public onlyOwner {\n        _pause();\n    }\n\n    function unpause() public onlyOwner {\n        _unpause();\n    }\n\n    function setPublicKey(bytes memory _publicKey) public onlyOwner {\n        publicKey = _publicKey;\n    }\n\n    /**\n     * @notice Not implemented, cannot mint directly.\n     */\n    function mint(address, uint256) view public onlyOwner {\n        // nameless function params mute \"unused param\" compiler warnings\n        revert(\"You cannot mint directly\");\n    }\n\n    function _beforeTokenTransfer(address from, address to, uint256 amount)\n    internal\n    whenNotPaused\n    override\n    {\n        super._beforeTokenTransfer(from, to, amount);\n    }\n\n    /**\n     * @notice Creates an internal mint Commitment and emits a MintRequest event. Pausable.\n     * @param amount The amount to be minted (specified in 10^18 decimals)\n     * @param encryptedData The encrypted payload of the request\n     */\n    function mintRequest(uint256 amount, bytes calldata encryptedData)\n    public\n    whenNotPaused {\n\n        // TODO: add checks here, e.g. duplicate request, too many in the queue,...\n        (bytes32 requestId, uint256 expiration) = _processMintRequest(\n            msg.sender,\n            amount,\n            encryptedData\n        );\n        emit MintRequest(msg.sender, requestId, amount, expiration, encryptedData);\n    }\n\n    /**\n     * @notice Triggered by the owner, emits an AuthRequest event for the original requester. Pausable.\n     * @param requestId the original mint request id\n     * @param serverEncryptedData the current auth. request's encrypted data\n     */\n    function authRequest(\n        bytes32 requestId,\n        bytes calldata serverEncryptedData\n    )\n    public\n    onlyOwner\n    whenNotPaused\n    validateRequestId(requestId)\n    validateNotExpired(requestId) {\n\n        emit AuthRequest(s_mintCommitments[requestId].requester, requestId, serverEncryptedData);\n    }\n\n\n    /**\n    * @notice Triggered by the original requester, emits an AuthGranted event for the server. Pausable.\n     * @param requestId the original mint request id\n     * @param encryptedData the grant's encrypted data\n     */\n    function authGranted(bytes32 requestId, bytes calldata encryptedData)\n    public\n    whenNotPaused\n    validateRequestId(requestId)\n    validateSameRequester(requestId, msg.sender) {\n\n        // TODO: does it make sense to check for expiry? or not since this THE final step?\n\n        emit AuthGranted(msg.sender, requestId, encryptedData);\n    }\n\n    /**\n     * @notice Triggered by the owner, when the fiat funds have cleared. Does the mint, minus seignorage. Pausable.\n     * @param requestId the original mint request id\n     */\n    function paymentComplete(bytes32 requestId)\n    public\n    onlyOwner\n    whenNotPaused\n    validateRequestId(requestId) {\n\n        // TODO: maybe add a lifecycle status?\n\n        // get values\n        uint256 amount = s_mintCommitments[requestId].amount;\n        address receiver = s_mintCommitments[requestId].requester;\n\n        // delete commitment\n        delete s_mintCommitments[requestId];\n\n        // do the mint\n        _mint(receiver, amount.mul(actualMintedPercentage).div(oneHundredPercent));\n    }\n\n    function _processMintRequest(address sender, uint256 amount, bytes calldata encryptedData)\n    internal\n    returns (bytes32 requestId, uint256 expiration) {\n        requestId = keccak256(abi.encodePacked(sender, amount, encryptedData));\n        require(s_mintCommitments[requestId].paramsHash == 0, \"Request appears to be a duplicate\");\n        // solhint-disable-next-line not-rely-on-time\n        expiration = block.timestamp.add(getExpiryTime);\n        bytes31 paramsHash = _buildParamsHash(amount, encryptedData, expiration);\n        s_mintCommitments[requestId] = Commitment(paramsHash, sender, expiration, amount);\n        return (requestId, expiration);\n    }\n\n    /**\n     * @notice Build the bytes31 hash from the amount, encryptedData and expiration.\n     * @param amount The amount to be minted (specified in 10^18 decimals)\n     * @param encryptedData The encrypted payload of the request\n     * @param expiration The expiration before the commitment becomes eligible for cleanup\n     * @return hash bytes31\n     */\n    function _buildParamsHash(\n        uint256 amount,\n        bytes calldata encryptedData,\n        uint256 expiration\n    ) internal pure returns (bytes31) {\n        return bytes31(keccak256(abi.encodePacked(amount, encryptedData, expiration)));\n    }\n\n    /**\n     * @dev Reverts if request ID does not exist\n     * @param requestId The given request ID to check in stored `commitments`\n     */\n    modifier validateRequestId(bytes32 requestId) {\n        require(s_mintCommitments[requestId].paramsHash != 0, \"Must have a valid requestId\");\n        _;\n    }\n\n    /**\n     * @dev Reverts if the commitment identified by the request ID has an expiry in the past\n     * @param requestId The given request ID to check in stored `commitments`\n     */\n    modifier validateNotExpired(bytes32 requestId) {\n        // solhint-disable-next-line not-rely-on-time\n        require(s_mintCommitments[requestId].expiration >= block.timestamp, \"Request is expired\");\n        _;\n    }\n\n    /**\n     * @dev Reverts if the commitment has a recorded address different to the requester\n     * @param requester The account making the request\n     */\n    modifier validateSameRequester(bytes32 requestId, address requester) {\n        require(s_mintCommitments[requestId].requester == requester, \"Requester does not match\");\n        _;\n    }\n}\n"}},"settings":{"optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"sources":{"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[976],"Ownable":[112]},"id":113,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"102:23:0"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":2,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":113,"sourceUnit":977,"src":"127:30:0","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":4,"name":"Context","nameLocations":["683:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":976,"src":"683:7:0"},"id":5,"nodeType":"InheritanceSpecifier","src":"683:7:0"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":3,"nodeType":"StructuredDocumentation","src":"159:494:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":112,"linearizedBaseContracts":[112,976],"name":"Ownable","nameLocation":"672:7:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":7,"mutability":"mutable","name":"_owner","nameLocation":"713:6:0","nodeType":"VariableDeclaration","scope":112,"src":"697:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6,"name":"address","nodeType":"ElementaryTypeName","src":"697:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":13,"name":"OwnershipTransferred","nameLocation":"732:20:0","nodeType":"EventDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"769:13:0","nodeType":"VariableDeclaration","scope":13,"src":"753:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8,"name":"address","nodeType":"ElementaryTypeName","src":"753:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"800:8:0","nodeType":"VariableDeclaration","scope":13,"src":"784:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"784:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"752:57:0"},"src":"726:84:0"},{"body":{"id":22,"nodeType":"Block","src":"926:49:0","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":18,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":966,"src":"955:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":19,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"955:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":17,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"936:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":20,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"936:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":21,"nodeType":"ExpressionStatement","src":"936:32:0"}]},"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"816:91:0","text":" @dev Initializes the contract setting the deployer as the initial owner."},"id":23,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":15,"nodeType":"ParameterList","parameters":[],"src":"923:2:0"},"returnParameters":{"id":16,"nodeType":"ParameterList","parameters":[],"src":"926:0:0"},"scope":112,"src":"912:63:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":30,"nodeType":"Block","src":"1084:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":26,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":54,"src":"1094:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":27,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1094:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":28,"nodeType":"ExpressionStatement","src":"1094:13:0"},{"id":29,"nodeType":"PlaceholderStatement","src":"1117:1:0"}]},"documentation":{"id":24,"nodeType":"StructuredDocumentation","src":"981:77:0","text":" @dev Throws if called by any account other than the owner."},"id":31,"name":"onlyOwner","nameLocation":"1072:9:0","nodeType":"ModifierDefinition","parameters":{"id":25,"nodeType":"ParameterList","parameters":[],"src":"1081:2:0"},"src":"1063:62:0","virtual":false,"visibility":"internal"},{"body":{"id":39,"nodeType":"Block","src":"1256:30:0","statements":[{"expression":{"id":37,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"1273:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":36,"id":38,"nodeType":"Return","src":"1266:13:0"}]},"documentation":{"id":32,"nodeType":"StructuredDocumentation","src":"1131:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":40,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1210:5:0","nodeType":"FunctionDefinition","parameters":{"id":33,"nodeType":"ParameterList","parameters":[],"src":"1215:2:0"},"returnParameters":{"id":36,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":40,"src":"1247:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":34,"name":"address","nodeType":"ElementaryTypeName","src":"1247:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1246:9:0"},"scope":112,"src":"1201:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":53,"nodeType":"Block","src":"1404:85:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":49,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":45,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":40,"src":"1422:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":46,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1422:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":47,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":966,"src":"1433:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":48,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1433:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1422:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","id":50,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1447:34:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""},"value":"Ownable: caller is not the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""}],"id":44,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1414:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":51,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1414:68:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":52,"nodeType":"ExpressionStatement","src":"1414:68:0"}]},"documentation":{"id":41,"nodeType":"StructuredDocumentation","src":"1292:62:0","text":" @dev Throws if the sender is not the owner."},"id":54,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1368:11:0","nodeType":"FunctionDefinition","parameters":{"id":42,"nodeType":"ParameterList","parameters":[],"src":"1379:2:0"},"returnParameters":{"id":43,"nodeType":"ParameterList","parameters":[],"src":"1404:0:0"},"scope":112,"src":"1359:130:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":67,"nodeType":"Block","src":"1885:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":63,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1922:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":62,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1914:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":61,"name":"address","nodeType":"ElementaryTypeName","src":"1914:7:0","typeDescriptions":{}}},"id":64,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1914:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":60,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"1895:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":65,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1895:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":66,"nodeType":"ExpressionStatement","src":"1895:30:0"}]},"documentation":{"id":55,"nodeType":"StructuredDocumentation","src":"1495:331:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."},"functionSelector":"715018a6","id":68,"implemented":true,"kind":"function","modifiers":[{"id":58,"kind":"modifierInvocation","modifierName":{"id":57,"name":"onlyOwner","nameLocations":["1875:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"1875:9:0"},"nodeType":"ModifierInvocation","src":"1875:9:0"}],"name":"renounceOwnership","nameLocation":"1840:17:0","nodeType":"FunctionDefinition","parameters":{"id":56,"nodeType":"ParameterList","parameters":[],"src":"1857:2:0"},"returnParameters":{"id":59,"nodeType":"ParameterList","parameters":[],"src":"1885:0:0"},"scope":112,"src":"1831:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":90,"nodeType":"Block","src":"2151:128:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":82,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":77,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":71,"src":"2169:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":80,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2189:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":79,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2181:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":78,"name":"address","nodeType":"ElementaryTypeName","src":"2181:7:0","typeDescriptions":{}}},"id":81,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2181:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2169:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373","id":83,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2193:40:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""},"value":"Ownable: new owner is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""}],"id":76,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2161:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":84,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2161:73:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":85,"nodeType":"ExpressionStatement","src":"2161:73:0"},{"expression":{"arguments":[{"id":87,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":71,"src":"2263:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":86,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"2244:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":88,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2244:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":89,"nodeType":"ExpressionStatement","src":"2244:28:0"}]},"documentation":{"id":69,"nodeType":"StructuredDocumentation","src":"1938:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":91,"implemented":true,"kind":"function","modifiers":[{"id":74,"kind":"modifierInvocation","modifierName":{"id":73,"name":"onlyOwner","nameLocations":["2141:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"2141:9:0"},"nodeType":"ModifierInvocation","src":"2141:9:0"}],"name":"transferOwnership","nameLocation":"2090:17:0","nodeType":"FunctionDefinition","parameters":{"id":72,"nodeType":"ParameterList","parameters":[{"constant":false,"id":71,"mutability":"mutable","name":"newOwner","nameLocation":"2116:8:0","nodeType":"VariableDeclaration","scope":91,"src":"2108:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":70,"name":"address","nodeType":"ElementaryTypeName","src":"2108:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2107:18:0"},"returnParameters":{"id":75,"nodeType":"ParameterList","parameters":[],"src":"2151:0:0"},"scope":112,"src":"2081:198:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":110,"nodeType":"Block","src":"2496:124:0","statements":[{"assignments":[98],"declarations":[{"constant":false,"id":98,"mutability":"mutable","name":"oldOwner","nameLocation":"2514:8:0","nodeType":"VariableDeclaration","scope":110,"src":"2506:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":97,"name":"address","nodeType":"ElementaryTypeName","src":"2506:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":100,"initialValue":{"id":99,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"2525:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2506:25:0"},{"expression":{"id":103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":101,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"2541:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":102,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":94,"src":"2550:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2541:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":104,"nodeType":"ExpressionStatement","src":"2541:17:0"},{"eventCall":{"arguments":[{"id":106,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":98,"src":"2594:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":107,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":94,"src":"2604:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":105,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"2573:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":108,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2573:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":109,"nodeType":"EmitStatement","src":"2568:45:0"}]},"documentation":{"id":92,"nodeType":"StructuredDocumentation","src":"2285:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":111,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2442:18:0","nodeType":"FunctionDefinition","parameters":{"id":95,"nodeType":"ParameterList","parameters":[{"constant":false,"id":94,"mutability":"mutable","name":"newOwner","nameLocation":"2469:8:0","nodeType":"VariableDeclaration","scope":111,"src":"2461:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":93,"name":"address","nodeType":"ElementaryTypeName","src":"2461:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2460:18:0"},"returnParameters":{"id":96,"nodeType":"ParameterList","parameters":[],"src":"2496:0:0"},"scope":112,"src":"2433:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":113,"src":"654:1968:0","usedErrors":[]}],"src":"102:2521:0"},"id":0},"@openzeppelin/contracts/security/Pausable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/security/Pausable.sol","exportedSymbols":{"Context":[976],"Pausable":[220]},"id":221,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":114,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"105:23:1"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":115,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":221,"sourceUnit":977,"src":"130:30:1","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":117,"name":"Context","nameLocations":["632:7:1"],"nodeType":"IdentifierPath","referencedDeclaration":976,"src":"632:7:1"},"id":118,"nodeType":"InheritanceSpecifier","src":"632:7:1"}],"canonicalName":"Pausable","contractDependencies":[],"contractKind":"contract","documentation":{"id":116,"nodeType":"StructuredDocumentation","src":"162:439:1","text":" @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."},"fullyImplemented":true,"id":220,"linearizedBaseContracts":[220,976],"name":"Pausable","nameLocation":"620:8:1","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":119,"nodeType":"StructuredDocumentation","src":"646:73:1","text":" @dev Emitted when the pause is triggered by `account`."},"eventSelector":"62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258","id":123,"name":"Paused","nameLocation":"730:6:1","nodeType":"EventDefinition","parameters":{"id":122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":121,"indexed":false,"mutability":"mutable","name":"account","nameLocation":"745:7:1","nodeType":"VariableDeclaration","scope":123,"src":"737:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":120,"name":"address","nodeType":"ElementaryTypeName","src":"737:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"736:17:1"},"src":"724:30:1"},{"anonymous":false,"documentation":{"id":124,"nodeType":"StructuredDocumentation","src":"760:70:1","text":" @dev Emitted when the pause is lifted by `account`."},"eventSelector":"5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa","id":128,"name":"Unpaused","nameLocation":"841:8:1","nodeType":"EventDefinition","parameters":{"id":127,"nodeType":"ParameterList","parameters":[{"constant":false,"id":126,"indexed":false,"mutability":"mutable","name":"account","nameLocation":"858:7:1","nodeType":"VariableDeclaration","scope":128,"src":"850:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":125,"name":"address","nodeType":"ElementaryTypeName","src":"850:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"849:17:1"},"src":"835:32:1"},{"constant":false,"id":130,"mutability":"mutable","name":"_paused","nameLocation":"886:7:1","nodeType":"VariableDeclaration","scope":220,"src":"873:20:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":129,"name":"bool","nodeType":"ElementaryTypeName","src":"873:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"private"},{"body":{"id":138,"nodeType":"Block","src":"986:32:1","statements":[{"expression":{"id":136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":134,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":130,"src":"996:7:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":135,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1006:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"996:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":137,"nodeType":"ExpressionStatement","src":"996:15:1"}]},"documentation":{"id":131,"nodeType":"StructuredDocumentation","src":"900:67:1","text":" @dev Initializes the contract in unpaused state."},"id":139,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":132,"nodeType":"ParameterList","parameters":[],"src":"983:2:1"},"returnParameters":{"id":133,"nodeType":"ParameterList","parameters":[],"src":"986:0:1"},"scope":220,"src":"972:46:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":146,"nodeType":"Block","src":"1229:47:1","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":142,"name":"_requireNotPaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":176,"src":"1239:17:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1239:19:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":144,"nodeType":"ExpressionStatement","src":"1239:19:1"},{"id":145,"nodeType":"PlaceholderStatement","src":"1268:1:1"}]},"documentation":{"id":140,"nodeType":"StructuredDocumentation","src":"1024:175:1","text":" @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."},"id":147,"name":"whenNotPaused","nameLocation":"1213:13:1","nodeType":"ModifierDefinition","parameters":{"id":141,"nodeType":"ParameterList","parameters":[],"src":"1226:2:1"},"src":"1204:72:1","virtual":false,"visibility":"internal"},{"body":{"id":154,"nodeType":"Block","src":"1476:44:1","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":150,"name":"_requirePaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":187,"src":"1486:14:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":151,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1486:16:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":152,"nodeType":"ExpressionStatement","src":"1486:16:1"},{"id":153,"nodeType":"PlaceholderStatement","src":"1512:1:1"}]},"documentation":{"id":148,"nodeType":"StructuredDocumentation","src":"1282:167:1","text":" @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."},"id":155,"name":"whenPaused","nameLocation":"1463:10:1","nodeType":"ModifierDefinition","parameters":{"id":149,"nodeType":"ParameterList","parameters":[],"src":"1473:2:1"},"src":"1454:66:1","virtual":false,"visibility":"internal"},{"body":{"id":163,"nodeType":"Block","src":"1668:31:1","statements":[{"expression":{"id":161,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":130,"src":"1685:7:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":160,"id":162,"nodeType":"Return","src":"1678:14:1"}]},"documentation":{"id":156,"nodeType":"StructuredDocumentation","src":"1526:84:1","text":" @dev Returns true if the contract is paused, and false otherwise."},"functionSelector":"5c975abb","id":164,"implemented":true,"kind":"function","modifiers":[],"name":"paused","nameLocation":"1624:6:1","nodeType":"FunctionDefinition","parameters":{"id":157,"nodeType":"ParameterList","parameters":[],"src":"1630:2:1"},"returnParameters":{"id":160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":159,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":164,"src":"1662:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":158,"name":"bool","nodeType":"ElementaryTypeName","src":"1662:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1661:6:1"},"scope":220,"src":"1615:84:1","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":175,"nodeType":"Block","src":"1818:55:1","statements":[{"expression":{"arguments":[{"id":171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1836:9:1","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":169,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":164,"src":"1837:6:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":170,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1837:8:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5061757361626c653a20706175736564","id":172,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1847:18:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a","typeString":"literal_string \"Pausable: paused\""},"value":"Pausable: paused"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a","typeString":"literal_string \"Pausable: paused\""}],"id":168,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1828:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":173,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1828:38:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":174,"nodeType":"ExpressionStatement","src":"1828:38:1"}]},"documentation":{"id":165,"nodeType":"StructuredDocumentation","src":"1705:57:1","text":" @dev Throws if the contract is paused."},"id":176,"implemented":true,"kind":"function","modifiers":[],"name":"_requireNotPaused","nameLocation":"1776:17:1","nodeType":"FunctionDefinition","parameters":{"id":166,"nodeType":"ParameterList","parameters":[],"src":"1793:2:1"},"returnParameters":{"id":167,"nodeType":"ParameterList","parameters":[],"src":"1818:0:1"},"scope":220,"src":"1767:106:1","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":186,"nodeType":"Block","src":"1993:58:1","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":181,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":164,"src":"2011:6:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":182,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2011:8:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5061757361626c653a206e6f7420706175736564","id":183,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2021:22:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a","typeString":"literal_string \"Pausable: not paused\""},"value":"Pausable: not paused"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a","typeString":"literal_string \"Pausable: not paused\""}],"id":180,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2003:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":184,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2003:41:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":185,"nodeType":"ExpressionStatement","src":"2003:41:1"}]},"documentation":{"id":177,"nodeType":"StructuredDocumentation","src":"1879:61:1","text":" @dev Throws if the contract is not paused."},"id":187,"implemented":true,"kind":"function","modifiers":[],"name":"_requirePaused","nameLocation":"1954:14:1","nodeType":"FunctionDefinition","parameters":{"id":178,"nodeType":"ParameterList","parameters":[],"src":"1968:2:1"},"returnParameters":{"id":179,"nodeType":"ParameterList","parameters":[],"src":"1993:0:1"},"scope":220,"src":"1945:106:1","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":202,"nodeType":"Block","src":"2235:66:1","statements":[{"expression":{"id":195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":193,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":130,"src":"2245:7:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":194,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2255:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"2245:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":196,"nodeType":"ExpressionStatement","src":"2245:14:1"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":198,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":966,"src":"2281:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":199,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2281:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":197,"name":"Paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":123,"src":"2274:6:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":200,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2274:20:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":201,"nodeType":"EmitStatement","src":"2269:25:1"}]},"documentation":{"id":188,"nodeType":"StructuredDocumentation","src":"2057:124:1","text":" @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."},"id":203,"implemented":true,"kind":"function","modifiers":[{"id":191,"kind":"modifierInvocation","modifierName":{"id":190,"name":"whenNotPaused","nameLocations":["2221:13:1"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"2221:13:1"},"nodeType":"ModifierInvocation","src":"2221:13:1"}],"name":"_pause","nameLocation":"2195:6:1","nodeType":"FunctionDefinition","parameters":{"id":189,"nodeType":"ParameterList","parameters":[],"src":"2201:2:1"},"returnParameters":{"id":192,"nodeType":"ParameterList","parameters":[],"src":"2235:0:1"},"scope":220,"src":"2186:115:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":218,"nodeType":"Block","src":"2481:69:1","statements":[{"expression":{"id":211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":209,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":130,"src":"2491:7:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":210,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2501:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"2491:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":212,"nodeType":"ExpressionStatement","src":"2491:15:1"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":214,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":966,"src":"2530:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":215,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2530:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":213,"name":"Unpaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":128,"src":"2521:8:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":216,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2521:22:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":217,"nodeType":"EmitStatement","src":"2516:27:1"}]},"documentation":{"id":204,"nodeType":"StructuredDocumentation","src":"2307:121:1","text":" @dev Returns to normal state.\n Requirements:\n - The contract must be paused."},"id":219,"implemented":true,"kind":"function","modifiers":[{"id":207,"kind":"modifierInvocation","modifierName":{"id":206,"name":"whenPaused","nameLocations":["2470:10:1"],"nodeType":"IdentifierPath","referencedDeclaration":155,"src":"2470:10:1"},"nodeType":"ModifierInvocation","src":"2470:10:1"}],"name":"_unpause","nameLocation":"2442:8:1","nodeType":"FunctionDefinition","parameters":{"id":205,"nodeType":"ParameterList","parameters":[],"src":"2450:2:1"},"returnParameters":{"id":208,"nodeType":"ParameterList","parameters":[],"src":"2481:0:1"},"scope":220,"src":"2433:117:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":221,"src":"602:1950:1","usedErrors":[]}],"src":"105:2448:1"},"id":1},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","exportedSymbols":{"Context":[976],"ERC20":[807],"IERC20":[885],"IERC20Metadata":[954]},"id":808,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":222,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"105:23:2"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"./IERC20.sol","id":223,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":808,"sourceUnit":886,"src":"130:22:2","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"./extensions/IERC20Metadata.sol","id":224,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":808,"sourceUnit":955,"src":"153:41:2","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":225,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":808,"sourceUnit":977,"src":"195:33:2","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":227,"name":"Context","nameLocations":["1419:7:2"],"nodeType":"IdentifierPath","referencedDeclaration":976,"src":"1419:7:2"},"id":228,"nodeType":"InheritanceSpecifier","src":"1419:7:2"},{"baseName":{"id":229,"name":"IERC20","nameLocations":["1428:6:2"],"nodeType":"IdentifierPath","referencedDeclaration":885,"src":"1428:6:2"},"id":230,"nodeType":"InheritanceSpecifier","src":"1428:6:2"},{"baseName":{"id":231,"name":"IERC20Metadata","nameLocations":["1436:14:2"],"nodeType":"IdentifierPath","referencedDeclaration":954,"src":"1436:14:2"},"id":232,"nodeType":"InheritanceSpecifier","src":"1436:14:2"}],"canonicalName":"ERC20","contractDependencies":[],"contractKind":"contract","documentation":{"id":226,"nodeType":"StructuredDocumentation","src":"230:1170:2","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."},"fullyImplemented":true,"id":807,"linearizedBaseContracts":[807,954,885,976],"name":"ERC20","nameLocation":"1410:5:2","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":236,"mutability":"mutable","name":"_balances","nameLocation":"1493:9:2","nodeType":"VariableDeclaration","scope":807,"src":"1457:45:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":235,"keyType":{"id":233,"name":"address","nodeType":"ElementaryTypeName","src":"1465:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1457:27:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":234,"name":"uint256","nodeType":"ElementaryTypeName","src":"1476:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":242,"mutability":"mutable","name":"_allowances","nameLocation":"1565:11:2","nodeType":"VariableDeclaration","scope":807,"src":"1509:67:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":241,"keyType":{"id":237,"name":"address","nodeType":"ElementaryTypeName","src":"1517:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1509:47:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueType":{"id":240,"keyType":{"id":238,"name":"address","nodeType":"ElementaryTypeName","src":"1536:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1528:27:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":239,"name":"uint256","nodeType":"ElementaryTypeName","src":"1547:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":244,"mutability":"mutable","name":"_totalSupply","nameLocation":"1599:12:2","nodeType":"VariableDeclaration","scope":807,"src":"1583:28:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":243,"name":"uint256","nodeType":"ElementaryTypeName","src":"1583:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":246,"mutability":"mutable","name":"_name","nameLocation":"1633:5:2","nodeType":"VariableDeclaration","scope":807,"src":"1618:20:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":245,"name":"string","nodeType":"ElementaryTypeName","src":"1618:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":248,"mutability":"mutable","name":"_symbol","nameLocation":"1659:7:2","nodeType":"VariableDeclaration","scope":807,"src":"1644:22:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":247,"name":"string","nodeType":"ElementaryTypeName","src":"1644:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":264,"nodeType":"Block","src":"2032:57:2","statements":[{"expression":{"id":258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":256,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":246,"src":"2042:5:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":257,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":251,"src":"2050:5:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2042:13:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":259,"nodeType":"ExpressionStatement","src":"2042:13:2"},{"expression":{"id":262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":260,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":248,"src":"2065:7:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":261,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":253,"src":"2075:7:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2065:17:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":263,"nodeType":"ExpressionStatement","src":"2065:17:2"}]},"documentation":{"id":249,"nodeType":"StructuredDocumentation","src":"1673:298:2","text":" @dev Sets the values for {name} and {symbol}.\n The default value of {decimals} is 18. To select a different value for\n {decimals} you should overload it.\n All two of these values are immutable: they can only be set once during\n construction."},"id":265,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":254,"nodeType":"ParameterList","parameters":[{"constant":false,"id":251,"mutability":"mutable","name":"name_","nameLocation":"2002:5:2","nodeType":"VariableDeclaration","scope":265,"src":"1988:19:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":250,"name":"string","nodeType":"ElementaryTypeName","src":"1988:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":253,"mutability":"mutable","name":"symbol_","nameLocation":"2023:7:2","nodeType":"VariableDeclaration","scope":265,"src":"2009:21:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":252,"name":"string","nodeType":"ElementaryTypeName","src":"2009:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1987:44:2"},"returnParameters":{"id":255,"nodeType":"ParameterList","parameters":[],"src":"2032:0:2"},"scope":807,"src":"1976:113:2","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[941],"body":{"id":274,"nodeType":"Block","src":"2223:29:2","statements":[{"expression":{"id":272,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":246,"src":"2240:5:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":271,"id":273,"nodeType":"Return","src":"2233:12:2"}]},"documentation":{"id":266,"nodeType":"StructuredDocumentation","src":"2095:54:2","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":275,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2163:4:2","nodeType":"FunctionDefinition","overrides":{"id":268,"nodeType":"OverrideSpecifier","overrides":[],"src":"2190:8:2"},"parameters":{"id":267,"nodeType":"ParameterList","parameters":[],"src":"2167:2:2"},"returnParameters":{"id":271,"nodeType":"ParameterList","parameters":[{"constant":false,"id":270,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":275,"src":"2208:13:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":269,"name":"string","nodeType":"ElementaryTypeName","src":"2208:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2207:15:2"},"scope":807,"src":"2154:98:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[947],"body":{"id":284,"nodeType":"Block","src":"2436:31:2","statements":[{"expression":{"id":282,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":248,"src":"2453:7:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":281,"id":283,"nodeType":"Return","src":"2446:14:2"}]},"documentation":{"id":276,"nodeType":"StructuredDocumentation","src":"2258:102:2","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":285,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2374:6:2","nodeType":"FunctionDefinition","overrides":{"id":278,"nodeType":"OverrideSpecifier","overrides":[],"src":"2403:8:2"},"parameters":{"id":277,"nodeType":"ParameterList","parameters":[],"src":"2380:2:2"},"returnParameters":{"id":281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":280,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":285,"src":"2421:13:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":279,"name":"string","nodeType":"ElementaryTypeName","src":"2421:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2420:15:2"},"scope":807,"src":"2365:102:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[953],"body":{"id":294,"nodeType":"Block","src":"3156:26:2","statements":[{"expression":{"hexValue":"3138","id":292,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3173:2:2","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":291,"id":293,"nodeType":"Return","src":"3166:9:2"}]},"documentation":{"id":286,"nodeType":"StructuredDocumentation","src":"2473:613:2","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless this function is\n overridden;\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":295,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"3100:8:2","nodeType":"FunctionDefinition","overrides":{"id":288,"nodeType":"OverrideSpecifier","overrides":[],"src":"3131:8:2"},"parameters":{"id":287,"nodeType":"ParameterList","parameters":[],"src":"3108:2:2"},"returnParameters":{"id":291,"nodeType":"ParameterList","parameters":[{"constant":false,"id":290,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":295,"src":"3149:5:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":289,"name":"uint8","nodeType":"ElementaryTypeName","src":"3149:5:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"3148:7:2"},"scope":807,"src":"3091:91:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[834],"body":{"id":304,"nodeType":"Block","src":"3312:36:2","statements":[{"expression":{"id":302,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":244,"src":"3329:12:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":301,"id":303,"nodeType":"Return","src":"3322:19:2"}]},"documentation":{"id":296,"nodeType":"StructuredDocumentation","src":"3188:49:2","text":" @dev See {IERC20-totalSupply}."},"functionSelector":"18160ddd","id":305,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"3251:11:2","nodeType":"FunctionDefinition","overrides":{"id":298,"nodeType":"OverrideSpecifier","overrides":[],"src":"3285:8:2"},"parameters":{"id":297,"nodeType":"ParameterList","parameters":[],"src":"3262:2:2"},"returnParameters":{"id":301,"nodeType":"ParameterList","parameters":[{"constant":false,"id":300,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":305,"src":"3303:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":299,"name":"uint256","nodeType":"ElementaryTypeName","src":"3303:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3302:9:2"},"scope":807,"src":"3242:106:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[842],"body":{"id":318,"nodeType":"Block","src":"3489:42:2","statements":[{"expression":{"baseExpression":{"id":314,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":236,"src":"3506:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":316,"indexExpression":{"id":315,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":308,"src":"3516:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3506:18:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":313,"id":317,"nodeType":"Return","src":"3499:25:2"}]},"documentation":{"id":306,"nodeType":"StructuredDocumentation","src":"3354:47:2","text":" @dev See {IERC20-balanceOf}."},"functionSelector":"70a08231","id":319,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"3415:9:2","nodeType":"FunctionDefinition","overrides":{"id":310,"nodeType":"OverrideSpecifier","overrides":[],"src":"3462:8:2"},"parameters":{"id":309,"nodeType":"ParameterList","parameters":[{"constant":false,"id":308,"mutability":"mutable","name":"account","nameLocation":"3433:7:2","nodeType":"VariableDeclaration","scope":319,"src":"3425:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":307,"name":"address","nodeType":"ElementaryTypeName","src":"3425:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3424:17:2"},"returnParameters":{"id":313,"nodeType":"ParameterList","parameters":[{"constant":false,"id":312,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":319,"src":"3480:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":311,"name":"uint256","nodeType":"ElementaryTypeName","src":"3480:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3479:9:2"},"scope":807,"src":"3406:125:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[852],"body":{"id":343,"nodeType":"Block","src":"3812:104:2","statements":[{"assignments":[331],"declarations":[{"constant":false,"id":331,"mutability":"mutable","name":"owner","nameLocation":"3830:5:2","nodeType":"VariableDeclaration","scope":343,"src":"3822:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":330,"name":"address","nodeType":"ElementaryTypeName","src":"3822:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":334,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":332,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":966,"src":"3838:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":333,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3838:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3822:28:2"},{"expression":{"arguments":[{"id":336,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":331,"src":"3870:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":337,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":322,"src":"3877:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":338,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":324,"src":"3881:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":335,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":567,"src":"3860:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":339,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3860:28:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":340,"nodeType":"ExpressionStatement","src":"3860:28:2"},{"expression":{"hexValue":"74727565","id":341,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3905:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":329,"id":342,"nodeType":"Return","src":"3898:11:2"}]},"documentation":{"id":320,"nodeType":"StructuredDocumentation","src":"3537:185:2","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `amount`."},"functionSelector":"a9059cbb","id":344,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"3736:8:2","nodeType":"FunctionDefinition","overrides":{"id":326,"nodeType":"OverrideSpecifier","overrides":[],"src":"3788:8:2"},"parameters":{"id":325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":322,"mutability":"mutable","name":"to","nameLocation":"3753:2:2","nodeType":"VariableDeclaration","scope":344,"src":"3745:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":321,"name":"address","nodeType":"ElementaryTypeName","src":"3745:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":324,"mutability":"mutable","name":"amount","nameLocation":"3765:6:2","nodeType":"VariableDeclaration","scope":344,"src":"3757:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":323,"name":"uint256","nodeType":"ElementaryTypeName","src":"3757:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3744:28:2"},"returnParameters":{"id":329,"nodeType":"ParameterList","parameters":[{"constant":false,"id":328,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":344,"src":"3806:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":327,"name":"bool","nodeType":"ElementaryTypeName","src":"3806:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3805:6:2"},"scope":807,"src":"3727:189:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[862],"body":{"id":361,"nodeType":"Block","src":"4072:51:2","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":355,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":242,"src":"4089:11:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":357,"indexExpression":{"id":356,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":347,"src":"4101:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4089:18:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":359,"indexExpression":{"id":358,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":349,"src":"4108:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4089:27:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":354,"id":360,"nodeType":"Return","src":"4082:34:2"}]},"documentation":{"id":345,"nodeType":"StructuredDocumentation","src":"3922:47:2","text":" @dev See {IERC20-allowance}."},"functionSelector":"dd62ed3e","id":362,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"3983:9:2","nodeType":"FunctionDefinition","overrides":{"id":351,"nodeType":"OverrideSpecifier","overrides":[],"src":"4045:8:2"},"parameters":{"id":350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":347,"mutability":"mutable","name":"owner","nameLocation":"4001:5:2","nodeType":"VariableDeclaration","scope":362,"src":"3993:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":346,"name":"address","nodeType":"ElementaryTypeName","src":"3993:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":349,"mutability":"mutable","name":"spender","nameLocation":"4016:7:2","nodeType":"VariableDeclaration","scope":362,"src":"4008:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":348,"name":"address","nodeType":"ElementaryTypeName","src":"4008:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3992:32:2"},"returnParameters":{"id":354,"nodeType":"ParameterList","parameters":[{"constant":false,"id":353,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":362,"src":"4063:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":352,"name":"uint256","nodeType":"ElementaryTypeName","src":"4063:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4062:9:2"},"scope":807,"src":"3974:149:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[872],"body":{"id":386,"nodeType":"Block","src":"4520:108:2","statements":[{"assignments":[374],"declarations":[{"constant":false,"id":374,"mutability":"mutable","name":"owner","nameLocation":"4538:5:2","nodeType":"VariableDeclaration","scope":386,"src":"4530:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":373,"name":"address","nodeType":"ElementaryTypeName","src":"4530:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":377,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":375,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":966,"src":"4546:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":376,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4546:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4530:28:2"},{"expression":{"arguments":[{"id":379,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":374,"src":"4577:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":380,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":365,"src":"4584:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":381,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":367,"src":"4593:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":378,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":741,"src":"4568:8:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":382,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4568:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":383,"nodeType":"ExpressionStatement","src":"4568:32:2"},{"expression":{"hexValue":"74727565","id":384,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4617:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":372,"id":385,"nodeType":"Return","src":"4610:11:2"}]},"documentation":{"id":363,"nodeType":"StructuredDocumentation","src":"4129:297:2","text":" @dev See {IERC20-approve}.\n NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":387,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4440:7:2","nodeType":"FunctionDefinition","overrides":{"id":369,"nodeType":"OverrideSpecifier","overrides":[],"src":"4496:8:2"},"parameters":{"id":368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":365,"mutability":"mutable","name":"spender","nameLocation":"4456:7:2","nodeType":"VariableDeclaration","scope":387,"src":"4448:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":364,"name":"address","nodeType":"ElementaryTypeName","src":"4448:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":367,"mutability":"mutable","name":"amount","nameLocation":"4473:6:2","nodeType":"VariableDeclaration","scope":387,"src":"4465:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":366,"name":"uint256","nodeType":"ElementaryTypeName","src":"4465:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4447:33:2"},"returnParameters":{"id":372,"nodeType":"ParameterList","parameters":[{"constant":false,"id":371,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":387,"src":"4514:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":370,"name":"bool","nodeType":"ElementaryTypeName","src":"4514:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4513:6:2"},"scope":807,"src":"4431:197:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[884],"body":{"id":419,"nodeType":"Block","src":"5323:153:2","statements":[{"assignments":[401],"declarations":[{"constant":false,"id":401,"mutability":"mutable","name":"spender","nameLocation":"5341:7:2","nodeType":"VariableDeclaration","scope":419,"src":"5333:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":400,"name":"address","nodeType":"ElementaryTypeName","src":"5333:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":404,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":402,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":966,"src":"5351:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":403,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5351:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5333:30:2"},{"expression":{"arguments":[{"id":406,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":390,"src":"5389:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":407,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":401,"src":"5395:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":408,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":394,"src":"5404:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":405,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":784,"src":"5373:15:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":409,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5373:38:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":410,"nodeType":"ExpressionStatement","src":"5373:38:2"},{"expression":{"arguments":[{"id":412,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":390,"src":"5431:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":413,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":392,"src":"5437:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":414,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":394,"src":"5441:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":411,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":567,"src":"5421:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":415,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5421:27:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":416,"nodeType":"ExpressionStatement","src":"5421:27:2"},{"expression":{"hexValue":"74727565","id":417,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5465:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":399,"id":418,"nodeType":"Return","src":"5458:11:2"}]},"documentation":{"id":388,"nodeType":"StructuredDocumentation","src":"4634:551:2","text":" @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`.\n - the caller must have allowance for ``from``'s tokens of at least\n `amount`."},"functionSelector":"23b872dd","id":420,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"5199:12:2","nodeType":"FunctionDefinition","overrides":{"id":396,"nodeType":"OverrideSpecifier","overrides":[],"src":"5299:8:2"},"parameters":{"id":395,"nodeType":"ParameterList","parameters":[{"constant":false,"id":390,"mutability":"mutable","name":"from","nameLocation":"5229:4:2","nodeType":"VariableDeclaration","scope":420,"src":"5221:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":389,"name":"address","nodeType":"ElementaryTypeName","src":"5221:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":392,"mutability":"mutable","name":"to","nameLocation":"5251:2:2","nodeType":"VariableDeclaration","scope":420,"src":"5243:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":391,"name":"address","nodeType":"ElementaryTypeName","src":"5243:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":394,"mutability":"mutable","name":"amount","nameLocation":"5271:6:2","nodeType":"VariableDeclaration","scope":420,"src":"5263:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":393,"name":"uint256","nodeType":"ElementaryTypeName","src":"5263:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5211:72:2"},"returnParameters":{"id":399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":398,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":420,"src":"5317:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":397,"name":"bool","nodeType":"ElementaryTypeName","src":"5317:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5316:6:2"},"scope":807,"src":"5190:286:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":448,"nodeType":"Block","src":"5965:140:2","statements":[{"assignments":[431],"declarations":[{"constant":false,"id":431,"mutability":"mutable","name":"owner","nameLocation":"5983:5:2","nodeType":"VariableDeclaration","scope":448,"src":"5975:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":430,"name":"address","nodeType":"ElementaryTypeName","src":"5975:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":434,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":432,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":966,"src":"5991:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":433,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5991:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5975:28:2"},{"expression":{"arguments":[{"id":436,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":431,"src":"6022:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":437,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":423,"src":"6029:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":439,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":431,"src":"6048:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":440,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":423,"src":"6055:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":438,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":362,"src":"6038:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":441,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6038:25:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":442,"name":"addedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":425,"src":"6066:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6038:38:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":435,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":741,"src":"6013:8:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":444,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6013:64:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":445,"nodeType":"ExpressionStatement","src":"6013:64:2"},{"expression":{"hexValue":"74727565","id":446,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6094:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":429,"id":447,"nodeType":"Return","src":"6087:11:2"}]},"documentation":{"id":421,"nodeType":"StructuredDocumentation","src":"5482:384:2","text":" @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"39509351","id":449,"implemented":true,"kind":"function","modifiers":[],"name":"increaseAllowance","nameLocation":"5880:17:2","nodeType":"FunctionDefinition","parameters":{"id":426,"nodeType":"ParameterList","parameters":[{"constant":false,"id":423,"mutability":"mutable","name":"spender","nameLocation":"5906:7:2","nodeType":"VariableDeclaration","scope":449,"src":"5898:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":422,"name":"address","nodeType":"ElementaryTypeName","src":"5898:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":425,"mutability":"mutable","name":"addedValue","nameLocation":"5923:10:2","nodeType":"VariableDeclaration","scope":449,"src":"5915:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":424,"name":"uint256","nodeType":"ElementaryTypeName","src":"5915:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5897:37:2"},"returnParameters":{"id":429,"nodeType":"ParameterList","parameters":[{"constant":false,"id":428,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":449,"src":"5959:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":427,"name":"bool","nodeType":"ElementaryTypeName","src":"5959:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5958:6:2"},"scope":807,"src":"5871:234:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":489,"nodeType":"Block","src":"6691:328:2","statements":[{"assignments":[460],"declarations":[{"constant":false,"id":460,"mutability":"mutable","name":"owner","nameLocation":"6709:5:2","nodeType":"VariableDeclaration","scope":489,"src":"6701:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":459,"name":"address","nodeType":"ElementaryTypeName","src":"6701:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":463,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":461,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":966,"src":"6717:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":462,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6717:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6701:28:2"},{"assignments":[465],"declarations":[{"constant":false,"id":465,"mutability":"mutable","name":"currentAllowance","nameLocation":"6747:16:2","nodeType":"VariableDeclaration","scope":489,"src":"6739:24:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":464,"name":"uint256","nodeType":"ElementaryTypeName","src":"6739:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":470,"initialValue":{"arguments":[{"id":467,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":460,"src":"6776:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":468,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":452,"src":"6783:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":466,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":362,"src":"6766:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":469,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6766:25:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6739:52:2"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":472,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":465,"src":"6809:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":473,"name":"subtractedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":454,"src":"6829:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6809:35:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f","id":475,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6846:39:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","typeString":"literal_string \"ERC20: decreased allowance below zero\""},"value":"ERC20: decreased allowance below zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","typeString":"literal_string \"ERC20: decreased allowance below zero\""}],"id":471,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6801:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":476,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6801:85:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":477,"nodeType":"ExpressionStatement","src":"6801:85:2"},{"id":486,"nodeType":"UncheckedBlock","src":"6896:95:2","statements":[{"expression":{"arguments":[{"id":479,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":460,"src":"6929:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":480,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":452,"src":"6936:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":481,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":465,"src":"6945:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":482,"name":"subtractedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":454,"src":"6964:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6945:34:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":478,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":741,"src":"6920:8:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6920:60:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":485,"nodeType":"ExpressionStatement","src":"6920:60:2"}]},{"expression":{"hexValue":"74727565","id":487,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7008:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":458,"id":488,"nodeType":"Return","src":"7001:11:2"}]},"documentation":{"id":450,"nodeType":"StructuredDocumentation","src":"6111:476:2","text":" @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."},"functionSelector":"a457c2d7","id":490,"implemented":true,"kind":"function","modifiers":[],"name":"decreaseAllowance","nameLocation":"6601:17:2","nodeType":"FunctionDefinition","parameters":{"id":455,"nodeType":"ParameterList","parameters":[{"constant":false,"id":452,"mutability":"mutable","name":"spender","nameLocation":"6627:7:2","nodeType":"VariableDeclaration","scope":490,"src":"6619:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":451,"name":"address","nodeType":"ElementaryTypeName","src":"6619:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":454,"mutability":"mutable","name":"subtractedValue","nameLocation":"6644:15:2","nodeType":"VariableDeclaration","scope":490,"src":"6636:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":453,"name":"uint256","nodeType":"ElementaryTypeName","src":"6636:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6618:42:2"},"returnParameters":{"id":458,"nodeType":"ParameterList","parameters":[{"constant":false,"id":457,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":490,"src":"6685:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":456,"name":"bool","nodeType":"ElementaryTypeName","src":"6685:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6684:6:2"},"scope":807,"src":"6592:427:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":566,"nodeType":"Block","src":"7581:710:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":501,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":493,"src":"7599:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":504,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7615:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":503,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7607:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":502,"name":"address","nodeType":"ElementaryTypeName","src":"7607:7:2","typeDescriptions":{}}},"id":505,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7607:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7599:18:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373","id":507,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7619:39:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","typeString":"literal_string \"ERC20: transfer from the zero address\""},"value":"ERC20: transfer from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","typeString":"literal_string \"ERC20: transfer from the zero address\""}],"id":500,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7591:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":508,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7591:68:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":509,"nodeType":"ExpressionStatement","src":"7591:68:2"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":511,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":495,"src":"7677:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":514,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7691:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":513,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7683:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":512,"name":"address","nodeType":"ElementaryTypeName","src":"7683:7:2","typeDescriptions":{}}},"id":515,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7683:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7677:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e7366657220746f20746865207a65726f2061646472657373","id":517,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7695:37:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","typeString":"literal_string \"ERC20: transfer to the zero address\""},"value":"ERC20: transfer to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","typeString":"literal_string \"ERC20: transfer to the zero address\""}],"id":510,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7669:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":518,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7669:64:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":519,"nodeType":"ExpressionStatement","src":"7669:64:2"},{"expression":{"arguments":[{"id":521,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":493,"src":"7765:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":522,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":495,"src":"7771:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":523,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":497,"src":"7775:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":520,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":795,"src":"7744:20:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":524,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7744:38:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":525,"nodeType":"ExpressionStatement","src":"7744:38:2"},{"assignments":[527],"declarations":[{"constant":false,"id":527,"mutability":"mutable","name":"fromBalance","nameLocation":"7801:11:2","nodeType":"VariableDeclaration","scope":566,"src":"7793:19:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":526,"name":"uint256","nodeType":"ElementaryTypeName","src":"7793:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":531,"initialValue":{"baseExpression":{"id":528,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":236,"src":"7815:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":530,"indexExpression":{"id":529,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":493,"src":"7825:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7815:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7793:37:2"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":533,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":527,"src":"7848:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":534,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":497,"src":"7863:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7848:21:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365","id":536,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7871:40:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","typeString":"literal_string \"ERC20: transfer amount exceeds balance\""},"value":"ERC20: transfer amount exceeds balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","typeString":"literal_string \"ERC20: transfer amount exceeds balance\""}],"id":532,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7840:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":537,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7840:72:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":538,"nodeType":"ExpressionStatement","src":"7840:72:2"},{"id":553,"nodeType":"UncheckedBlock","src":"7922:273:2","statements":[{"expression":{"id":545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":539,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":236,"src":"7946:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":541,"indexExpression":{"id":540,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":493,"src":"7956:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7946:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":542,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":527,"src":"7964:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":543,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":497,"src":"7978:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7964:20:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7946:38:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":546,"nodeType":"ExpressionStatement","src":"7946:38:2"},{"expression":{"id":551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":547,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":236,"src":"8161:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":549,"indexExpression":{"id":548,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":495,"src":"8171:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8161:13:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":550,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":497,"src":"8178:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8161:23:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":552,"nodeType":"ExpressionStatement","src":"8161:23:2"}]},{"eventCall":{"arguments":[{"id":555,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":493,"src":"8219:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":556,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":495,"src":"8225:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":557,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":497,"src":"8229:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":554,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":819,"src":"8210:8:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":558,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8210:26:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":559,"nodeType":"EmitStatement","src":"8205:31:2"},{"expression":{"arguments":[{"id":561,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":493,"src":"8267:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":562,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":495,"src":"8273:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":563,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":497,"src":"8277:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":560,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":806,"src":"8247:19:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":564,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8247:37:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":565,"nodeType":"ExpressionStatement","src":"8247:37:2"}]},"documentation":{"id":491,"nodeType":"StructuredDocumentation","src":"7025:443:2","text":" @dev Moves `amount` of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`."},"id":567,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"7482:9:2","nodeType":"FunctionDefinition","parameters":{"id":498,"nodeType":"ParameterList","parameters":[{"constant":false,"id":493,"mutability":"mutable","name":"from","nameLocation":"7509:4:2","nodeType":"VariableDeclaration","scope":567,"src":"7501:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":492,"name":"address","nodeType":"ElementaryTypeName","src":"7501:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":495,"mutability":"mutable","name":"to","nameLocation":"7531:2:2","nodeType":"VariableDeclaration","scope":567,"src":"7523:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":494,"name":"address","nodeType":"ElementaryTypeName","src":"7523:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":497,"mutability":"mutable","name":"amount","nameLocation":"7551:6:2","nodeType":"VariableDeclaration","scope":567,"src":"7543:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":496,"name":"uint256","nodeType":"ElementaryTypeName","src":"7543:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7491:72:2"},"returnParameters":{"id":499,"nodeType":"ParameterList","parameters":[],"src":"7581:0:2"},"scope":807,"src":"7473:818:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":623,"nodeType":"Block","src":"8632:470:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":576,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":570,"src":"8650:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8669:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":578,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8661:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":577,"name":"address","nodeType":"ElementaryTypeName","src":"8661:7:2","typeDescriptions":{}}},"id":580,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8661:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8650:21:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206d696e7420746f20746865207a65726f2061646472657373","id":582,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8673:33:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","typeString":"literal_string \"ERC20: mint to the zero address\""},"value":"ERC20: mint to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","typeString":"literal_string \"ERC20: mint to the zero address\""}],"id":575,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8642:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":583,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8642:65:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":584,"nodeType":"ExpressionStatement","src":"8642:65:2"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":588,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8747:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":587,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8739:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":586,"name":"address","nodeType":"ElementaryTypeName","src":"8739:7:2","typeDescriptions":{}}},"id":589,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8739:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":590,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":570,"src":"8751:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":591,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":572,"src":"8760:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":585,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":795,"src":"8718:20:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":592,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8718:49:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":593,"nodeType":"ExpressionStatement","src":"8718:49:2"},{"expression":{"id":596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":594,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":244,"src":"8778:12:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":595,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":572,"src":"8794:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8778:22:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":597,"nodeType":"ExpressionStatement","src":"8778:22:2"},{"id":604,"nodeType":"UncheckedBlock","src":"8810:175:2","statements":[{"expression":{"id":602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":598,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":236,"src":"8946:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":600,"indexExpression":{"id":599,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":570,"src":"8956:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8946:18:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":601,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":572,"src":"8968:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8946:28:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":603,"nodeType":"ExpressionStatement","src":"8946:28:2"}]},{"eventCall":{"arguments":[{"arguments":[{"hexValue":"30","id":608,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9016:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":607,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9008:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":606,"name":"address","nodeType":"ElementaryTypeName","src":"9008:7:2","typeDescriptions":{}}},"id":609,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9008:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":610,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":570,"src":"9020:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":611,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":572,"src":"9029:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":605,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":819,"src":"8999:8:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":612,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8999:37:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":613,"nodeType":"EmitStatement","src":"8994:42:2"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":617,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9075:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":616,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9067:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":615,"name":"address","nodeType":"ElementaryTypeName","src":"9067:7:2","typeDescriptions":{}}},"id":618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9067:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":619,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":570,"src":"9079:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":620,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":572,"src":"9088:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":614,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":806,"src":"9047:19:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":621,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9047:48:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":622,"nodeType":"ExpressionStatement","src":"9047:48:2"}]},"documentation":{"id":568,"nodeType":"StructuredDocumentation","src":"8297:265:2","text":"@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."},"id":624,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"8576:5:2","nodeType":"FunctionDefinition","parameters":{"id":573,"nodeType":"ParameterList","parameters":[{"constant":false,"id":570,"mutability":"mutable","name":"account","nameLocation":"8590:7:2","nodeType":"VariableDeclaration","scope":624,"src":"8582:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":569,"name":"address","nodeType":"ElementaryTypeName","src":"8582:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":572,"mutability":"mutable","name":"amount","nameLocation":"8607:6:2","nodeType":"VariableDeclaration","scope":624,"src":"8599:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":571,"name":"uint256","nodeType":"ElementaryTypeName","src":"8599:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8581:33:2"},"returnParameters":{"id":574,"nodeType":"ParameterList","parameters":[],"src":"8632:0:2"},"scope":807,"src":"8567:535:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":695,"nodeType":"Block","src":"9487:594:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":633,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":627,"src":"9505:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":636,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9524:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":635,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9516:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":634,"name":"address","nodeType":"ElementaryTypeName","src":"9516:7:2","typeDescriptions":{}}},"id":637,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9516:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9505:21:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206275726e2066726f6d20746865207a65726f2061646472657373","id":639,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9528:35:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f","typeString":"literal_string \"ERC20: burn from the zero address\""},"value":"ERC20: burn from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f","typeString":"literal_string \"ERC20: burn from the zero address\""}],"id":632,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9497:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":640,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9497:67:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":641,"nodeType":"ExpressionStatement","src":"9497:67:2"},{"expression":{"arguments":[{"id":643,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":627,"src":"9596:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":646,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9613:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":645,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9605:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":644,"name":"address","nodeType":"ElementaryTypeName","src":"9605:7:2","typeDescriptions":{}}},"id":647,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9605:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":648,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":629,"src":"9617:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":642,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":795,"src":"9575:20:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":649,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9575:49:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":650,"nodeType":"ExpressionStatement","src":"9575:49:2"},{"assignments":[652],"declarations":[{"constant":false,"id":652,"mutability":"mutable","name":"accountBalance","nameLocation":"9643:14:2","nodeType":"VariableDeclaration","scope":695,"src":"9635:22:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":651,"name":"uint256","nodeType":"ElementaryTypeName","src":"9635:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":656,"initialValue":{"baseExpression":{"id":653,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":236,"src":"9660:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":655,"indexExpression":{"id":654,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":627,"src":"9670:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9660:18:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9635:43:2"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":658,"name":"accountBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":652,"src":"9696:14:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":659,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":629,"src":"9714:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9696:24:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365","id":661,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9722:36:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd","typeString":"literal_string \"ERC20: burn amount exceeds balance\""},"value":"ERC20: burn amount exceeds balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd","typeString":"literal_string \"ERC20: burn amount exceeds balance\""}],"id":657,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9688:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":662,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9688:71:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":663,"nodeType":"ExpressionStatement","src":"9688:71:2"},{"id":676,"nodeType":"UncheckedBlock","src":"9769:194:2","statements":[{"expression":{"id":670,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":664,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":236,"src":"9793:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":666,"indexExpression":{"id":665,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":627,"src":"9803:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9793:18:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":667,"name":"accountBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":652,"src":"9814:14:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":668,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":629,"src":"9831:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9814:23:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9793:44:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":671,"nodeType":"ExpressionStatement","src":"9793:44:2"},{"expression":{"id":674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":672,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":244,"src":"9930:12:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":673,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":629,"src":"9946:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9930:22:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":675,"nodeType":"ExpressionStatement","src":"9930:22:2"}]},{"eventCall":{"arguments":[{"id":678,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":627,"src":"9987:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":681,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10004:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":680,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9996:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":679,"name":"address","nodeType":"ElementaryTypeName","src":"9996:7:2","typeDescriptions":{}}},"id":682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9996:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":683,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":629,"src":"10008:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":677,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":819,"src":"9978:8:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":684,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9978:37:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":685,"nodeType":"EmitStatement","src":"9973:42:2"},{"expression":{"arguments":[{"id":687,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":627,"src":"10046:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":690,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10063:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":689,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10055:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":688,"name":"address","nodeType":"ElementaryTypeName","src":"10055:7:2","typeDescriptions":{}}},"id":691,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10055:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":692,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":629,"src":"10067:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":686,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":806,"src":"10026:19:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":693,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10026:48:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":694,"nodeType":"ExpressionStatement","src":"10026:48:2"}]},"documentation":{"id":625,"nodeType":"StructuredDocumentation","src":"9108:309:2","text":" @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."},"id":696,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"9431:5:2","nodeType":"FunctionDefinition","parameters":{"id":630,"nodeType":"ParameterList","parameters":[{"constant":false,"id":627,"mutability":"mutable","name":"account","nameLocation":"9445:7:2","nodeType":"VariableDeclaration","scope":696,"src":"9437:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":626,"name":"address","nodeType":"ElementaryTypeName","src":"9437:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":629,"mutability":"mutable","name":"amount","nameLocation":"9462:6:2","nodeType":"VariableDeclaration","scope":696,"src":"9454:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":628,"name":"uint256","nodeType":"ElementaryTypeName","src":"9454:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9436:33:2"},"returnParameters":{"id":631,"nodeType":"ParameterList","parameters":[],"src":"9487:0:2"},"scope":807,"src":"9422:659:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":740,"nodeType":"Block","src":"10617:257:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":707,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":699,"src":"10635:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":710,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10652:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":709,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10644:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":708,"name":"address","nodeType":"ElementaryTypeName","src":"10644:7:2","typeDescriptions":{}}},"id":711,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10644:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10635:19:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373","id":713,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10656:38:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","typeString":"literal_string \"ERC20: approve from the zero address\""},"value":"ERC20: approve from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","typeString":"literal_string \"ERC20: approve from the zero address\""}],"id":706,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10627:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":714,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10627:68:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":715,"nodeType":"ExpressionStatement","src":"10627:68:2"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":717,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":701,"src":"10713:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":720,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10732:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":719,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10724:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":718,"name":"address","nodeType":"ElementaryTypeName","src":"10724:7:2","typeDescriptions":{}}},"id":721,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10724:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10713:21:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20617070726f766520746f20746865207a65726f2061646472657373","id":723,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10736:36:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","typeString":"literal_string \"ERC20: approve to the zero address\""},"value":"ERC20: approve to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","typeString":"literal_string \"ERC20: approve to the zero address\""}],"id":716,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10705:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":724,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10705:68:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":725,"nodeType":"ExpressionStatement","src":"10705:68:2"},{"expression":{"id":732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":726,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":242,"src":"10784:11:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":729,"indexExpression":{"id":727,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":699,"src":"10796:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10784:18:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":730,"indexExpression":{"id":728,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":701,"src":"10803:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10784:27:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":731,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":703,"src":"10814:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10784:36:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":733,"nodeType":"ExpressionStatement","src":"10784:36:2"},{"eventCall":{"arguments":[{"id":735,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":699,"src":"10844:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":736,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":701,"src":"10851:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":737,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":703,"src":"10860:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":734,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":828,"src":"10835:8:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":738,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10835:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":739,"nodeType":"EmitStatement","src":"10830:37:2"}]},"documentation":{"id":697,"nodeType":"StructuredDocumentation","src":"10087:412:2","text":" @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."},"id":741,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"10513:8:2","nodeType":"FunctionDefinition","parameters":{"id":704,"nodeType":"ParameterList","parameters":[{"constant":false,"id":699,"mutability":"mutable","name":"owner","nameLocation":"10539:5:2","nodeType":"VariableDeclaration","scope":741,"src":"10531:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":698,"name":"address","nodeType":"ElementaryTypeName","src":"10531:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":701,"mutability":"mutable","name":"spender","nameLocation":"10562:7:2","nodeType":"VariableDeclaration","scope":741,"src":"10554:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":700,"name":"address","nodeType":"ElementaryTypeName","src":"10554:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":703,"mutability":"mutable","name":"amount","nameLocation":"10587:6:2","nodeType":"VariableDeclaration","scope":741,"src":"10579:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":702,"name":"uint256","nodeType":"ElementaryTypeName","src":"10579:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10521:78:2"},"returnParameters":{"id":705,"nodeType":"ParameterList","parameters":[],"src":"10617:0:2"},"scope":807,"src":"10504:370:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":783,"nodeType":"Block","src":"11275:321:2","statements":[{"assignments":[752],"declarations":[{"constant":false,"id":752,"mutability":"mutable","name":"currentAllowance","nameLocation":"11293:16:2","nodeType":"VariableDeclaration","scope":783,"src":"11285:24:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":751,"name":"uint256","nodeType":"ElementaryTypeName","src":"11285:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":757,"initialValue":{"arguments":[{"id":754,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":744,"src":"11322:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":755,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":746,"src":"11329:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":753,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":362,"src":"11312:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":756,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11312:25:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11285:52:2"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":758,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":752,"src":"11351:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":761,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11376:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":760,"name":"uint256","nodeType":"ElementaryTypeName","src":"11376:7:2","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":759,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11371:4:2","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":762,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11371:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":763,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11385:3:2","memberName":"max","nodeType":"MemberAccess","src":"11371:17:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11351:37:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":782,"nodeType":"IfStatement","src":"11347:243:2","trueBody":{"id":781,"nodeType":"Block","src":"11390:200:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":766,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":752,"src":"11412:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":767,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":748,"src":"11432:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11412:26:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20696e73756666696369656e7420616c6c6f77616e6365","id":769,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11440:31:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","typeString":"literal_string \"ERC20: insufficient allowance\""},"value":"ERC20: insufficient allowance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","typeString":"literal_string \"ERC20: insufficient allowance\""}],"id":765,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11404:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":770,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11404:68:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":771,"nodeType":"ExpressionStatement","src":"11404:68:2"},{"id":780,"nodeType":"UncheckedBlock","src":"11486:94:2","statements":[{"expression":{"arguments":[{"id":773,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":744,"src":"11523:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":774,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":746,"src":"11530:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":775,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":752,"src":"11539:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":776,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":748,"src":"11558:6:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11539:25:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":772,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":741,"src":"11514:8:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":778,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11514:51:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":779,"nodeType":"ExpressionStatement","src":"11514:51:2"}]}]}}]},"documentation":{"id":742,"nodeType":"StructuredDocumentation","src":"10880:270:2","text":" @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n Does not update the allowance amount in case of infinite allowance.\n Revert if not enough allowance is available.\n Might emit an {Approval} event."},"id":784,"implemented":true,"kind":"function","modifiers":[],"name":"_spendAllowance","nameLocation":"11164:15:2","nodeType":"FunctionDefinition","parameters":{"id":749,"nodeType":"ParameterList","parameters":[{"constant":false,"id":744,"mutability":"mutable","name":"owner","nameLocation":"11197:5:2","nodeType":"VariableDeclaration","scope":784,"src":"11189:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":743,"name":"address","nodeType":"ElementaryTypeName","src":"11189:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":746,"mutability":"mutable","name":"spender","nameLocation":"11220:7:2","nodeType":"VariableDeclaration","scope":784,"src":"11212:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":745,"name":"address","nodeType":"ElementaryTypeName","src":"11212:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":748,"mutability":"mutable","name":"amount","nameLocation":"11245:6:2","nodeType":"VariableDeclaration","scope":784,"src":"11237:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":747,"name":"uint256","nodeType":"ElementaryTypeName","src":"11237:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11179:78:2"},"returnParameters":{"id":750,"nodeType":"ParameterList","parameters":[],"src":"11275:0:2"},"scope":807,"src":"11155:441:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":794,"nodeType":"Block","src":"12299:2:2","statements":[]},"documentation":{"id":785,"nodeType":"StructuredDocumentation","src":"11602:573:2","text":" @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":795,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfer","nameLocation":"12189:20:2","nodeType":"FunctionDefinition","parameters":{"id":792,"nodeType":"ParameterList","parameters":[{"constant":false,"id":787,"mutability":"mutable","name":"from","nameLocation":"12227:4:2","nodeType":"VariableDeclaration","scope":795,"src":"12219:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":786,"name":"address","nodeType":"ElementaryTypeName","src":"12219:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":789,"mutability":"mutable","name":"to","nameLocation":"12249:2:2","nodeType":"VariableDeclaration","scope":795,"src":"12241:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":788,"name":"address","nodeType":"ElementaryTypeName","src":"12241:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":791,"mutability":"mutable","name":"amount","nameLocation":"12269:6:2","nodeType":"VariableDeclaration","scope":795,"src":"12261:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":790,"name":"uint256","nodeType":"ElementaryTypeName","src":"12261:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12209:72:2"},"returnParameters":{"id":793,"nodeType":"ParameterList","parameters":[],"src":"12299:0:2"},"scope":807,"src":"12180:121:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":805,"nodeType":"Block","src":"13007:2:2","statements":[]},"documentation":{"id":796,"nodeType":"StructuredDocumentation","src":"12307:577:2","text":" @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":806,"implemented":true,"kind":"function","modifiers":[],"name":"_afterTokenTransfer","nameLocation":"12898:19:2","nodeType":"FunctionDefinition","parameters":{"id":803,"nodeType":"ParameterList","parameters":[{"constant":false,"id":798,"mutability":"mutable","name":"from","nameLocation":"12935:4:2","nodeType":"VariableDeclaration","scope":806,"src":"12927:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":797,"name":"address","nodeType":"ElementaryTypeName","src":"12927:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":800,"mutability":"mutable","name":"to","nameLocation":"12957:2:2","nodeType":"VariableDeclaration","scope":806,"src":"12949:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":799,"name":"address","nodeType":"ElementaryTypeName","src":"12949:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":802,"mutability":"mutable","name":"amount","nameLocation":"12977:6:2","nodeType":"VariableDeclaration","scope":806,"src":"12969:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":801,"name":"uint256","nodeType":"ElementaryTypeName","src":"12969:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12917:72:2"},"returnParameters":{"id":804,"nodeType":"ParameterList","parameters":[],"src":"13007:0:2"},"scope":807,"src":"12889:120:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":808,"src":"1401:11610:2","usedErrors":[]}],"src":"105:12907:2"},"id":2},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[885]},"id":886,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":809,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"106:23:3"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":810,"nodeType":"StructuredDocumentation","src":"131:70:3","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":885,"linearizedBaseContracts":[885],"name":"IERC20","nameLocation":"212:6:3","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":811,"nodeType":"StructuredDocumentation","src":"225:158:3","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":819,"name":"Transfer","nameLocation":"394:8:3","nodeType":"EventDefinition","parameters":{"id":818,"nodeType":"ParameterList","parameters":[{"constant":false,"id":813,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"419:4:3","nodeType":"VariableDeclaration","scope":819,"src":"403:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":812,"name":"address","nodeType":"ElementaryTypeName","src":"403:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":815,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"441:2:3","nodeType":"VariableDeclaration","scope":819,"src":"425:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":814,"name":"address","nodeType":"ElementaryTypeName","src":"425:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":817,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"453:5:3","nodeType":"VariableDeclaration","scope":819,"src":"445:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":816,"name":"uint256","nodeType":"ElementaryTypeName","src":"445:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"402:57:3"},"src":"388:72:3"},{"anonymous":false,"documentation":{"id":820,"nodeType":"StructuredDocumentation","src":"466:148:3","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":828,"name":"Approval","nameLocation":"625:8:3","nodeType":"EventDefinition","parameters":{"id":827,"nodeType":"ParameterList","parameters":[{"constant":false,"id":822,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"650:5:3","nodeType":"VariableDeclaration","scope":828,"src":"634:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":821,"name":"address","nodeType":"ElementaryTypeName","src":"634:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":824,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"673:7:3","nodeType":"VariableDeclaration","scope":828,"src":"657:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":823,"name":"address","nodeType":"ElementaryTypeName","src":"657:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":826,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"690:5:3","nodeType":"VariableDeclaration","scope":828,"src":"682:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":825,"name":"uint256","nodeType":"ElementaryTypeName","src":"682:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"633:63:3"},"src":"619:78:3"},{"documentation":{"id":829,"nodeType":"StructuredDocumentation","src":"703:66:3","text":" @dev Returns the amount of tokens in existence."},"functionSelector":"18160ddd","id":834,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"783:11:3","nodeType":"FunctionDefinition","parameters":{"id":830,"nodeType":"ParameterList","parameters":[],"src":"794:2:3"},"returnParameters":{"id":833,"nodeType":"ParameterList","parameters":[{"constant":false,"id":832,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":834,"src":"820:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":831,"name":"uint256","nodeType":"ElementaryTypeName","src":"820:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"819:9:3"},"scope":885,"src":"774:55:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":835,"nodeType":"StructuredDocumentation","src":"835:72:3","text":" @dev Returns the amount of tokens owned by `account`."},"functionSelector":"70a08231","id":842,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"921:9:3","nodeType":"FunctionDefinition","parameters":{"id":838,"nodeType":"ParameterList","parameters":[{"constant":false,"id":837,"mutability":"mutable","name":"account","nameLocation":"939:7:3","nodeType":"VariableDeclaration","scope":842,"src":"931:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":836,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"930:17:3"},"returnParameters":{"id":841,"nodeType":"ParameterList","parameters":[{"constant":false,"id":840,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":842,"src":"971:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":839,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"970:9:3"},"scope":885,"src":"912:68:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":843,"nodeType":"StructuredDocumentation","src":"986:202:3","text":" @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":852,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1202:8:3","nodeType":"FunctionDefinition","parameters":{"id":848,"nodeType":"ParameterList","parameters":[{"constant":false,"id":845,"mutability":"mutable","name":"to","nameLocation":"1219:2:3","nodeType":"VariableDeclaration","scope":852,"src":"1211:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":844,"name":"address","nodeType":"ElementaryTypeName","src":"1211:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":847,"mutability":"mutable","name":"amount","nameLocation":"1231:6:3","nodeType":"VariableDeclaration","scope":852,"src":"1223:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":846,"name":"uint256","nodeType":"ElementaryTypeName","src":"1223:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1210:28:3"},"returnParameters":{"id":851,"nodeType":"ParameterList","parameters":[{"constant":false,"id":850,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":852,"src":"1257:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":849,"name":"bool","nodeType":"ElementaryTypeName","src":"1257:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1256:6:3"},"scope":885,"src":"1193:70:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":853,"nodeType":"StructuredDocumentation","src":"1269:264:3","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":862,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1547:9:3","nodeType":"FunctionDefinition","parameters":{"id":858,"nodeType":"ParameterList","parameters":[{"constant":false,"id":855,"mutability":"mutable","name":"owner","nameLocation":"1565:5:3","nodeType":"VariableDeclaration","scope":862,"src":"1557:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":854,"name":"address","nodeType":"ElementaryTypeName","src":"1557:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":857,"mutability":"mutable","name":"spender","nameLocation":"1580:7:3","nodeType":"VariableDeclaration","scope":862,"src":"1572:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":856,"name":"address","nodeType":"ElementaryTypeName","src":"1572:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1556:32:3"},"returnParameters":{"id":861,"nodeType":"ParameterList","parameters":[{"constant":false,"id":860,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":862,"src":"1612:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":859,"name":"uint256","nodeType":"ElementaryTypeName","src":"1612:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1611:9:3"},"scope":885,"src":"1538:83:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":863,"nodeType":"StructuredDocumentation","src":"1627:642:3","text":" @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":872,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2283:7:3","nodeType":"FunctionDefinition","parameters":{"id":868,"nodeType":"ParameterList","parameters":[{"constant":false,"id":865,"mutability":"mutable","name":"spender","nameLocation":"2299:7:3","nodeType":"VariableDeclaration","scope":872,"src":"2291:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":864,"name":"address","nodeType":"ElementaryTypeName","src":"2291:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":867,"mutability":"mutable","name":"amount","nameLocation":"2316:6:3","nodeType":"VariableDeclaration","scope":872,"src":"2308:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":866,"name":"uint256","nodeType":"ElementaryTypeName","src":"2308:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2290:33:3"},"returnParameters":{"id":871,"nodeType":"ParameterList","parameters":[{"constant":false,"id":870,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":872,"src":"2342:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":869,"name":"bool","nodeType":"ElementaryTypeName","src":"2342:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2341:6:3"},"scope":885,"src":"2274:74:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":873,"nodeType":"StructuredDocumentation","src":"2354:287:3","text":" @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":884,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2655:12:3","nodeType":"FunctionDefinition","parameters":{"id":880,"nodeType":"ParameterList","parameters":[{"constant":false,"id":875,"mutability":"mutable","name":"from","nameLocation":"2685:4:3","nodeType":"VariableDeclaration","scope":884,"src":"2677:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":874,"name":"address","nodeType":"ElementaryTypeName","src":"2677:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":877,"mutability":"mutable","name":"to","nameLocation":"2707:2:3","nodeType":"VariableDeclaration","scope":884,"src":"2699:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":876,"name":"address","nodeType":"ElementaryTypeName","src":"2699:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":879,"mutability":"mutable","name":"amount","nameLocation":"2727:6:3","nodeType":"VariableDeclaration","scope":884,"src":"2719:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":878,"name":"uint256","nodeType":"ElementaryTypeName","src":"2719:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2667:72:3"},"returnParameters":{"id":883,"nodeType":"ParameterList","parameters":[{"constant":false,"id":882,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":884,"src":"2758:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":881,"name":"bool","nodeType":"ElementaryTypeName","src":"2758:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2757:6:3"},"scope":885,"src":"2646:118:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":886,"src":"202:2564:3","usedErrors":[]}],"src":"106:2661:3"},"id":3},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol","exportedSymbols":{"Context":[976],"ERC20":[807],"ERC20Burnable":[929],"IERC20":[885],"IERC20Metadata":[954]},"id":930,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":887,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"124:23:4"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"../ERC20.sol","id":888,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":930,"sourceUnit":808,"src":"149:22:4","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../../utils/Context.sol","id":889,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":930,"sourceUnit":977,"src":"172:36:4","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":891,"name":"Context","nameLocations":["454:7:4"],"nodeType":"IdentifierPath","referencedDeclaration":976,"src":"454:7:4"},"id":892,"nodeType":"InheritanceSpecifier","src":"454:7:4"},{"baseName":{"id":893,"name":"ERC20","nameLocations":["463:5:4"],"nodeType":"IdentifierPath","referencedDeclaration":807,"src":"463:5:4"},"id":894,"nodeType":"InheritanceSpecifier","src":"463:5:4"}],"canonicalName":"ERC20Burnable","contractDependencies":[],"contractKind":"contract","documentation":{"id":890,"nodeType":"StructuredDocumentation","src":"210:208:4","text":" @dev Extension of {ERC20} that allows token holders to destroy both their own\n tokens and those that they have an allowance for, in a way that can be\n recognized off-chain (via event analysis)."},"fullyImplemented":false,"id":929,"linearizedBaseContracts":[929,807,954,885,976],"name":"ERC20Burnable","nameLocation":"437:13:4","nodeType":"ContractDefinition","nodes":[{"body":{"id":906,"nodeType":"Block","src":"623:44:4","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":901,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":966,"src":"639:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":902,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"639:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":903,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":897,"src":"653:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":900,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":696,"src":"633:5:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":904,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"633:27:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":905,"nodeType":"ExpressionStatement","src":"633:27:4"}]},"documentation":{"id":895,"nodeType":"StructuredDocumentation","src":"475:98:4","text":" @dev Destroys `amount` tokens from the caller.\n See {ERC20-_burn}."},"functionSelector":"42966c68","id":907,"implemented":true,"kind":"function","modifiers":[],"name":"burn","nameLocation":"587:4:4","nodeType":"FunctionDefinition","parameters":{"id":898,"nodeType":"ParameterList","parameters":[{"constant":false,"id":897,"mutability":"mutable","name":"amount","nameLocation":"600:6:4","nodeType":"VariableDeclaration","scope":907,"src":"592:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":896,"name":"uint256","nodeType":"ElementaryTypeName","src":"592:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"591:16:4"},"returnParameters":{"id":899,"nodeType":"ParameterList","parameters":[],"src":"623:0:4"},"scope":929,"src":"578:89:4","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":927,"nodeType":"Block","src":"1039:95:4","statements":[{"expression":{"arguments":[{"id":916,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":910,"src":"1065:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":917,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":966,"src":"1074:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":918,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1074:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":919,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":912,"src":"1088:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":915,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":784,"src":"1049:15:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":920,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1049:46:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":921,"nodeType":"ExpressionStatement","src":"1049:46:4"},{"expression":{"arguments":[{"id":923,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":910,"src":"1111:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":924,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":912,"src":"1120:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":922,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":696,"src":"1105:5:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":925,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1105:22:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":926,"nodeType":"ExpressionStatement","src":"1105:22:4"}]},"documentation":{"id":908,"nodeType":"StructuredDocumentation","src":"673:295:4","text":" @dev Destroys `amount` tokens from `account`, deducting from the caller's\n allowance.\n See {ERC20-_burn} and {ERC20-allowance}.\n Requirements:\n - the caller must have allowance for ``accounts``'s tokens of at least\n `amount`."},"functionSelector":"79cc6790","id":928,"implemented":true,"kind":"function","modifiers":[],"name":"burnFrom","nameLocation":"982:8:4","nodeType":"FunctionDefinition","parameters":{"id":913,"nodeType":"ParameterList","parameters":[{"constant":false,"id":910,"mutability":"mutable","name":"account","nameLocation":"999:7:4","nodeType":"VariableDeclaration","scope":928,"src":"991:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":909,"name":"address","nodeType":"ElementaryTypeName","src":"991:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":912,"mutability":"mutable","name":"amount","nameLocation":"1016:6:4","nodeType":"VariableDeclaration","scope":928,"src":"1008:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":911,"name":"uint256","nodeType":"ElementaryTypeName","src":"1008:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"990:33:4"},"returnParameters":{"id":914,"nodeType":"ParameterList","parameters":[],"src":"1039:0:4"},"scope":929,"src":"973:161:4","stateMutability":"nonpayable","virtual":true,"visibility":"public"}],"scope":930,"src":"419:717:4","usedErrors":[]}],"src":"124:1013:4"},"id":4},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","exportedSymbols":{"IERC20":[885],"IERC20Metadata":[954]},"id":955,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":931,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"110:23:5"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":932,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":955,"sourceUnit":886,"src":"135:23:5","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":934,"name":"IERC20","nameLocations":["305:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":885,"src":"305:6:5"},"id":935,"nodeType":"InheritanceSpecifier","src":"305:6:5"}],"canonicalName":"IERC20Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":933,"nodeType":"StructuredDocumentation","src":"160:116:5","text":" @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"},"fullyImplemented":false,"id":954,"linearizedBaseContracts":[954,885],"name":"IERC20Metadata","nameLocation":"287:14:5","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":936,"nodeType":"StructuredDocumentation","src":"318:54:5","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":941,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"386:4:5","nodeType":"FunctionDefinition","parameters":{"id":937,"nodeType":"ParameterList","parameters":[],"src":"390:2:5"},"returnParameters":{"id":940,"nodeType":"ParameterList","parameters":[{"constant":false,"id":939,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":941,"src":"416:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":938,"name":"string","nodeType":"ElementaryTypeName","src":"416:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"415:15:5"},"scope":954,"src":"377:54:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":942,"nodeType":"StructuredDocumentation","src":"437:56:5","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":947,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"507:6:5","nodeType":"FunctionDefinition","parameters":{"id":943,"nodeType":"ParameterList","parameters":[],"src":"513:2:5"},"returnParameters":{"id":946,"nodeType":"ParameterList","parameters":[{"constant":false,"id":945,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":947,"src":"539:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":944,"name":"string","nodeType":"ElementaryTypeName","src":"539:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"538:15:5"},"scope":954,"src":"498:56:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":948,"nodeType":"StructuredDocumentation","src":"560:65:5","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":953,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"639:8:5","nodeType":"FunctionDefinition","parameters":{"id":949,"nodeType":"ParameterList","parameters":[],"src":"647:2:5"},"returnParameters":{"id":952,"nodeType":"ParameterList","parameters":[{"constant":false,"id":951,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":953,"src":"673:5:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":950,"name":"uint8","nodeType":"ElementaryTypeName","src":"673:5:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"672:7:5"},"scope":954,"src":"630:50:5","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":955,"src":"277:405:5","usedErrors":[]}],"src":"110:573:5"},"id":5},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[976]},"id":977,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":956,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"86:23:6"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":957,"nodeType":"StructuredDocumentation","src":"111:496:6","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":976,"linearizedBaseContracts":[976],"name":"Context","nameLocation":"626:7:6","nodeType":"ContractDefinition","nodes":[{"body":{"id":965,"nodeType":"Block","src":"702:34:6","statements":[{"expression":{"expression":{"id":962,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"719:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"723:6:6","memberName":"sender","nodeType":"MemberAccess","src":"719:10:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":961,"id":964,"nodeType":"Return","src":"712:17:6"}]},"id":966,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"649:10:6","nodeType":"FunctionDefinition","parameters":{"id":958,"nodeType":"ParameterList","parameters":[],"src":"659:2:6"},"returnParameters":{"id":961,"nodeType":"ParameterList","parameters":[{"constant":false,"id":960,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":966,"src":"693:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":959,"name":"address","nodeType":"ElementaryTypeName","src":"693:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"692:9:6"},"scope":976,"src":"640:96:6","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":974,"nodeType":"Block","src":"809:32:6","statements":[{"expression":{"expression":{"id":971,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"826:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"830:4:6","memberName":"data","nodeType":"MemberAccess","src":"826:8:6","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":970,"id":973,"nodeType":"Return","src":"819:15:6"}]},"id":975,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"751:8:6","nodeType":"FunctionDefinition","parameters":{"id":967,"nodeType":"ParameterList","parameters":[],"src":"759:2:6"},"returnParameters":{"id":970,"nodeType":"ParameterList","parameters":[{"constant":false,"id":969,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":975,"src":"793:14:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":968,"name":"bytes","nodeType":"ElementaryTypeName","src":"793:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"792:16:6"},"scope":976,"src":"742:99:6","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":977,"src":"608:235:6","usedErrors":[]}],"src":"86:758:6"},"id":6},"@openzeppelin/contracts/utils/math/SafeMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeMath.sol","exportedSymbols":{"SafeMath":[1288]},"id":1289,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":978,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"107:23:7"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeMath","contractDependencies":[],"contractKind":"library","documentation":{"id":979,"nodeType":"StructuredDocumentation","src":"285:196:7","text":" @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."},"fullyImplemented":true,"id":1288,"linearizedBaseContracts":[1288],"name":"SafeMath","nameLocation":"490:8:7","nodeType":"ContractDefinition","nodes":[{"body":{"id":1010,"nodeType":"Block","src":"717:140:7","statements":[{"id":1009,"nodeType":"UncheckedBlock","src":"727:124:7","statements":[{"assignments":[992],"declarations":[{"constant":false,"id":992,"mutability":"mutable","name":"c","nameLocation":"759:1:7","nodeType":"VariableDeclaration","scope":1009,"src":"751:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":991,"name":"uint256","nodeType":"ElementaryTypeName","src":"751:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":996,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":993,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":982,"src":"763:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":994,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":984,"src":"767:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"763:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"751:17:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":999,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":997,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":992,"src":"786:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":998,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":982,"src":"790:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"786:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1004,"nodeType":"IfStatement","src":"782:28:7","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1000,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"801:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1001,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"808:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1002,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"800:10:7","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":990,"id":1003,"nodeType":"Return","src":"793:17:7"}},{"expression":{"components":[{"hexValue":"74727565","id":1005,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"832:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":1006,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":992,"src":"838:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1007,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"831:9:7","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":990,"id":1008,"nodeType":"Return","src":"824:16:7"}]}]},"documentation":{"id":980,"nodeType":"StructuredDocumentation","src":"505:131:7","text":" @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"},"id":1011,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"650:6:7","nodeType":"FunctionDefinition","parameters":{"id":985,"nodeType":"ParameterList","parameters":[{"constant":false,"id":982,"mutability":"mutable","name":"a","nameLocation":"665:1:7","nodeType":"VariableDeclaration","scope":1011,"src":"657:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":981,"name":"uint256","nodeType":"ElementaryTypeName","src":"657:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":984,"mutability":"mutable","name":"b","nameLocation":"676:1:7","nodeType":"VariableDeclaration","scope":1011,"src":"668:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":983,"name":"uint256","nodeType":"ElementaryTypeName","src":"668:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"656:22:7"},"returnParameters":{"id":990,"nodeType":"ParameterList","parameters":[{"constant":false,"id":987,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1011,"src":"702:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":986,"name":"bool","nodeType":"ElementaryTypeName","src":"702:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":989,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1011,"src":"708:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":988,"name":"uint256","nodeType":"ElementaryTypeName","src":"708:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"701:15:7"},"scope":1288,"src":"641:216:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1038,"nodeType":"Block","src":"1078:113:7","statements":[{"id":1037,"nodeType":"UncheckedBlock","src":"1088:97:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1023,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1016,"src":"1116:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1024,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1014,"src":"1120:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1116:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1030,"nodeType":"IfStatement","src":"1112:28:7","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1026,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1131:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1027,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1138:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1028,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1130:10:7","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1022,"id":1029,"nodeType":"Return","src":"1123:17:7"}},{"expression":{"components":[{"hexValue":"74727565","id":1031,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1162:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1032,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1014,"src":"1168:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1033,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1016,"src":"1172:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1168:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1035,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1161:13:7","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":1022,"id":1036,"nodeType":"Return","src":"1154:20:7"}]}]},"documentation":{"id":1012,"nodeType":"StructuredDocumentation","src":"863:134:7","text":" @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"},"id":1039,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"1011:6:7","nodeType":"FunctionDefinition","parameters":{"id":1017,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1014,"mutability":"mutable","name":"a","nameLocation":"1026:1:7","nodeType":"VariableDeclaration","scope":1039,"src":"1018:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1013,"name":"uint256","nodeType":"ElementaryTypeName","src":"1018:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1016,"mutability":"mutable","name":"b","nameLocation":"1037:1:7","nodeType":"VariableDeclaration","scope":1039,"src":"1029:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1015,"name":"uint256","nodeType":"ElementaryTypeName","src":"1029:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1017:22:7"},"returnParameters":{"id":1022,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1019,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1039,"src":"1063:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1018,"name":"bool","nodeType":"ElementaryTypeName","src":"1063:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1021,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1039,"src":"1069:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1020,"name":"uint256","nodeType":"ElementaryTypeName","src":"1069:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1062:15:7"},"scope":1288,"src":"1002:189:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1080,"nodeType":"Block","src":"1415:417:7","statements":[{"id":1079,"nodeType":"UncheckedBlock","src":"1425:401:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1051,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1042,"src":"1683:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1052,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1688:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1683:6:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1058,"nodeType":"IfStatement","src":"1679:28:7","trueBody":{"expression":{"components":[{"hexValue":"74727565","id":1054,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1699:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"hexValue":"30","id":1055,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1705:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1056,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1698:9:7","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1050,"id":1057,"nodeType":"Return","src":"1691:16:7"}},{"assignments":[1060],"declarations":[{"constant":false,"id":1060,"mutability":"mutable","name":"c","nameLocation":"1729:1:7","nodeType":"VariableDeclaration","scope":1079,"src":"1721:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1059,"name":"uint256","nodeType":"ElementaryTypeName","src":"1721:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1064,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1061,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1042,"src":"1733:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1062,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1044,"src":"1737:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1733:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1721:17:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1065,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1060,"src":"1756:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1066,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1042,"src":"1760:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1756:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1068,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1044,"src":"1765:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1756:10:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1074,"nodeType":"IfStatement","src":"1752:33:7","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1070,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1776:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1071,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1783:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1072,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1775:10:7","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1050,"id":1073,"nodeType":"Return","src":"1768:17:7"}},{"expression":{"components":[{"hexValue":"74727565","id":1075,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1807:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":1076,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1060,"src":"1813:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1077,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1806:9:7","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":1050,"id":1078,"nodeType":"Return","src":"1799:16:7"}]}]},"documentation":{"id":1040,"nodeType":"StructuredDocumentation","src":"1197:137:7","text":" @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"},"id":1081,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"1348:6:7","nodeType":"FunctionDefinition","parameters":{"id":1045,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1042,"mutability":"mutable","name":"a","nameLocation":"1363:1:7","nodeType":"VariableDeclaration","scope":1081,"src":"1355:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1041,"name":"uint256","nodeType":"ElementaryTypeName","src":"1355:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1044,"mutability":"mutable","name":"b","nameLocation":"1374:1:7","nodeType":"VariableDeclaration","scope":1081,"src":"1366:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1043,"name":"uint256","nodeType":"ElementaryTypeName","src":"1366:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1354:22:7"},"returnParameters":{"id":1050,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1047,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1081,"src":"1400:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1046,"name":"bool","nodeType":"ElementaryTypeName","src":"1400:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1049,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1081,"src":"1406:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1048,"name":"uint256","nodeType":"ElementaryTypeName","src":"1406:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1399:15:7"},"scope":1288,"src":"1339:493:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1108,"nodeType":"Block","src":"2057:114:7","statements":[{"id":1107,"nodeType":"UncheckedBlock","src":"2067:98:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1093,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1086,"src":"2095:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1094,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2100:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2095:6:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1100,"nodeType":"IfStatement","src":"2091:29:7","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1096,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2111:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1097,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2118:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1098,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2110:10:7","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1092,"id":1099,"nodeType":"Return","src":"2103:17:7"}},{"expression":{"components":[{"hexValue":"74727565","id":1101,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2142:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1102,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1084,"src":"2148:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1103,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1086,"src":"2152:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2148:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1105,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2141:13:7","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":1092,"id":1106,"nodeType":"Return","src":"2134:20:7"}]}]},"documentation":{"id":1082,"nodeType":"StructuredDocumentation","src":"1838:138:7","text":" @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"},"id":1109,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"1990:6:7","nodeType":"FunctionDefinition","parameters":{"id":1087,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1084,"mutability":"mutable","name":"a","nameLocation":"2005:1:7","nodeType":"VariableDeclaration","scope":1109,"src":"1997:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1083,"name":"uint256","nodeType":"ElementaryTypeName","src":"1997:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1086,"mutability":"mutable","name":"b","nameLocation":"2016:1:7","nodeType":"VariableDeclaration","scope":1109,"src":"2008:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1085,"name":"uint256","nodeType":"ElementaryTypeName","src":"2008:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1996:22:7"},"returnParameters":{"id":1092,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1089,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1109,"src":"2042:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1088,"name":"bool","nodeType":"ElementaryTypeName","src":"2042:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1091,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1109,"src":"2048:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1090,"name":"uint256","nodeType":"ElementaryTypeName","src":"2048:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2041:15:7"},"scope":1288,"src":"1981:190:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1136,"nodeType":"Block","src":"2406:114:7","statements":[{"id":1135,"nodeType":"UncheckedBlock","src":"2416:98:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1121,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1114,"src":"2444:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1122,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2449:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2444:6:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1128,"nodeType":"IfStatement","src":"2440:29:7","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1124,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2460:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1125,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2467:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1126,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2459:10:7","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1120,"id":1127,"nodeType":"Return","src":"2452:17:7"}},{"expression":{"components":[{"hexValue":"74727565","id":1129,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2491:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1130,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1112,"src":"2497:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":1131,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1114,"src":"2501:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2497:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1133,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2490:13:7","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":1120,"id":1134,"nodeType":"Return","src":"2483:20:7"}]}]},"documentation":{"id":1110,"nodeType":"StructuredDocumentation","src":"2177:148:7","text":" @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"},"id":1137,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"2339:6:7","nodeType":"FunctionDefinition","parameters":{"id":1115,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1112,"mutability":"mutable","name":"a","nameLocation":"2354:1:7","nodeType":"VariableDeclaration","scope":1137,"src":"2346:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1111,"name":"uint256","nodeType":"ElementaryTypeName","src":"2346:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1114,"mutability":"mutable","name":"b","nameLocation":"2365:1:7","nodeType":"VariableDeclaration","scope":1137,"src":"2357:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1113,"name":"uint256","nodeType":"ElementaryTypeName","src":"2357:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2345:22:7"},"returnParameters":{"id":1120,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1117,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1137,"src":"2391:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1116,"name":"bool","nodeType":"ElementaryTypeName","src":"2391:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1119,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1137,"src":"2397:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1118,"name":"uint256","nodeType":"ElementaryTypeName","src":"2397:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2390:15:7"},"scope":1288,"src":"2330:190:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1151,"nodeType":"Block","src":"2822:29:7","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1147,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1140,"src":"2839:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1148,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1142,"src":"2843:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2839:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1146,"id":1150,"nodeType":"Return","src":"2832:12:7"}]},"documentation":{"id":1138,"nodeType":"StructuredDocumentation","src":"2526:224:7","text":" @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."},"id":1152,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"2764:3:7","nodeType":"FunctionDefinition","parameters":{"id":1143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1140,"mutability":"mutable","name":"a","nameLocation":"2776:1:7","nodeType":"VariableDeclaration","scope":1152,"src":"2768:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1139,"name":"uint256","nodeType":"ElementaryTypeName","src":"2768:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1142,"mutability":"mutable","name":"b","nameLocation":"2787:1:7","nodeType":"VariableDeclaration","scope":1152,"src":"2779:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1141,"name":"uint256","nodeType":"ElementaryTypeName","src":"2779:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2767:22:7"},"returnParameters":{"id":1146,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1145,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1152,"src":"2813:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1144,"name":"uint256","nodeType":"ElementaryTypeName","src":"2813:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2812:9:7"},"scope":1288,"src":"2755:96:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1166,"nodeType":"Block","src":"3189:29:7","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1162,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1155,"src":"3206:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1163,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1157,"src":"3210:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3206:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1161,"id":1165,"nodeType":"Return","src":"3199:12:7"}]},"documentation":{"id":1153,"nodeType":"StructuredDocumentation","src":"2857:260:7","text":" @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."},"id":1167,"implemented":true,"kind":"function","modifiers":[],"name":"sub","nameLocation":"3131:3:7","nodeType":"FunctionDefinition","parameters":{"id":1158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1155,"mutability":"mutable","name":"a","nameLocation":"3143:1:7","nodeType":"VariableDeclaration","scope":1167,"src":"3135:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1154,"name":"uint256","nodeType":"ElementaryTypeName","src":"3135:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1157,"mutability":"mutable","name":"b","nameLocation":"3154:1:7","nodeType":"VariableDeclaration","scope":1167,"src":"3146:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1156,"name":"uint256","nodeType":"ElementaryTypeName","src":"3146:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3134:22:7"},"returnParameters":{"id":1161,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1160,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1167,"src":"3180:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1159,"name":"uint256","nodeType":"ElementaryTypeName","src":"3180:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3179:9:7"},"scope":1288,"src":"3122:96:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1181,"nodeType":"Block","src":"3532:29:7","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1177,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1170,"src":"3549:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1178,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1172,"src":"3553:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3549:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1176,"id":1180,"nodeType":"Return","src":"3542:12:7"}]},"documentation":{"id":1168,"nodeType":"StructuredDocumentation","src":"3224:236:7","text":" @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."},"id":1182,"implemented":true,"kind":"function","modifiers":[],"name":"mul","nameLocation":"3474:3:7","nodeType":"FunctionDefinition","parameters":{"id":1173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1170,"mutability":"mutable","name":"a","nameLocation":"3486:1:7","nodeType":"VariableDeclaration","scope":1182,"src":"3478:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1169,"name":"uint256","nodeType":"ElementaryTypeName","src":"3478:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1172,"mutability":"mutable","name":"b","nameLocation":"3497:1:7","nodeType":"VariableDeclaration","scope":1182,"src":"3489:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1171,"name":"uint256","nodeType":"ElementaryTypeName","src":"3489:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3477:22:7"},"returnParameters":{"id":1176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1175,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1182,"src":"3523:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1174,"name":"uint256","nodeType":"ElementaryTypeName","src":"3523:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3522:9:7"},"scope":1288,"src":"3465:96:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1196,"nodeType":"Block","src":"3917:29:7","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1192,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1185,"src":"3934:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1193,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1187,"src":"3938:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3934:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1191,"id":1195,"nodeType":"Return","src":"3927:12:7"}]},"documentation":{"id":1183,"nodeType":"StructuredDocumentation","src":"3567:278:7","text":" @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."},"id":1197,"implemented":true,"kind":"function","modifiers":[],"name":"div","nameLocation":"3859:3:7","nodeType":"FunctionDefinition","parameters":{"id":1188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1185,"mutability":"mutable","name":"a","nameLocation":"3871:1:7","nodeType":"VariableDeclaration","scope":1197,"src":"3863:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1184,"name":"uint256","nodeType":"ElementaryTypeName","src":"3863:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1187,"mutability":"mutable","name":"b","nameLocation":"3882:1:7","nodeType":"VariableDeclaration","scope":1197,"src":"3874:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1186,"name":"uint256","nodeType":"ElementaryTypeName","src":"3874:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3862:22:7"},"returnParameters":{"id":1191,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1190,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1197,"src":"3908:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1189,"name":"uint256","nodeType":"ElementaryTypeName","src":"3908:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3907:9:7"},"scope":1288,"src":"3850:96:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1211,"nodeType":"Block","src":"4466:29:7","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1207,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1200,"src":"4483:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":1208,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1202,"src":"4487:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4483:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1206,"id":1210,"nodeType":"Return","src":"4476:12:7"}]},"documentation":{"id":1198,"nodeType":"StructuredDocumentation","src":"3952:442:7","text":" @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."},"id":1212,"implemented":true,"kind":"function","modifiers":[],"name":"mod","nameLocation":"4408:3:7","nodeType":"FunctionDefinition","parameters":{"id":1203,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1200,"mutability":"mutable","name":"a","nameLocation":"4420:1:7","nodeType":"VariableDeclaration","scope":1212,"src":"4412:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1199,"name":"uint256","nodeType":"ElementaryTypeName","src":"4412:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1202,"mutability":"mutable","name":"b","nameLocation":"4431:1:7","nodeType":"VariableDeclaration","scope":1212,"src":"4423:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1201,"name":"uint256","nodeType":"ElementaryTypeName","src":"4423:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4411:22:7"},"returnParameters":{"id":1206,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1205,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1212,"src":"4457:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1204,"name":"uint256","nodeType":"ElementaryTypeName","src":"4457:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4456:9:7"},"scope":1288,"src":"4399:96:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1236,"nodeType":"Block","src":"5084:106:7","statements":[{"id":1235,"nodeType":"UncheckedBlock","src":"5094:90:7","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1225,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1217,"src":"5126:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":1226,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1215,"src":"5131:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5126:6:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1228,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1219,"src":"5134:12:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1224,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5118:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1229,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5118:29:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1230,"nodeType":"ExpressionStatement","src":"5118:29:7"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1231,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1215,"src":"5168:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1232,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1217,"src":"5172:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5168:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1223,"id":1234,"nodeType":"Return","src":"5161:12:7"}]}]},"documentation":{"id":1213,"nodeType":"StructuredDocumentation","src":"4501:453:7","text":" @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."},"id":1237,"implemented":true,"kind":"function","modifiers":[],"name":"sub","nameLocation":"4968:3:7","nodeType":"FunctionDefinition","parameters":{"id":1220,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1215,"mutability":"mutable","name":"a","nameLocation":"4989:1:7","nodeType":"VariableDeclaration","scope":1237,"src":"4981:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1214,"name":"uint256","nodeType":"ElementaryTypeName","src":"4981:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1217,"mutability":"mutable","name":"b","nameLocation":"5008:1:7","nodeType":"VariableDeclaration","scope":1237,"src":"5000:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1216,"name":"uint256","nodeType":"ElementaryTypeName","src":"5000:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1219,"mutability":"mutable","name":"errorMessage","nameLocation":"5033:12:7","nodeType":"VariableDeclaration","scope":1237,"src":"5019:26:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1218,"name":"string","nodeType":"ElementaryTypeName","src":"5019:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4971:80:7"},"returnParameters":{"id":1223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1222,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1237,"src":"5075:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1221,"name":"uint256","nodeType":"ElementaryTypeName","src":"5075:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5074:9:7"},"scope":1288,"src":"4959:231:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1261,"nodeType":"Block","src":"5799:105:7","statements":[{"id":1260,"nodeType":"UncheckedBlock","src":"5809:89:7","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1250,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1242,"src":"5841:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1251,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5845:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5841:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1253,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1244,"src":"5848:12:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1249,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5833:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1254,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5833:28:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1255,"nodeType":"ExpressionStatement","src":"5833:28:7"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1256,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1240,"src":"5882:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1257,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1242,"src":"5886:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5882:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1248,"id":1259,"nodeType":"Return","src":"5875:12:7"}]}]},"documentation":{"id":1238,"nodeType":"StructuredDocumentation","src":"5196:473:7","text":" @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."},"id":1262,"implemented":true,"kind":"function","modifiers":[],"name":"div","nameLocation":"5683:3:7","nodeType":"FunctionDefinition","parameters":{"id":1245,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1240,"mutability":"mutable","name":"a","nameLocation":"5704:1:7","nodeType":"VariableDeclaration","scope":1262,"src":"5696:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1239,"name":"uint256","nodeType":"ElementaryTypeName","src":"5696:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1242,"mutability":"mutable","name":"b","nameLocation":"5723:1:7","nodeType":"VariableDeclaration","scope":1262,"src":"5715:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1241,"name":"uint256","nodeType":"ElementaryTypeName","src":"5715:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1244,"mutability":"mutable","name":"errorMessage","nameLocation":"5748:12:7","nodeType":"VariableDeclaration","scope":1262,"src":"5734:26:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1243,"name":"string","nodeType":"ElementaryTypeName","src":"5734:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5686:80:7"},"returnParameters":{"id":1248,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1247,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1262,"src":"5790:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1246,"name":"uint256","nodeType":"ElementaryTypeName","src":"5790:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5789:9:7"},"scope":1288,"src":"5674:230:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1286,"nodeType":"Block","src":"6675:105:7","statements":[{"id":1285,"nodeType":"UncheckedBlock","src":"6685:89:7","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1275,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1267,"src":"6717:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1276,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6721:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6717:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1278,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1269,"src":"6724:12:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1274,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6709:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1279,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6709:28:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1280,"nodeType":"ExpressionStatement","src":"6709:28:7"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1281,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1265,"src":"6758:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":1282,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1267,"src":"6762:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6758:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1273,"id":1284,"nodeType":"Return","src":"6751:12:7"}]}]},"documentation":{"id":1263,"nodeType":"StructuredDocumentation","src":"5910:635:7","text":" @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."},"id":1287,"implemented":true,"kind":"function","modifiers":[],"name":"mod","nameLocation":"6559:3:7","nodeType":"FunctionDefinition","parameters":{"id":1270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1265,"mutability":"mutable","name":"a","nameLocation":"6580:1:7","nodeType":"VariableDeclaration","scope":1287,"src":"6572:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1264,"name":"uint256","nodeType":"ElementaryTypeName","src":"6572:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1267,"mutability":"mutable","name":"b","nameLocation":"6599:1:7","nodeType":"VariableDeclaration","scope":1287,"src":"6591:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1266,"name":"uint256","nodeType":"ElementaryTypeName","src":"6591:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1269,"mutability":"mutable","name":"errorMessage","nameLocation":"6624:12:7","nodeType":"VariableDeclaration","scope":1287,"src":"6610:26:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1268,"name":"string","nodeType":"ElementaryTypeName","src":"6610:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6562:80:7"},"returnParameters":{"id":1273,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1272,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1287,"src":"6666:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1271,"name":"uint256","nodeType":"ElementaryTypeName","src":"6666:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6665:9:7"},"scope":1288,"src":"6550:230:7","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1289,"src":"482:6300:7","usedErrors":[]}],"src":"107:6676:7"},"id":7},"contracts/ProvableGBP.sol":{"ast":{"absolutePath":"contracts/ProvableGBP.sol","exportedSymbols":{"Context":[976],"ERC20":[807],"ERC20Burnable":[929],"IERC20":[885],"IERC20Metadata":[954],"Ownable":[112],"Pausable":[220],"ProvableGBP":[1720],"SafeMath":[1288]},"id":1721,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1290,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"32:23:8"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"@openzeppelin/contracts/token/ERC20/ERC20.sol","id":1291,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1721,"sourceUnit":808,"src":"57:55:8","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol","id":1292,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1721,"sourceUnit":930,"src":"113:74:8","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/security/Pausable.sol","file":"@openzeppelin/contracts/security/Pausable.sol","id":1293,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1721,"sourceUnit":221,"src":"188:55:8","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":1294,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1721,"sourceUnit":113,"src":"244:52:8","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeMath.sol","file":"@openzeppelin/contracts/utils/math/SafeMath.sol","id":1295,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1721,"sourceUnit":1289,"src":"297:57:8","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1296,"name":"ERC20","nameLocations":["380:5:8"],"nodeType":"IdentifierPath","referencedDeclaration":807,"src":"380:5:8"},"id":1297,"nodeType":"InheritanceSpecifier","src":"380:5:8"},{"baseName":{"id":1298,"name":"ERC20Burnable","nameLocations":["387:13:8"],"nodeType":"IdentifierPath","referencedDeclaration":929,"src":"387:13:8"},"id":1299,"nodeType":"InheritanceSpecifier","src":"387:13:8"},{"baseName":{"id":1300,"name":"Pausable","nameLocations":["402:8:8"],"nodeType":"IdentifierPath","referencedDeclaration":220,"src":"402:8:8"},"id":1301,"nodeType":"InheritanceSpecifier","src":"402:8:8"},{"baseName":{"id":1302,"name":"Ownable","nameLocations":["412:7:8"],"nodeType":"IdentifierPath","referencedDeclaration":112,"src":"412:7:8"},"id":1303,"nodeType":"InheritanceSpecifier","src":"412:7:8"}],"canonicalName":"ProvableGBP","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":1720,"linearizedBaseContracts":[1720,112,220,929,807,954,885,976],"name":"ProvableGBP","nameLocation":"365:11:8","nodeType":"ContractDefinition","nodes":[{"global":false,"id":1306,"libraryName":{"id":1304,"name":"SafeMath","nameLocations":["433:8:8"],"nodeType":"IdentifierPath","referencedDeclaration":1288,"src":"433:8:8"},"nodeType":"UsingForDirective","src":"427:27:8","typeName":{"id":1305,"name":"uint256","nodeType":"ElementaryTypeName","src":"446:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":true,"functionSelector":"25cb5bc0","id":1309,"mutability":"constant","name":"getExpiryTime","nameLocation":"557:13:8","nodeType":"VariableDeclaration","scope":1720,"src":"533:47:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1307,"name":"uint256","nodeType":"ElementaryTypeName","src":"533:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":1308,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"573:7:8","subdenomination":"hours","typeDescriptions":{"typeIdentifier":"t_rational_7200_by_1","typeString":"int_const 7200"},"value":"2"},"visibility":"public"},{"constant":true,"functionSelector":"1285cc2a","id":1312,"mutability":"constant","name":"seignorageFee","nameLocation":"658:13:8","nodeType":"VariableDeclaration","scope":1720,"src":"634:42:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1310,"name":"uint256","nodeType":"ElementaryTypeName","src":"634:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3130","id":1311,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"674:2:8","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"visibility":"public"},{"constant":true,"functionSelector":"34913f28","id":1315,"mutability":"constant","name":"oneHundredPercent","nameLocation":"726:17:8","nodeType":"VariableDeclaration","scope":1720,"src":"702:49:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1313,"name":"uint256","nodeType":"ElementaryTypeName","src":"702:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3130303030","id":1314,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"746:5:8","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"visibility":"public"},{"constant":true,"functionSelector":"3addb12c","id":1320,"mutability":"constant","name":"actualMintedPercentage","nameLocation":"827:22:8","nodeType":"VariableDeclaration","scope":1720,"src":"803:82:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1316,"name":"uint256","nodeType":"ElementaryTypeName","src":"803:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1319,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"id":1317,"name":"oneHundredPercent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1315,"src":"852:17:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1318,"name":"seignorageFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1312,"src":"872:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"852:33:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"63ffab31","id":1323,"mutability":"mutable","name":"publicKey","nameLocation":"954:9:8","nodeType":"VariableDeclaration","scope":1720,"src":"941:27:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes"},"typeName":{"id":1321,"name":"bytes","nodeType":"ElementaryTypeName","src":"941:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":{"hexValue":"","id":1322,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"966:2:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"visibility":"public"},{"canonicalName":"ProvableGBP.Commitment","id":1332,"members":[{"constant":false,"id":1325,"mutability":"mutable","name":"paramsHash","nameLocation":"1011:10:8","nodeType":"VariableDeclaration","scope":1332,"src":"1003:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes31","typeString":"bytes31"},"typeName":{"id":1324,"name":"bytes31","nodeType":"ElementaryTypeName","src":"1003:7:8","typeDescriptions":{"typeIdentifier":"t_bytes31","typeString":"bytes31"}},"visibility":"internal"},{"constant":false,"id":1327,"mutability":"mutable","name":"requester","nameLocation":"1039:9:8","nodeType":"VariableDeclaration","scope":1332,"src":"1031:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1326,"name":"address","nodeType":"ElementaryTypeName","src":"1031:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1329,"mutability":"mutable","name":"expiration","nameLocation":"1066:10:8","nodeType":"VariableDeclaration","scope":1332,"src":"1058:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1328,"name":"uint256","nodeType":"ElementaryTypeName","src":"1058:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1331,"mutability":"mutable","name":"amount","nameLocation":"1094:6:8","nodeType":"VariableDeclaration","scope":1332,"src":"1086:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1330,"name":"uint256","nodeType":"ElementaryTypeName","src":"1086:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Commitment","nameLocation":"982:10:8","nodeType":"StructDefinition","scope":1720,"src":"975:132:8","visibility":"public"},{"constant":false,"id":1337,"mutability":"mutable","name":"s_mintCommitments","nameLocation":"1183:17:8","nodeType":"VariableDeclaration","scope":1720,"src":"1144:56:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Commitment_$1332_storage_$","typeString":"mapping(bytes32 => struct ProvableGBP.Commitment)"},"typeName":{"id":1336,"keyType":{"id":1333,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1152:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"1144:30:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Commitment_$1332_storage_$","typeString":"mapping(bytes32 => struct ProvableGBP.Commitment)"},"valueType":{"id":1335,"nodeType":"UserDefinedTypeName","pathNode":{"id":1334,"name":"Commitment","nameLocations":["1163:10:8"],"nodeType":"IdentifierPath","referencedDeclaration":1332,"src":"1163:10:8"},"referencedDeclaration":1332,"src":"1163:10:8","typeDescriptions":{"typeIdentifier":"t_struct$_Commitment_$1332_storage_ptr","typeString":"struct ProvableGBP.Commitment"}}},"visibility":"private"},{"body":{"id":1350,"nodeType":"Block","src":"1275:39:8","statements":[{"expression":{"id":1348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1346,"name":"publicKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1323,"src":"1285:9:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1347,"name":"_publicKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1339,"src":"1297:10:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"1285:22:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"id":1349,"nodeType":"ExpressionStatement","src":"1285:22:8"}]},"id":1351,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"50726f7661626c6520474250","id":1342,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1251:14:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_10734f1c4ed90ab1c48d36afb07a0763a6cb2a7197604414307f9d7974b0e19d","typeString":"literal_string \"Provable GBP\""},"value":"Provable GBP"},{"hexValue":"50474250","id":1343,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1267:6:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_ac0df39b1ba766ec9c2b0fec009b30c2ebd5229612dfddafc66e4f0a01421f4e","typeString":"literal_string \"PGBP\""},"value":"PGBP"}],"id":1344,"kind":"baseConstructorSpecifier","modifierName":{"id":1341,"name":"ERC20","nameLocations":["1245:5:8"],"nodeType":"IdentifierPath","referencedDeclaration":807,"src":"1245:5:8"},"nodeType":"ModifierInvocation","src":"1245:29:8"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1340,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1339,"mutability":"mutable","name":"_publicKey","nameLocation":"1233:10:8","nodeType":"VariableDeclaration","scope":1351,"src":"1220:23:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1338,"name":"bytes","nodeType":"ElementaryTypeName","src":"1220:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1219:25:8"},"returnParameters":{"id":1345,"nodeType":"ParameterList","parameters":[],"src":"1275:0:8"},"scope":1720,"src":"1208:106:8","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"anonymous":false,"eventSelector":"45fa4b26a755f4cc5780432570badb0410d1ed0c688479aa9e708761ffb82ec2","id":1363,"name":"MintRequest","nameLocation":"1326:11:8","nodeType":"EventDefinition","parameters":{"id":1362,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1353,"indexed":true,"mutability":"mutable","name":"requester","nameLocation":"1363:9:8","nodeType":"VariableDeclaration","scope":1363,"src":"1347:25:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1352,"name":"address","nodeType":"ElementaryTypeName","src":"1347:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1355,"indexed":true,"mutability":"mutable","name":"requestId","nameLocation":"1398:9:8","nodeType":"VariableDeclaration","scope":1363,"src":"1382:25:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1354,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1382:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1357,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1425:6:8","nodeType":"VariableDeclaration","scope":1363,"src":"1417:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1356,"name":"uint256","nodeType":"ElementaryTypeName","src":"1417:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1359,"indexed":false,"mutability":"mutable","name":"expiration","nameLocation":"1449:10:8","nodeType":"VariableDeclaration","scope":1363,"src":"1441:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1358,"name":"uint256","nodeType":"ElementaryTypeName","src":"1441:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1361,"indexed":false,"mutability":"mutable","name":"encryptedData","nameLocation":"1475:13:8","nodeType":"VariableDeclaration","scope":1363,"src":"1469:19:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1360,"name":"bytes","nodeType":"ElementaryTypeName","src":"1469:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1337:157:8"},"src":"1320:175:8"},{"anonymous":false,"eventSelector":"220f931a071dfcd35fda9f25680cb03785508840415a802de6e99230f889862b","id":1371,"name":"AuthRequest","nameLocation":"1507:11:8","nodeType":"EventDefinition","parameters":{"id":1370,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1365,"indexed":true,"mutability":"mutable","name":"requester","nameLocation":"1544:9:8","nodeType":"VariableDeclaration","scope":1371,"src":"1528:25:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1364,"name":"address","nodeType":"ElementaryTypeName","src":"1528:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1367,"indexed":true,"mutability":"mutable","name":"requestId","nameLocation":"1579:9:8","nodeType":"VariableDeclaration","scope":1371,"src":"1563:25:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1366,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1563:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1369,"indexed":false,"mutability":"mutable","name":"authEncryptedData","nameLocation":"1604:17:8","nodeType":"VariableDeclaration","scope":1371,"src":"1598:23:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1368,"name":"bytes","nodeType":"ElementaryTypeName","src":"1598:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1518:109:8"},"src":"1501:127:8"},{"anonymous":false,"eventSelector":"a3cd7d021dc9794ae8a4520e68440669e45a8758c6feac5a46db4c6953d35d25","id":1379,"name":"AuthGranted","nameLocation":"1640:11:8","nodeType":"EventDefinition","parameters":{"id":1378,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1373,"indexed":true,"mutability":"mutable","name":"requester","nameLocation":"1677:9:8","nodeType":"VariableDeclaration","scope":1379,"src":"1661:25:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1372,"name":"address","nodeType":"ElementaryTypeName","src":"1661:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1375,"indexed":true,"mutability":"mutable","name":"requestId","nameLocation":"1712:9:8","nodeType":"VariableDeclaration","scope":1379,"src":"1696:25:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1374,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1696:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1377,"indexed":false,"mutability":"mutable","name":"grantEncryptedData","nameLocation":"1737:18:8","nodeType":"VariableDeclaration","scope":1379,"src":"1731:24:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1376,"name":"bytes","nodeType":"ElementaryTypeName","src":"1731:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1651:110:8"},"src":"1634:128:8"},{"body":{"id":1387,"nodeType":"Block","src":"1802:25:8","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1384,"name":"_pause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":203,"src":"1812:6:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1385,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1812:8:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1386,"nodeType":"ExpressionStatement","src":"1812:8:8"}]},"functionSelector":"8456cb59","id":1388,"implemented":true,"kind":"function","modifiers":[{"id":1382,"kind":"modifierInvocation","modifierName":{"id":1381,"name":"onlyOwner","nameLocations":["1792:9:8"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"1792:9:8"},"nodeType":"ModifierInvocation","src":"1792:9:8"}],"name":"pause","nameLocation":"1777:5:8","nodeType":"FunctionDefinition","parameters":{"id":1380,"nodeType":"ParameterList","parameters":[],"src":"1782:2:8"},"returnParameters":{"id":1383,"nodeType":"ParameterList","parameters":[],"src":"1802:0:8"},"scope":1720,"src":"1768:59:8","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1396,"nodeType":"Block","src":"1869:27:8","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1393,"name":"_unpause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":219,"src":"1879:8:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1394,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1879:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1395,"nodeType":"ExpressionStatement","src":"1879:10:8"}]},"functionSelector":"3f4ba83a","id":1397,"implemented":true,"kind":"function","modifiers":[{"id":1391,"kind":"modifierInvocation","modifierName":{"id":1390,"name":"onlyOwner","nameLocations":["1859:9:8"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"1859:9:8"},"nodeType":"ModifierInvocation","src":"1859:9:8"}],"name":"unpause","nameLocation":"1842:7:8","nodeType":"FunctionDefinition","parameters":{"id":1389,"nodeType":"ParameterList","parameters":[],"src":"1849:2:8"},"returnParameters":{"id":1392,"nodeType":"ParameterList","parameters":[],"src":"1869:0:8"},"scope":1720,"src":"1833:63:8","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1408,"nodeType":"Block","src":"1966:39:8","statements":[{"expression":{"id":1406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1404,"name":"publicKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1323,"src":"1976:9:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1405,"name":"_publicKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1399,"src":"1988:10:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"1976:22:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage","typeString":"bytes storage ref"}},"id":1407,"nodeType":"ExpressionStatement","src":"1976:22:8"}]},"functionSelector":"a91d58b4","id":1409,"implemented":true,"kind":"function","modifiers":[{"id":1402,"kind":"modifierInvocation","modifierName":{"id":1401,"name":"onlyOwner","nameLocations":["1956:9:8"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"1956:9:8"},"nodeType":"ModifierInvocation","src":"1956:9:8"}],"name":"setPublicKey","nameLocation":"1911:12:8","nodeType":"FunctionDefinition","parameters":{"id":1400,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1399,"mutability":"mutable","name":"_publicKey","nameLocation":"1937:10:8","nodeType":"VariableDeclaration","scope":1409,"src":"1924:23:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1398,"name":"bytes","nodeType":"ElementaryTypeName","src":"1924:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1923:25:8"},"returnParameters":{"id":1403,"nodeType":"ParameterList","parameters":[],"src":"1966:0:8"},"scope":1720,"src":"1902:103:8","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1423,"nodeType":"Block","src":"2135:125:8","statements":[{"expression":{"arguments":[{"hexValue":"596f752063616e6e6f74206d696e74206469726563746c79","id":1420,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2226:26:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_6e0ba3ea59b30a840c0b797c7d04b6c612b68aaacf304abeb8524b82759a6e30","typeString":"literal_string \"You cannot mint directly\""},"value":"You cannot mint directly"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_6e0ba3ea59b30a840c0b797c7d04b6c612b68aaacf304abeb8524b82759a6e30","typeString":"literal_string \"You cannot mint directly\""}],"id":1419,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"2219:6:8","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1421,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2219:34:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1422,"nodeType":"ExpressionStatement","src":"2219:34:8"}]},"documentation":{"id":1410,"nodeType":"StructuredDocumentation","src":"2011:65:8","text":" @notice Not implemented, cannot mint directly."},"functionSelector":"40c10f19","id":1424,"implemented":true,"kind":"function","modifiers":[{"id":1417,"kind":"modifierInvocation","modifierName":{"id":1416,"name":"onlyOwner","nameLocations":["2125:9:8"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"2125:9:8"},"nodeType":"ModifierInvocation","src":"2125:9:8"}],"name":"mint","nameLocation":"2090:4:8","nodeType":"FunctionDefinition","parameters":{"id":1415,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1412,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1424,"src":"2095:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1411,"name":"address","nodeType":"ElementaryTypeName","src":"2095:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1414,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1424,"src":"2104:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1413,"name":"uint256","nodeType":"ElementaryTypeName","src":"2104:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2094:18:8"},"returnParameters":{"id":1418,"nodeType":"ParameterList","parameters":[],"src":"2135:0:8"},"scope":1720,"src":"2081:179:8","stateMutability":"view","virtual":false,"visibility":"public"},{"baseFunctions":[795],"body":{"id":1444,"nodeType":"Block","src":"2386:61:8","statements":[{"expression":{"arguments":[{"id":1439,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1426,"src":"2423:4:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1440,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1428,"src":"2429:2:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1441,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1430,"src":"2433:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1436,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2396:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ProvableGBP_$1720_$","typeString":"type(contract super ProvableGBP)"}},"id":1438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2402:20:8","memberName":"_beforeTokenTransfer","nodeType":"MemberAccess","referencedDeclaration":795,"src":"2396:26:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1442,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2396:44:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1443,"nodeType":"ExpressionStatement","src":"2396:44:8"}]},"id":1445,"implemented":true,"kind":"function","modifiers":[{"id":1433,"kind":"modifierInvocation","modifierName":{"id":1432,"name":"whenNotPaused","nameLocations":["2355:13:8"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"2355:13:8"},"nodeType":"ModifierInvocation","src":"2355:13:8"}],"name":"_beforeTokenTransfer","nameLocation":"2275:20:8","nodeType":"FunctionDefinition","overrides":{"id":1434,"nodeType":"OverrideSpecifier","overrides":[],"src":"2373:8:8"},"parameters":{"id":1431,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1426,"mutability":"mutable","name":"from","nameLocation":"2304:4:8","nodeType":"VariableDeclaration","scope":1445,"src":"2296:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1425,"name":"address","nodeType":"ElementaryTypeName","src":"2296:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1428,"mutability":"mutable","name":"to","nameLocation":"2318:2:8","nodeType":"VariableDeclaration","scope":1445,"src":"2310:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1427,"name":"address","nodeType":"ElementaryTypeName","src":"2310:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1430,"mutability":"mutable","name":"amount","nameLocation":"2330:6:8","nodeType":"VariableDeclaration","scope":1445,"src":"2322:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1429,"name":"uint256","nodeType":"ElementaryTypeName","src":"2322:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2295:42:8"},"returnParameters":{"id":1435,"nodeType":"ParameterList","parameters":[],"src":"2386:0:8"},"scope":1720,"src":"2266:181:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1475,"nodeType":"Block","src":"2797:328:8","statements":[{"assignments":[1456,1458],"declarations":[{"constant":false,"id":1456,"mutability":"mutable","name":"requestId","nameLocation":"2901:9:8","nodeType":"VariableDeclaration","scope":1475,"src":"2893:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1455,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2893:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1458,"mutability":"mutable","name":"expiration","nameLocation":"2920:10:8","nodeType":"VariableDeclaration","scope":1475,"src":"2912:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1457,"name":"uint256","nodeType":"ElementaryTypeName","src":"2912:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1465,"initialValue":{"arguments":[{"expression":{"id":1460,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2967:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2971:6:8","memberName":"sender","nodeType":"MemberAccess","src":"2967:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1462,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1448,"src":"2991:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1463,"name":"encryptedData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1450,"src":"3011:13:8","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":1459,"name":"_processMintRequest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1640,"src":"2934:19:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes32_$_t_uint256_$","typeString":"function (address,uint256,bytes calldata) returns (bytes32,uint256)"}},"id":1464,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2934:100:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bytes32_$_t_uint256_$","typeString":"tuple(bytes32,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"2892:142:8"},{"eventCall":{"arguments":[{"expression":{"id":1467,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3061:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3065:6:8","memberName":"sender","nodeType":"MemberAccess","src":"3061:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1469,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1456,"src":"3073:9:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1470,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1448,"src":"3084:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1471,"name":"expiration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1458,"src":"3092:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1472,"name":"encryptedData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1450,"src":"3104:13:8","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":1466,"name":"MintRequest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1363,"src":"3049:11:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_bytes32_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,bytes32,uint256,uint256,bytes memory)"}},"id":1473,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3049:69:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1474,"nodeType":"EmitStatement","src":"3044:74:8"}]},"documentation":{"id":1446,"nodeType":"StructuredDocumentation","src":"2453:243:8","text":" @notice Creates an internal mint Commitment and emits a MintRequest event. Pausable.\n @param amount The amount to be minted (specified in 10^18 decimals)\n @param encryptedData The encrypted payload of the request"},"functionSelector":"cdc1f6d4","id":1476,"implemented":true,"kind":"function","modifiers":[{"id":1453,"kind":"modifierInvocation","modifierName":{"id":1452,"name":"whenNotPaused","nameLocations":["2783:13:8"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"2783:13:8"},"nodeType":"ModifierInvocation","src":"2783:13:8"}],"name":"mintRequest","nameLocation":"2710:11:8","nodeType":"FunctionDefinition","parameters":{"id":1451,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1448,"mutability":"mutable","name":"amount","nameLocation":"2730:6:8","nodeType":"VariableDeclaration","scope":1476,"src":"2722:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1447,"name":"uint256","nodeType":"ElementaryTypeName","src":"2722:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1450,"mutability":"mutable","name":"encryptedData","nameLocation":"2753:13:8","nodeType":"VariableDeclaration","scope":1476,"src":"2738:28:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1449,"name":"bytes","nodeType":"ElementaryTypeName","src":"2738:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2721:46:8"},"returnParameters":{"id":1454,"nodeType":"ParameterList","parameters":[],"src":"2797:0:8"},"scope":1720,"src":"2701:424:8","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1503,"nodeType":"Block","src":"3589:106:8","statements":[{"eventCall":{"arguments":[{"expression":{"baseExpression":{"id":1495,"name":"s_mintCommitments","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1337,"src":"3617:17:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Commitment_$1332_storage_$","typeString":"mapping(bytes32 => struct ProvableGBP.Commitment storage ref)"}},"id":1497,"indexExpression":{"id":1496,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1479,"src":"3635:9:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3617:28:8","typeDescriptions":{"typeIdentifier":"t_struct$_Commitment_$1332_storage","typeString":"struct ProvableGBP.Commitment storage ref"}},"id":1498,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3646:9:8","memberName":"requester","nodeType":"MemberAccess","referencedDeclaration":1327,"src":"3617:38:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1499,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1479,"src":"3657:9:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1500,"name":"serverEncryptedData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1481,"src":"3668:19:8","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":1494,"name":"AuthRequest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1371,"src":"3605:11:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,bytes32,bytes memory)"}},"id":1501,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3605:83:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1502,"nodeType":"EmitStatement","src":"3600:88:8"}]},"documentation":{"id":1477,"nodeType":"StructuredDocumentation","src":"3131:245:8","text":" @notice Triggered by the owner, emits an AuthRequest event for the original requester. Pausable.\n @param requestId the original mint request id\n @param serverEncryptedData the current auth. request's encrypted data"},"functionSelector":"a4629533","id":1504,"implemented":true,"kind":"function","modifiers":[{"id":1484,"kind":"modifierInvocation","modifierName":{"id":1483,"name":"onlyOwner","nameLocations":["3494:9:8"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"3494:9:8"},"nodeType":"ModifierInvocation","src":"3494:9:8"},{"id":1486,"kind":"modifierInvocation","modifierName":{"id":1485,"name":"whenNotPaused","nameLocations":["3508:13:8"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"3508:13:8"},"nodeType":"ModifierInvocation","src":"3508:13:8"},{"arguments":[{"id":1488,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1479,"src":"3544:9:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":1489,"kind":"modifierInvocation","modifierName":{"id":1487,"name":"validateRequestId","nameLocations":["3526:17:8"],"nodeType":"IdentifierPath","referencedDeclaration":1682,"src":"3526:17:8"},"nodeType":"ModifierInvocation","src":"3526:28:8"},{"arguments":[{"id":1491,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1479,"src":"3578:9:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":1492,"kind":"modifierInvocation","modifierName":{"id":1490,"name":"validateNotExpired","nameLocations":["3559:18:8"],"nodeType":"IdentifierPath","referencedDeclaration":1700,"src":"3559:18:8"},"nodeType":"ModifierInvocation","src":"3559:29:8"}],"name":"authRequest","nameLocation":"3390:11:8","nodeType":"FunctionDefinition","parameters":{"id":1482,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1479,"mutability":"mutable","name":"requestId","nameLocation":"3419:9:8","nodeType":"VariableDeclaration","scope":1504,"src":"3411:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1478,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3411:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1481,"mutability":"mutable","name":"serverEncryptedData","nameLocation":"3453:19:8","nodeType":"VariableDeclaration","scope":1504,"src":"3438:34:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1480,"name":"bytes","nodeType":"ElementaryTypeName","src":"3438:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3401:77:8"},"returnParameters":{"id":1493,"nodeType":"ParameterList","parameters":[],"src":"3589:0:8"},"scope":1720,"src":"3381:314:8","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1529,"nodeType":"Block","src":"4111:164:8","statements":[{"eventCall":{"arguments":[{"expression":{"id":1523,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4231:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4235:6:8","memberName":"sender","nodeType":"MemberAccess","src":"4231:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1525,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1507,"src":"4243:9:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1526,"name":"encryptedData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1509,"src":"4254:13:8","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":1522,"name":"AuthGranted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1379,"src":"4219:11:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,bytes32,bytes memory)"}},"id":1527,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4219:49:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1528,"nodeType":"EmitStatement","src":"4214:54:8"}]},"documentation":{"id":1505,"nodeType":"StructuredDocumentation","src":"3702:223:8","text":" @notice Triggered by the original requester, emits an AuthGranted event for the server. Pausable.\n @param requestId the original mint request id\n @param encryptedData the grant's encrypted data"},"functionSelector":"21a7e7e9","id":1530,"implemented":true,"kind":"function","modifiers":[{"id":1512,"kind":"modifierInvocation","modifierName":{"id":1511,"name":"whenNotPaused","nameLocations":["4015:13:8"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"4015:13:8"},"nodeType":"ModifierInvocation","src":"4015:13:8"},{"arguments":[{"id":1514,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1507,"src":"4051:9:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":1515,"kind":"modifierInvocation","modifierName":{"id":1513,"name":"validateRequestId","nameLocations":["4033:17:8"],"nodeType":"IdentifierPath","referencedDeclaration":1682,"src":"4033:17:8"},"nodeType":"ModifierInvocation","src":"4033:28:8"},{"arguments":[{"id":1517,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1507,"src":"4088:9:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":1518,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4099:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4103:6:8","memberName":"sender","nodeType":"MemberAccess","src":"4099:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":1520,"kind":"modifierInvocation","modifierName":{"id":1516,"name":"validateSameRequester","nameLocations":["4066:21:8"],"nodeType":"IdentifierPath","referencedDeclaration":1719,"src":"4066:21:8"},"nodeType":"ModifierInvocation","src":"4066:44:8"}],"name":"authGranted","nameLocation":"3939:11:8","nodeType":"FunctionDefinition","parameters":{"id":1510,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1507,"mutability":"mutable","name":"requestId","nameLocation":"3959:9:8","nodeType":"VariableDeclaration","scope":1530,"src":"3951:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1506,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3951:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1509,"mutability":"mutable","name":"encryptedData","nameLocation":"3985:13:8","nodeType":"VariableDeclaration","scope":1530,"src":"3970:28:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1508,"name":"bytes","nodeType":"ElementaryTypeName","src":"3970:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3950:49:8"},"returnParameters":{"id":1521,"nodeType":"ParameterList","parameters":[],"src":"4111:0:8"},"scope":1720,"src":"3930:345:8","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1573,"nodeType":"Block","src":"4586:390:8","statements":[{"assignments":[1544],"declarations":[{"constant":false,"id":1544,"mutability":"mutable","name":"amount","nameLocation":"4675:6:8","nodeType":"VariableDeclaration","scope":1573,"src":"4667:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1543,"name":"uint256","nodeType":"ElementaryTypeName","src":"4667:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1549,"initialValue":{"expression":{"baseExpression":{"id":1545,"name":"s_mintCommitments","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1337,"src":"4684:17:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Commitment_$1332_storage_$","typeString":"mapping(bytes32 => struct ProvableGBP.Commitment storage ref)"}},"id":1547,"indexExpression":{"id":1546,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1533,"src":"4702:9:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4684:28:8","typeDescriptions":{"typeIdentifier":"t_struct$_Commitment_$1332_storage","typeString":"struct ProvableGBP.Commitment storage ref"}},"id":1548,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4713:6:8","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":1331,"src":"4684:35:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4667:52:8"},{"assignments":[1551],"declarations":[{"constant":false,"id":1551,"mutability":"mutable","name":"receiver","nameLocation":"4737:8:8","nodeType":"VariableDeclaration","scope":1573,"src":"4729:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1550,"name":"address","nodeType":"ElementaryTypeName","src":"4729:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1556,"initialValue":{"expression":{"baseExpression":{"id":1552,"name":"s_mintCommitments","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1337,"src":"4748:17:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Commitment_$1332_storage_$","typeString":"mapping(bytes32 => struct ProvableGBP.Commitment storage ref)"}},"id":1554,"indexExpression":{"id":1553,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1533,"src":"4766:9:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4748:28:8","typeDescriptions":{"typeIdentifier":"t_struct$_Commitment_$1332_storage","typeString":"struct ProvableGBP.Commitment storage ref"}},"id":1555,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4777:9:8","memberName":"requester","nodeType":"MemberAccess","referencedDeclaration":1327,"src":"4748:38:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4729:57:8"},{"expression":{"id":1560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"4826:35:8","subExpression":{"baseExpression":{"id":1557,"name":"s_mintCommitments","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1337,"src":"4833:17:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Commitment_$1332_storage_$","typeString":"mapping(bytes32 => struct ProvableGBP.Commitment storage ref)"}},"id":1559,"indexExpression":{"id":1558,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1533,"src":"4851:9:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4833:28:8","typeDescriptions":{"typeIdentifier":"t_struct$_Commitment_$1332_storage","typeString":"struct ProvableGBP.Commitment storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1561,"nodeType":"ExpressionStatement","src":"4826:35:8"},{"expression":{"arguments":[{"id":1563,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1551,"src":"4901:8:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":1569,"name":"oneHundredPercent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1315,"src":"4950:17:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":1566,"name":"actualMintedPercentage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1320,"src":"4922:22:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1564,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1544,"src":"4911:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4918:3:8","memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":1182,"src":"4911:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1567,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4911:34:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4946:3:8","memberName":"div","nodeType":"MemberAccess","referencedDeclaration":1197,"src":"4911:38:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1570,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4911:57:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1562,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":624,"src":"4895:5:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1571,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4895:74:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1572,"nodeType":"ExpressionStatement","src":"4895:74:8"}]},"documentation":{"id":1531,"nodeType":"StructuredDocumentation","src":"4281:180:8","text":" @notice Triggered by the owner, when the fiat funds have cleared. Does the mint, minus seignorage. Pausable.\n @param requestId the original mint request id"},"functionSelector":"ac5b756d","id":1574,"implemented":true,"kind":"function","modifiers":[{"id":1536,"kind":"modifierInvocation","modifierName":{"id":1535,"name":"onlyOwner","nameLocations":["4525:9:8"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"4525:9:8"},"nodeType":"ModifierInvocation","src":"4525:9:8"},{"id":1538,"kind":"modifierInvocation","modifierName":{"id":1537,"name":"whenNotPaused","nameLocations":["4539:13:8"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"4539:13:8"},"nodeType":"ModifierInvocation","src":"4539:13:8"},{"arguments":[{"id":1540,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1533,"src":"4575:9:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":1541,"kind":"modifierInvocation","modifierName":{"id":1539,"name":"validateRequestId","nameLocations":["4557:17:8"],"nodeType":"IdentifierPath","referencedDeclaration":1682,"src":"4557:17:8"},"nodeType":"ModifierInvocation","src":"4557:28:8"}],"name":"paymentComplete","nameLocation":"4475:15:8","nodeType":"FunctionDefinition","parameters":{"id":1534,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1533,"mutability":"mutable","name":"requestId","nameLocation":"4499:9:8","nodeType":"VariableDeclaration","scope":1574,"src":"4491:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1532,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4491:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4490:19:8"},"returnParameters":{"id":1542,"nodeType":"ParameterList","parameters":[],"src":"4586:0:8"},"scope":1720,"src":"4466:510:8","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1639,"nodeType":"Block","src":"5138:511:8","statements":[{"expression":{"id":1596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1587,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1583,"src":"5148:9:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":1591,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1576,"src":"5187:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1592,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1578,"src":"5195:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1593,"name":"encryptedData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1580,"src":"5203:13:8","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"id":1589,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5170:3:8","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1590,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5174:12:8","memberName":"encodePacked","nodeType":"MemberAccess","src":"5170:16:8","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1594,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5170:47:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1588,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"5160:9:8","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1595,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5160:58:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"5148:70:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1597,"nodeType":"ExpressionStatement","src":"5148:70:8"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bytes31","typeString":"bytes31"},"id":1604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":1599,"name":"s_mintCommitments","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1337,"src":"5236:17:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Commitment_$1332_storage_$","typeString":"mapping(bytes32 => struct ProvableGBP.Commitment storage ref)"}},"id":1601,"indexExpression":{"id":1600,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1583,"src":"5254:9:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5236:28:8","typeDescriptions":{"typeIdentifier":"t_struct$_Commitment_$1332_storage","typeString":"struct ProvableGBP.Commitment storage ref"}},"id":1602,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5265:10:8","memberName":"paramsHash","nodeType":"MemberAccess","referencedDeclaration":1325,"src":"5236:39:8","typeDescriptions":{"typeIdentifier":"t_bytes31","typeString":"bytes31"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1603,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5279:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5236:44:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"52657175657374206170706561727320746f2062652061206475706c6963617465","id":1605,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5282:35:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_955d5c03ae98365b3505eba00b7e6d4dd87685869b10aacdc7b60c110ca7e23f","typeString":"literal_string \"Request appears to be a duplicate\""},"value":"Request appears to be a duplicate"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_955d5c03ae98365b3505eba00b7e6d4dd87685869b10aacdc7b60c110ca7e23f","typeString":"literal_string \"Request appears to be a duplicate\""}],"id":1598,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5228:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1606,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5228:90:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1607,"nodeType":"ExpressionStatement","src":"5228:90:8"},{"expression":{"id":1614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1608,"name":"expiration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1585,"src":"5382:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1612,"name":"getExpiryTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1309,"src":"5415:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":1609,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5395:5:8","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5401:9:8","memberName":"timestamp","nodeType":"MemberAccess","src":"5395:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5411:3:8","memberName":"add","nodeType":"MemberAccess","referencedDeclaration":1152,"src":"5395:19:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1613,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5395:34:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5382:47:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1615,"nodeType":"ExpressionStatement","src":"5382:47:8"},{"assignments":[1617],"declarations":[{"constant":false,"id":1617,"mutability":"mutable","name":"paramsHash","nameLocation":"5447:10:8","nodeType":"VariableDeclaration","scope":1639,"src":"5439:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes31","typeString":"bytes31"},"typeName":{"id":1616,"name":"bytes31","nodeType":"ElementaryTypeName","src":"5439:7:8","typeDescriptions":{"typeIdentifier":"t_bytes31","typeString":"bytes31"}},"visibility":"internal"}],"id":1623,"initialValue":{"arguments":[{"id":1619,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1578,"src":"5477:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1620,"name":"encryptedData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1580,"src":"5485:13:8","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"id":1621,"name":"expiration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1585,"src":"5500:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1618,"name":"_buildParamsHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1665,"src":"5460:16:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_bytes_calldata_ptr_$_t_uint256_$returns$_t_bytes31_$","typeString":"function (uint256,bytes calldata,uint256) pure returns (bytes31)"}},"id":1622,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5460:51:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes31","typeString":"bytes31"}},"nodeType":"VariableDeclarationStatement","src":"5439:72:8"},{"expression":{"id":1633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1624,"name":"s_mintCommitments","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1337,"src":"5521:17:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Commitment_$1332_storage_$","typeString":"mapping(bytes32 => struct ProvableGBP.Commitment storage ref)"}},"id":1626,"indexExpression":{"id":1625,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1583,"src":"5539:9:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5521:28:8","typeDescriptions":{"typeIdentifier":"t_struct$_Commitment_$1332_storage","typeString":"struct ProvableGBP.Commitment storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1628,"name":"paramsHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1617,"src":"5563:10:8","typeDescriptions":{"typeIdentifier":"t_bytes31","typeString":"bytes31"}},{"id":1629,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1576,"src":"5575:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1630,"name":"expiration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1585,"src":"5583:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1631,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1578,"src":"5595:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes31","typeString":"bytes31"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1627,"name":"Commitment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1332,"src":"5552:10:8","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Commitment_$1332_storage_ptr_$","typeString":"type(struct ProvableGBP.Commitment storage pointer)"}},"id":1632,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5552:50:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Commitment_$1332_memory_ptr","typeString":"struct ProvableGBP.Commitment memory"}},"src":"5521:81:8","typeDescriptions":{"typeIdentifier":"t_struct$_Commitment_$1332_storage","typeString":"struct ProvableGBP.Commitment storage ref"}},"id":1634,"nodeType":"ExpressionStatement","src":"5521:81:8"},{"expression":{"components":[{"id":1635,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1583,"src":"5620:9:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1636,"name":"expiration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1585,"src":"5631:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1637,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5619:23:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bytes32_$_t_uint256_$","typeString":"tuple(bytes32,uint256)"}},"functionReturnParameters":1586,"id":1638,"nodeType":"Return","src":"5612:30:8"}]},"id":1640,"implemented":true,"kind":"function","modifiers":[],"name":"_processMintRequest","nameLocation":"4991:19:8","nodeType":"FunctionDefinition","parameters":{"id":1581,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1576,"mutability":"mutable","name":"sender","nameLocation":"5019:6:8","nodeType":"VariableDeclaration","scope":1640,"src":"5011:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1575,"name":"address","nodeType":"ElementaryTypeName","src":"5011:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1578,"mutability":"mutable","name":"amount","nameLocation":"5035:6:8","nodeType":"VariableDeclaration","scope":1640,"src":"5027:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1577,"name":"uint256","nodeType":"ElementaryTypeName","src":"5027:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1580,"mutability":"mutable","name":"encryptedData","nameLocation":"5058:13:8","nodeType":"VariableDeclaration","scope":1640,"src":"5043:28:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1579,"name":"bytes","nodeType":"ElementaryTypeName","src":"5043:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5010:62:8"},"returnParameters":{"id":1586,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1583,"mutability":"mutable","name":"requestId","nameLocation":"5107:9:8","nodeType":"VariableDeclaration","scope":1640,"src":"5099:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1582,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5099:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1585,"mutability":"mutable","name":"expiration","nameLocation":"5126:10:8","nodeType":"VariableDeclaration","scope":1640,"src":"5118:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1584,"name":"uint256","nodeType":"ElementaryTypeName","src":"5118:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5098:39:8"},"scope":1720,"src":"4982:667:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1664,"nodeType":"Block","src":"6169:95:8","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":1657,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1643,"src":"6221:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1658,"name":"encryptedData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1645,"src":"6229:13:8","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"id":1659,"name":"expiration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1647,"src":"6244:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1655,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"6204:3:8","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1656,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6208:12:8","memberName":"encodePacked","nodeType":"MemberAccess","src":"6204:16:8","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1660,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6204:51:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1654,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"6194:9:8","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1661,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6194:62:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1653,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6186:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes31_$","typeString":"type(bytes31)"},"typeName":{"id":1652,"name":"bytes31","nodeType":"ElementaryTypeName","src":"6186:7:8","typeDescriptions":{}}},"id":1662,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6186:71:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes31","typeString":"bytes31"}},"functionReturnParameters":1651,"id":1663,"nodeType":"Return","src":"6179:78:8"}]},"documentation":{"id":1641,"nodeType":"StructuredDocumentation","src":"5655:355:8","text":" @notice Build the bytes31 hash from the amount, encryptedData and expiration.\n @param amount The amount to be minted (specified in 10^18 decimals)\n @param encryptedData The encrypted payload of the request\n @param expiration The expiration before the commitment becomes eligible for cleanup\n @return hash bytes31"},"id":1665,"implemented":true,"kind":"function","modifiers":[],"name":"_buildParamsHash","nameLocation":"6024:16:8","nodeType":"FunctionDefinition","parameters":{"id":1648,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1643,"mutability":"mutable","name":"amount","nameLocation":"6058:6:8","nodeType":"VariableDeclaration","scope":1665,"src":"6050:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1642,"name":"uint256","nodeType":"ElementaryTypeName","src":"6050:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1645,"mutability":"mutable","name":"encryptedData","nameLocation":"6089:13:8","nodeType":"VariableDeclaration","scope":1665,"src":"6074:28:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1644,"name":"bytes","nodeType":"ElementaryTypeName","src":"6074:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1647,"mutability":"mutable","name":"expiration","nameLocation":"6120:10:8","nodeType":"VariableDeclaration","scope":1665,"src":"6112:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1646,"name":"uint256","nodeType":"ElementaryTypeName","src":"6112:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6040:96:8"},"returnParameters":{"id":1651,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1650,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1665,"src":"6160:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes31","typeString":"bytes31"},"typeName":{"id":1649,"name":"bytes31","nodeType":"ElementaryTypeName","src":"6160:7:8","typeDescriptions":{"typeIdentifier":"t_bytes31","typeString":"bytes31"}},"visibility":"internal"}],"src":"6159:9:8"},"scope":1720,"src":"6015:249:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1681,"nodeType":"Block","src":"6459:112:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bytes31","typeString":"bytes31"},"id":1676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":1671,"name":"s_mintCommitments","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1337,"src":"6477:17:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Commitment_$1332_storage_$","typeString":"mapping(bytes32 => struct ProvableGBP.Commitment storage ref)"}},"id":1673,"indexExpression":{"id":1672,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1668,"src":"6495:9:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6477:28:8","typeDescriptions":{"typeIdentifier":"t_struct$_Commitment_$1332_storage","typeString":"struct ProvableGBP.Commitment storage ref"}},"id":1674,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6506:10:8","memberName":"paramsHash","nodeType":"MemberAccess","referencedDeclaration":1325,"src":"6477:39:8","typeDescriptions":{"typeIdentifier":"t_bytes31","typeString":"bytes31"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1675,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6520:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6477:44:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d757374206861766520612076616c696420726571756573744964","id":1677,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6523:29:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_03ea8cfeff0459e125641b51ffaeaacb881b172abb4a1cae381360ba7e33f193","typeString":"literal_string \"Must have a valid requestId\""},"value":"Must have a valid requestId"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_03ea8cfeff0459e125641b51ffaeaacb881b172abb4a1cae381360ba7e33f193","typeString":"literal_string \"Must have a valid requestId\""}],"id":1670,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6469:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1678,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6469:84:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1679,"nodeType":"ExpressionStatement","src":"6469:84:8"},{"id":1680,"nodeType":"PlaceholderStatement","src":"6563:1:8"}]},"documentation":{"id":1666,"nodeType":"StructuredDocumentation","src":"6270:138:8","text":" @dev Reverts if request ID does not exist\n @param requestId The given request ID to check in stored `commitments`"},"id":1682,"name":"validateRequestId","nameLocation":"6422:17:8","nodeType":"ModifierDefinition","parameters":{"id":1669,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1668,"mutability":"mutable","name":"requestId","nameLocation":"6448:9:8","nodeType":"VariableDeclaration","scope":1682,"src":"6440:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1667,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6440:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6439:19:8"},"src":"6413:158:8","virtual":false,"visibility":"internal"},{"body":{"id":1699,"nodeType":"Block","src":"6811:171:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":1688,"name":"s_mintCommitments","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1337,"src":"6883:17:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Commitment_$1332_storage_$","typeString":"mapping(bytes32 => struct ProvableGBP.Commitment storage ref)"}},"id":1690,"indexExpression":{"id":1689,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1685,"src":"6901:9:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6883:28:8","typeDescriptions":{"typeIdentifier":"t_struct$_Commitment_$1332_storage","typeString":"struct ProvableGBP.Commitment storage ref"}},"id":1691,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6912:10:8","memberName":"expiration","nodeType":"MemberAccess","referencedDeclaration":1329,"src":"6883:39:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":1692,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"6926:5:8","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6932:9:8","memberName":"timestamp","nodeType":"MemberAccess","src":"6926:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6883:58:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"526571756573742069732065787069726564","id":1695,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6943:20:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_178737e5f8d3bb08805c837a16fa9250a9a3808ba7fad1041b7fb05f30c86cda","typeString":"literal_string \"Request is expired\""},"value":"Request is expired"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_178737e5f8d3bb08805c837a16fa9250a9a3808ba7fad1041b7fb05f30c86cda","typeString":"literal_string \"Request is expired\""}],"id":1687,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6875:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1696,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6875:89:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1697,"nodeType":"ExpressionStatement","src":"6875:89:8"},{"id":1698,"nodeType":"PlaceholderStatement","src":"6974:1:8"}]},"documentation":{"id":1683,"nodeType":"StructuredDocumentation","src":"6577:182:8","text":" @dev Reverts if the commitment identified by the request ID has an expiry in the past\n @param requestId The given request ID to check in stored `commitments`"},"id":1700,"name":"validateNotExpired","nameLocation":"6773:18:8","nodeType":"ModifierDefinition","parameters":{"id":1686,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1685,"mutability":"mutable","name":"requestId","nameLocation":"6800:9:8","nodeType":"VariableDeclaration","scope":1700,"src":"6792:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1684,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6792:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6791:19:8"},"src":"6764:218:8","virtual":false,"visibility":"internal"},{"body":{"id":1718,"nodeType":"Block","src":"7216:116:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":1708,"name":"s_mintCommitments","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1337,"src":"7234:17:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_Commitment_$1332_storage_$","typeString":"mapping(bytes32 => struct ProvableGBP.Commitment storage ref)"}},"id":1710,"indexExpression":{"id":1709,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1703,"src":"7252:9:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7234:28:8","typeDescriptions":{"typeIdentifier":"t_struct$_Commitment_$1332_storage","typeString":"struct ProvableGBP.Commitment storage ref"}},"id":1711,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7263:9:8","memberName":"requester","nodeType":"MemberAccess","referencedDeclaration":1327,"src":"7234:38:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1712,"name":"requester","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1705,"src":"7276:9:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7234:51:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"52657175657374657220646f6573206e6f74206d61746368","id":1714,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7287:26:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_3171005413b2d9c41f1a7950fecbe6684be54180b50a3918c59874ae6ee26d66","typeString":"literal_string \"Requester does not match\""},"value":"Requester does not match"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3171005413b2d9c41f1a7950fecbe6684be54180b50a3918c59874ae6ee26d66","typeString":"literal_string \"Requester does not match\""}],"id":1707,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7226:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1715,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7226:88:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1716,"nodeType":"ExpressionStatement","src":"7226:88:8"},{"id":1717,"nodeType":"PlaceholderStatement","src":"7324:1:8"}]},"documentation":{"id":1701,"nodeType":"StructuredDocumentation","src":"6988:154:8","text":" @dev Reverts if the commitment has a recorded address different to the requester\n @param requester The account making the request"},"id":1719,"name":"validateSameRequester","nameLocation":"7156:21:8","nodeType":"ModifierDefinition","parameters":{"id":1706,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1703,"mutability":"mutable","name":"requestId","nameLocation":"7186:9:8","nodeType":"VariableDeclaration","scope":1719,"src":"7178:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1702,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7178:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1705,"mutability":"mutable","name":"requester","nameLocation":"7205:9:8","nodeType":"VariableDeclaration","scope":1719,"src":"7197:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1704,"name":"address","nodeType":"ElementaryTypeName","src":"7197:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7177:38:8"},"src":"7147:185:8","virtual":false,"visibility":"internal"}],"scope":1721,"src":"356:6978:8","usedErrors":[]}],"src":"32:7303:8"},"id":8}},"contracts":{"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.","kind":"dev","methods":{"constructor":{"details":"Initializes the contract setting the deployer as the initial owner."},"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":7,"contract":"@openzeppelin/contracts/access/Ownable.sol:Ownable","label":"_owner","offset":0,"slot":"0","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/security/Pausable.sol":{"Pausable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.","events":{"Paused(address)":{"details":"Emitted when the pause is triggered by `account`."},"Unpaused(address)":{"details":"Emitted when the pause is lifted by `account`."}},"kind":"dev","methods":{"constructor":{"details":"Initializes the contract in unpaused state."},"paused()":{"details":"Returns true if the contract is paused, and false otherwise."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"paused()":"5c975abb"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract in unpaused state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/Pausable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (security/Pausable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which allows children to implement an emergency stop\\n * mechanism that can be triggered by an authorized account.\\n *\\n * This module is used through inheritance. It will make available the\\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\\n * the functions of your contract. Note that they will not be pausable by\\n * simply including this module, only once the modifiers are put in place.\\n */\\nabstract contract Pausable is Context {\\n    /**\\n     * @dev Emitted when the pause is triggered by `account`.\\n     */\\n    event Paused(address account);\\n\\n    /**\\n     * @dev Emitted when the pause is lifted by `account`.\\n     */\\n    event Unpaused(address account);\\n\\n    bool private _paused;\\n\\n    /**\\n     * @dev Initializes the contract in unpaused state.\\n     */\\n    constructor() {\\n        _paused = false;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is not paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    modifier whenNotPaused() {\\n        _requireNotPaused();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    modifier whenPaused() {\\n        _requirePaused();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns true if the contract is paused, and false otherwise.\\n     */\\n    function paused() public view virtual returns (bool) {\\n        return _paused;\\n    }\\n\\n    /**\\n     * @dev Throws if the contract is paused.\\n     */\\n    function _requireNotPaused() internal view virtual {\\n        require(!paused(), \\\"Pausable: paused\\\");\\n    }\\n\\n    /**\\n     * @dev Throws if the contract is not paused.\\n     */\\n    function _requirePaused() internal view virtual {\\n        require(paused(), \\\"Pausable: not paused\\\");\\n    }\\n\\n    /**\\n     * @dev Triggers stopped state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    function _pause() internal virtual whenNotPaused {\\n        _paused = true;\\n        emit Paused(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns to normal state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    function _unpause() internal virtual whenPaused {\\n        _paused = false;\\n        emit Unpaused(_msgSender());\\n    }\\n}\\n\",\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":130,"contract":"@openzeppelin/contracts/security/Pausable.sol:Pausable","label":"_paused","offset":0,"slot":"0","type":"t_bool"}],"types":{"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ERC20":{"abi":[{"inputs":[{"internalType":"string","name":"name_","type":"string"},{"internalType":"string","name":"symbol_","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.","kind":"dev","methods":{"allowance(address,address)":{"details":"See {IERC20-allowance}."},"approve(address,uint256)":{"details":"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."},"balanceOf(address)":{"details":"See {IERC20-balanceOf}."},"constructor":{"details":"Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction."},"decimals()":{"details":"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"decreaseAllowance(address,uint256)":{"details":"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."},"increaseAllowance(address,uint256)":{"details":"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{"details":"See {IERC20-totalSupply}."},"transfer(address,uint256)":{"details":"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."},"transferFrom(address,address,uint256)":{"details":"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_265":{"entryPoint":null,"id":265,"parameterSlots":2,"returnSlots":0},"abi_decode_available_length_t_string_memory_ptr_fromMemory":{"entryPoint":376,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_string_memory_ptr_fromMemory":{"entryPoint":451,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory":{"entryPoint":502,"id":null,"parameterSlots":2,"returnSlots":2},"allocate_memory":{"entryPoint":247,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":99,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":278,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":746,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":635,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":1067,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_uint256":{"entryPoint":882,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":1028,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_uint256_to_t_uint256":{"entryPoint":902,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":1222,"id":null,"parameterSlots":2,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":332,"id":null,"parameterSlots":3,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":767,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":693,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":1192,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":193,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":892,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":1160,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x22":{"entryPoint":646,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":146,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":942,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":119,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":124,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":114,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":109,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":129,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":783,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":1147,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":1000,"id":null,"parameterSlots":2,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":796,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":952,"id":null,"parameterSlots":3,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":995,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:8574:9","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:9","statements":[{"nodeType":"YulAssignment","src":"57:19:9","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:9","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:9"},"nodeType":"YulFunctionCall","src":"67:9:9"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:9"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:9","type":""}],"src":"7:75:9"},{"body":{"nodeType":"YulBlock","src":"177:28:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:9"},"nodeType":"YulFunctionCall","src":"187:12:9"},"nodeType":"YulExpressionStatement","src":"187:12:9"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:9"},{"body":{"nodeType":"YulBlock","src":"300:28:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:9"},"nodeType":"YulFunctionCall","src":"310:12:9"},"nodeType":"YulExpressionStatement","src":"310:12:9"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:9"},{"body":{"nodeType":"YulBlock","src":"423:28:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"440:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"443:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"433:6:9"},"nodeType":"YulFunctionCall","src":"433:12:9"},"nodeType":"YulExpressionStatement","src":"433:12:9"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"334:117:9"},{"body":{"nodeType":"YulBlock","src":"546:28:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"563:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"566:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"556:6:9"},"nodeType":"YulFunctionCall","src":"556:12:9"},"nodeType":"YulExpressionStatement","src":"556:12:9"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"457:117:9"},{"body":{"nodeType":"YulBlock","src":"628:54:9","statements":[{"nodeType":"YulAssignment","src":"638:38:9","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"656:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"663:2:9","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"652:3:9"},"nodeType":"YulFunctionCall","src":"652:14:9"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"672:2:9","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"668:3:9"},"nodeType":"YulFunctionCall","src":"668:7:9"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"648:3:9"},"nodeType":"YulFunctionCall","src":"648:28:9"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"638:6:9"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"611:5:9","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"621:6:9","type":""}],"src":"580:102:9"},{"body":{"nodeType":"YulBlock","src":"716:152:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"733:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"736:77:9","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"726:6:9"},"nodeType":"YulFunctionCall","src":"726:88:9"},"nodeType":"YulExpressionStatement","src":"726:88:9"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"830:1:9","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"833:4:9","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"823:6:9"},"nodeType":"YulFunctionCall","src":"823:15:9"},"nodeType":"YulExpressionStatement","src":"823:15:9"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"854:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"857:4:9","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"847:6:9"},"nodeType":"YulFunctionCall","src":"847:15:9"},"nodeType":"YulExpressionStatement","src":"847:15:9"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"688:180:9"},{"body":{"nodeType":"YulBlock","src":"917:238:9","statements":[{"nodeType":"YulVariableDeclaration","src":"927:58:9","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"949:6:9"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"979:4:9"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"957:21:9"},"nodeType":"YulFunctionCall","src":"957:27:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"945:3:9"},"nodeType":"YulFunctionCall","src":"945:40:9"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"931:10:9","type":""}]},{"body":{"nodeType":"YulBlock","src":"1096:22:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1098:16:9"},"nodeType":"YulFunctionCall","src":"1098:18:9"},"nodeType":"YulExpressionStatement","src":"1098:18:9"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1039:10:9"},{"kind":"number","nodeType":"YulLiteral","src":"1051:18:9","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1036:2:9"},"nodeType":"YulFunctionCall","src":"1036:34:9"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1075:10:9"},{"name":"memPtr","nodeType":"YulIdentifier","src":"1087:6:9"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1072:2:9"},"nodeType":"YulFunctionCall","src":"1072:22:9"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1033:2:9"},"nodeType":"YulFunctionCall","src":"1033:62:9"},"nodeType":"YulIf","src":"1030:88:9"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1134:2:9","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1138:10:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1127:6:9"},"nodeType":"YulFunctionCall","src":"1127:22:9"},"nodeType":"YulExpressionStatement","src":"1127:22:9"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"903:6:9","type":""},{"name":"size","nodeType":"YulTypedName","src":"911:4:9","type":""}],"src":"874:281:9"},{"body":{"nodeType":"YulBlock","src":"1202:88:9","statements":[{"nodeType":"YulAssignment","src":"1212:30:9","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"1222:18:9"},"nodeType":"YulFunctionCall","src":"1222:20:9"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1212:6:9"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1271:6:9"},{"name":"size","nodeType":"YulIdentifier","src":"1279:4:9"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"1251:19:9"},"nodeType":"YulFunctionCall","src":"1251:33:9"},"nodeType":"YulExpressionStatement","src":"1251:33:9"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"1186:4:9","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1195:6:9","type":""}],"src":"1161:129:9"},{"body":{"nodeType":"YulBlock","src":"1363:241:9","statements":[{"body":{"nodeType":"YulBlock","src":"1468:22:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1470:16:9"},"nodeType":"YulFunctionCall","src":"1470:18:9"},"nodeType":"YulExpressionStatement","src":"1470:18:9"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1440:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"1448:18:9","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1437:2:9"},"nodeType":"YulFunctionCall","src":"1437:30:9"},"nodeType":"YulIf","src":"1434:56:9"},{"nodeType":"YulAssignment","src":"1500:37:9","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1530:6:9"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"1508:21:9"},"nodeType":"YulFunctionCall","src":"1508:29:9"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1500:4:9"}]},{"nodeType":"YulAssignment","src":"1574:23:9","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"1586:4:9"},{"kind":"number","nodeType":"YulLiteral","src":"1592:4:9","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1582:3:9"},"nodeType":"YulFunctionCall","src":"1582:15:9"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1574:4:9"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"1347:6:9","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"1358:4:9","type":""}],"src":"1296:308:9"},{"body":{"nodeType":"YulBlock","src":"1672:184:9","statements":[{"nodeType":"YulVariableDeclaration","src":"1682:10:9","value":{"kind":"number","nodeType":"YulLiteral","src":"1691:1:9","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1686:1:9","type":""}]},{"body":{"nodeType":"YulBlock","src":"1751:63:9","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1776:3:9"},{"name":"i","nodeType":"YulIdentifier","src":"1781:1:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1772:3:9"},"nodeType":"YulFunctionCall","src":"1772:11:9"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1795:3:9"},{"name":"i","nodeType":"YulIdentifier","src":"1800:1:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1791:3:9"},"nodeType":"YulFunctionCall","src":"1791:11:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1785:5:9"},"nodeType":"YulFunctionCall","src":"1785:18:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1765:6:9"},"nodeType":"YulFunctionCall","src":"1765:39:9"},"nodeType":"YulExpressionStatement","src":"1765:39:9"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1712:1:9"},{"name":"length","nodeType":"YulIdentifier","src":"1715:6:9"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1709:2:9"},"nodeType":"YulFunctionCall","src":"1709:13:9"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1723:19:9","statements":[{"nodeType":"YulAssignment","src":"1725:15:9","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1734:1:9"},{"kind":"number","nodeType":"YulLiteral","src":"1737:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1730:3:9"},"nodeType":"YulFunctionCall","src":"1730:10:9"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1725:1:9"}]}]},"pre":{"nodeType":"YulBlock","src":"1705:3:9","statements":[]},"src":"1701:113:9"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1834:3:9"},{"name":"length","nodeType":"YulIdentifier","src":"1839:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1830:3:9"},"nodeType":"YulFunctionCall","src":"1830:16:9"},{"kind":"number","nodeType":"YulLiteral","src":"1848:1:9","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1823:6:9"},"nodeType":"YulFunctionCall","src":"1823:27:9"},"nodeType":"YulExpressionStatement","src":"1823:27:9"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1654:3:9","type":""},{"name":"dst","nodeType":"YulTypedName","src":"1659:3:9","type":""},{"name":"length","nodeType":"YulTypedName","src":"1664:6:9","type":""}],"src":"1610:246:9"},{"body":{"nodeType":"YulBlock","src":"1957:339:9","statements":[{"nodeType":"YulAssignment","src":"1967:75:9","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2034:6:9"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"1992:41:9"},"nodeType":"YulFunctionCall","src":"1992:49:9"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"1976:15:9"},"nodeType":"YulFunctionCall","src":"1976:66:9"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"1967:5:9"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2058:5:9"},{"name":"length","nodeType":"YulIdentifier","src":"2065:6:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2051:6:9"},"nodeType":"YulFunctionCall","src":"2051:21:9"},"nodeType":"YulExpressionStatement","src":"2051:21:9"},{"nodeType":"YulVariableDeclaration","src":"2081:27:9","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2096:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"2103:4:9","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2092:3:9"},"nodeType":"YulFunctionCall","src":"2092:16:9"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"2085:3:9","type":""}]},{"body":{"nodeType":"YulBlock","src":"2146:83:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"2148:77:9"},"nodeType":"YulFunctionCall","src":"2148:79:9"},"nodeType":"YulExpressionStatement","src":"2148:79:9"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2127:3:9"},{"name":"length","nodeType":"YulIdentifier","src":"2132:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2123:3:9"},"nodeType":"YulFunctionCall","src":"2123:16:9"},{"name":"end","nodeType":"YulIdentifier","src":"2141:3:9"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2120:2:9"},"nodeType":"YulFunctionCall","src":"2120:25:9"},"nodeType":"YulIf","src":"2117:112:9"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2273:3:9"},{"name":"dst","nodeType":"YulIdentifier","src":"2278:3:9"},{"name":"length","nodeType":"YulIdentifier","src":"2283:6:9"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"2238:34:9"},"nodeType":"YulFunctionCall","src":"2238:52:9"},"nodeType":"YulExpressionStatement","src":"2238:52:9"}]},"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1930:3:9","type":""},{"name":"length","nodeType":"YulTypedName","src":"1935:6:9","type":""},{"name":"end","nodeType":"YulTypedName","src":"1943:3:9","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"1951:5:9","type":""}],"src":"1862:434:9"},{"body":{"nodeType":"YulBlock","src":"2389:282:9","statements":[{"body":{"nodeType":"YulBlock","src":"2438:83:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"2440:77:9"},"nodeType":"YulFunctionCall","src":"2440:79:9"},"nodeType":"YulExpressionStatement","src":"2440:79:9"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2417:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"2425:4:9","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2413:3:9"},"nodeType":"YulFunctionCall","src":"2413:17:9"},{"name":"end","nodeType":"YulIdentifier","src":"2432:3:9"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2409:3:9"},"nodeType":"YulFunctionCall","src":"2409:27:9"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2402:6:9"},"nodeType":"YulFunctionCall","src":"2402:35:9"},"nodeType":"YulIf","src":"2399:122:9"},{"nodeType":"YulVariableDeclaration","src":"2530:27:9","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2550:6:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2544:5:9"},"nodeType":"YulFunctionCall","src":"2544:13:9"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2534:6:9","type":""}]},{"nodeType":"YulAssignment","src":"2566:99:9","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2638:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"2646:4:9","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2634:3:9"},"nodeType":"YulFunctionCall","src":"2634:17:9"},{"name":"length","nodeType":"YulIdentifier","src":"2653:6:9"},{"name":"end","nodeType":"YulIdentifier","src":"2661:3:9"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"2575:58:9"},"nodeType":"YulFunctionCall","src":"2575:90:9"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"2566:5:9"}]}]},"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2367:6:9","type":""},{"name":"end","nodeType":"YulTypedName","src":"2375:3:9","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2383:5:9","type":""}],"src":"2316:355:9"},{"body":{"nodeType":"YulBlock","src":"2791:739:9","statements":[{"body":{"nodeType":"YulBlock","src":"2837:83:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2839:77:9"},"nodeType":"YulFunctionCall","src":"2839:79:9"},"nodeType":"YulExpressionStatement","src":"2839:79:9"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2812:7:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"2821:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2808:3:9"},"nodeType":"YulFunctionCall","src":"2808:23:9"},{"kind":"number","nodeType":"YulLiteral","src":"2833:2:9","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2804:3:9"},"nodeType":"YulFunctionCall","src":"2804:32:9"},"nodeType":"YulIf","src":"2801:119:9"},{"nodeType":"YulBlock","src":"2930:291:9","statements":[{"nodeType":"YulVariableDeclaration","src":"2945:38:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2969:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"2980:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2965:3:9"},"nodeType":"YulFunctionCall","src":"2965:17:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2959:5:9"},"nodeType":"YulFunctionCall","src":"2959:24:9"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2949:6:9","type":""}]},{"body":{"nodeType":"YulBlock","src":"3030:83:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"3032:77:9"},"nodeType":"YulFunctionCall","src":"3032:79:9"},"nodeType":"YulExpressionStatement","src":"3032:79:9"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3002:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"3010:18:9","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2999:2:9"},"nodeType":"YulFunctionCall","src":"2999:30:9"},"nodeType":"YulIf","src":"2996:117:9"},{"nodeType":"YulAssignment","src":"3127:84:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3183:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"3194:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3179:3:9"},"nodeType":"YulFunctionCall","src":"3179:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3203:7:9"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"3137:41:9"},"nodeType":"YulFunctionCall","src":"3137:74:9"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3127:6:9"}]}]},{"nodeType":"YulBlock","src":"3231:292:9","statements":[{"nodeType":"YulVariableDeclaration","src":"3246:39:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3270:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"3281:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3266:3:9"},"nodeType":"YulFunctionCall","src":"3266:18:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3260:5:9"},"nodeType":"YulFunctionCall","src":"3260:25:9"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3250:6:9","type":""}]},{"body":{"nodeType":"YulBlock","src":"3332:83:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"3334:77:9"},"nodeType":"YulFunctionCall","src":"3334:79:9"},"nodeType":"YulExpressionStatement","src":"3334:79:9"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3304:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"3312:18:9","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3301:2:9"},"nodeType":"YulFunctionCall","src":"3301:30:9"},"nodeType":"YulIf","src":"3298:117:9"},{"nodeType":"YulAssignment","src":"3429:84:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3485:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"3496:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3481:3:9"},"nodeType":"YulFunctionCall","src":"3481:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3505:7:9"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"3439:41:9"},"nodeType":"YulFunctionCall","src":"3439:74:9"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3429:6:9"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2753:9:9","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2764:7:9","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2776:6:9","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2784:6:9","type":""}],"src":"2677:853:9"},{"body":{"nodeType":"YulBlock","src":"3595:40:9","statements":[{"nodeType":"YulAssignment","src":"3606:22:9","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3622:5:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3616:5:9"},"nodeType":"YulFunctionCall","src":"3616:12:9"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3606:6:9"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3578:5:9","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"3588:6:9","type":""}],"src":"3536:99:9"},{"body":{"nodeType":"YulBlock","src":"3669:152:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3686:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3689:77:9","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3679:6:9"},"nodeType":"YulFunctionCall","src":"3679:88:9"},"nodeType":"YulExpressionStatement","src":"3679:88:9"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3783:1:9","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3786:4:9","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3776:6:9"},"nodeType":"YulFunctionCall","src":"3776:15:9"},"nodeType":"YulExpressionStatement","src":"3776:15:9"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3807:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3810:4:9","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3800:6:9"},"nodeType":"YulFunctionCall","src":"3800:15:9"},"nodeType":"YulExpressionStatement","src":"3800:15:9"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"3641:180:9"},{"body":{"nodeType":"YulBlock","src":"3878:269:9","statements":[{"nodeType":"YulAssignment","src":"3888:22:9","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3902:4:9"},{"kind":"number","nodeType":"YulLiteral","src":"3908:1:9","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3898:3:9"},"nodeType":"YulFunctionCall","src":"3898:12:9"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3888:6:9"}]},{"nodeType":"YulVariableDeclaration","src":"3919:38:9","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3949:4:9"},{"kind":"number","nodeType":"YulLiteral","src":"3955:1:9","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3945:3:9"},"nodeType":"YulFunctionCall","src":"3945:12:9"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"3923:18:9","type":""}]},{"body":{"nodeType":"YulBlock","src":"3996:51:9","statements":[{"nodeType":"YulAssignment","src":"4010:27:9","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4024:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"4032:4:9","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4020:3:9"},"nodeType":"YulFunctionCall","src":"4020:17:9"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"4010:6:9"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"3976:18:9"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3969:6:9"},"nodeType":"YulFunctionCall","src":"3969:26:9"},"nodeType":"YulIf","src":"3966:81:9"},{"body":{"nodeType":"YulBlock","src":"4099:42:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"4113:16:9"},"nodeType":"YulFunctionCall","src":"4113:18:9"},"nodeType":"YulExpressionStatement","src":"4113:18:9"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"4063:18:9"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4086:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"4094:2:9","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4083:2:9"},"nodeType":"YulFunctionCall","src":"4083:14:9"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4060:2:9"},"nodeType":"YulFunctionCall","src":"4060:38:9"},"nodeType":"YulIf","src":"4057:84:9"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"3862:4:9","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"3871:6:9","type":""}],"src":"3827:320:9"},{"body":{"nodeType":"YulBlock","src":"4207:87:9","statements":[{"nodeType":"YulAssignment","src":"4217:11:9","value":{"name":"ptr","nodeType":"YulIdentifier","src":"4225:3:9"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"4217:4:9"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4245:1:9","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"4248:3:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4238:6:9"},"nodeType":"YulFunctionCall","src":"4238:14:9"},"nodeType":"YulExpressionStatement","src":"4238:14:9"},{"nodeType":"YulAssignment","src":"4261:26:9","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4279:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4282:4:9","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"4269:9:9"},"nodeType":"YulFunctionCall","src":"4269:18:9"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"4261:4:9"}]}]},"name":"array_dataslot_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"4194:3:9","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"4202:4:9","type":""}],"src":"4153:141:9"},{"body":{"nodeType":"YulBlock","src":"4344:49:9","statements":[{"nodeType":"YulAssignment","src":"4354:33:9","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4372:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"4379:2:9","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4368:3:9"},"nodeType":"YulFunctionCall","src":"4368:14:9"},{"kind":"number","nodeType":"YulLiteral","src":"4384:2:9","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4364:3:9"},"nodeType":"YulFunctionCall","src":"4364:23:9"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"4354:6:9"}]}]},"name":"divide_by_32_ceil","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4327:5:9","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"4337:6:9","type":""}],"src":"4300:93:9"},{"body":{"nodeType":"YulBlock","src":"4452:54:9","statements":[{"nodeType":"YulAssignment","src":"4462:37:9","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"4487:4:9"},{"name":"value","nodeType":"YulIdentifier","src":"4493:5:9"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4483:3:9"},"nodeType":"YulFunctionCall","src":"4483:16:9"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"4462:8:9"}]}]},"name":"shift_left_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"4427:4:9","type":""},{"name":"value","nodeType":"YulTypedName","src":"4433:5:9","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"4443:8:9","type":""}],"src":"4399:107:9"},{"body":{"nodeType":"YulBlock","src":"4588:317:9","statements":[{"nodeType":"YulVariableDeclaration","src":"4598:35:9","value":{"arguments":[{"name":"shiftBytes","nodeType":"YulIdentifier","src":"4619:10:9"},{"kind":"number","nodeType":"YulLiteral","src":"4631:1:9","type":"","value":"8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"4615:3:9"},"nodeType":"YulFunctionCall","src":"4615:18:9"},"variables":[{"name":"shiftBits","nodeType":"YulTypedName","src":"4602:9:9","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4642:109:9","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"4673:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"4684:66:9","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"4654:18:9"},"nodeType":"YulFunctionCall","src":"4654:97:9"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"4646:4:9","type":""}]},{"nodeType":"YulAssignment","src":"4760:51:9","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"4791:9:9"},{"name":"toInsert","nodeType":"YulIdentifier","src":"4802:8:9"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"4772:18:9"},"nodeType":"YulFunctionCall","src":"4772:39:9"},"variableNames":[{"name":"toInsert","nodeType":"YulIdentifier","src":"4760:8:9"}]},{"nodeType":"YulAssignment","src":"4820:30:9","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4833:5:9"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"4844:4:9"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4840:3:9"},"nodeType":"YulFunctionCall","src":"4840:9:9"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4829:3:9"},"nodeType":"YulFunctionCall","src":"4829:21:9"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"4820:5:9"}]},{"nodeType":"YulAssignment","src":"4859:40:9","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4872:5:9"},{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"4883:8:9"},{"name":"mask","nodeType":"YulIdentifier","src":"4893:4:9"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4879:3:9"},"nodeType":"YulFunctionCall","src":"4879:19:9"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"4869:2:9"},"nodeType":"YulFunctionCall","src":"4869:30:9"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"4859:6:9"}]}]},"name":"update_byte_slice_dynamic32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4549:5:9","type":""},{"name":"shiftBytes","nodeType":"YulTypedName","src":"4556:10:9","type":""},{"name":"toInsert","nodeType":"YulTypedName","src":"4568:8:9","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"4581:6:9","type":""}],"src":"4512:393:9"},{"body":{"nodeType":"YulBlock","src":"4956:32:9","statements":[{"nodeType":"YulAssignment","src":"4966:16:9","value":{"name":"value","nodeType":"YulIdentifier","src":"4977:5:9"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"4966:7:9"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4938:5:9","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"4948:7:9","type":""}],"src":"4911:77:9"},{"body":{"nodeType":"YulBlock","src":"5026:28:9","statements":[{"nodeType":"YulAssignment","src":"5036:12:9","value":{"name":"value","nodeType":"YulIdentifier","src":"5043:5:9"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"5036:3:9"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5012:5:9","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"5022:3:9","type":""}],"src":"4994:60:9"},{"body":{"nodeType":"YulBlock","src":"5120:82:9","statements":[{"nodeType":"YulAssignment","src":"5130:66:9","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5188:5:9"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5170:17:9"},"nodeType":"YulFunctionCall","src":"5170:24:9"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"5161:8:9"},"nodeType":"YulFunctionCall","src":"5161:34:9"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5143:17:9"},"nodeType":"YulFunctionCall","src":"5143:53:9"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"5130:9:9"}]}]},"name":"convert_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5100:5:9","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"5110:9:9","type":""}],"src":"5060:142:9"},{"body":{"nodeType":"YulBlock","src":"5255:28:9","statements":[{"nodeType":"YulAssignment","src":"5265:12:9","value":{"name":"value","nodeType":"YulIdentifier","src":"5272:5:9"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"5265:3:9"}]}]},"name":"prepare_store_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5241:5:9","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"5251:3:9","type":""}],"src":"5208:75:9"},{"body":{"nodeType":"YulBlock","src":"5365:193:9","statements":[{"nodeType":"YulVariableDeclaration","src":"5375:63:9","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"5430:7:9"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"5399:30:9"},"nodeType":"YulFunctionCall","src":"5399:39:9"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"5379:16:9","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5454:4:9"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5494:4:9"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"5488:5:9"},"nodeType":"YulFunctionCall","src":"5488:11:9"},{"name":"offset","nodeType":"YulIdentifier","src":"5501:6:9"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"5533:16:9"}],"functionName":{"name":"prepare_store_t_uint256","nodeType":"YulIdentifier","src":"5509:23:9"},"nodeType":"YulFunctionCall","src":"5509:41:9"}],"functionName":{"name":"update_byte_slice_dynamic32","nodeType":"YulIdentifier","src":"5460:27:9"},"nodeType":"YulFunctionCall","src":"5460:91:9"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"5447:6:9"},"nodeType":"YulFunctionCall","src":"5447:105:9"},"nodeType":"YulExpressionStatement","src":"5447:105:9"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"5342:4:9","type":""},{"name":"offset","nodeType":"YulTypedName","src":"5348:6:9","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"5356:7:9","type":""}],"src":"5289:269:9"},{"body":{"nodeType":"YulBlock","src":"5613:24:9","statements":[{"nodeType":"YulAssignment","src":"5623:8:9","value":{"kind":"number","nodeType":"YulLiteral","src":"5630:1:9","type":"","value":"0"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"5623:3:9"}]}]},"name":"zero_value_for_split_t_uint256","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"5609:3:9","type":""}],"src":"5564:73:9"},{"body":{"nodeType":"YulBlock","src":"5696:136:9","statements":[{"nodeType":"YulVariableDeclaration","src":"5706:46:9","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nodeType":"YulIdentifier","src":"5720:30:9"},"nodeType":"YulFunctionCall","src":"5720:32:9"},"variables":[{"name":"zero_0","nodeType":"YulTypedName","src":"5710:6:9","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5805:4:9"},{"name":"offset","nodeType":"YulIdentifier","src":"5811:6:9"},{"name":"zero_0","nodeType":"YulIdentifier","src":"5819:6:9"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"5761:43:9"},"nodeType":"YulFunctionCall","src":"5761:65:9"},"nodeType":"YulExpressionStatement","src":"5761:65:9"}]},"name":"storage_set_to_zero_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"5682:4:9","type":""},{"name":"offset","nodeType":"YulTypedName","src":"5688:6:9","type":""}],"src":"5643:189:9"},{"body":{"nodeType":"YulBlock","src":"5888:136:9","statements":[{"body":{"nodeType":"YulBlock","src":"5955:63:9","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"5999:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"6006:1:9","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nodeType":"YulIdentifier","src":"5969:29:9"},"nodeType":"YulFunctionCall","src":"5969:39:9"},"nodeType":"YulExpressionStatement","src":"5969:39:9"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"5908:5:9"},{"name":"end","nodeType":"YulIdentifier","src":"5915:3:9"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5905:2:9"},"nodeType":"YulFunctionCall","src":"5905:14:9"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"5920:26:9","statements":[{"nodeType":"YulAssignment","src":"5922:22:9","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"5935:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"5942:1:9","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5931:3:9"},"nodeType":"YulFunctionCall","src":"5931:13:9"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"5922:5:9"}]}]},"pre":{"nodeType":"YulBlock","src":"5902:2:9","statements":[]},"src":"5898:120:9"}]},"name":"clear_storage_range_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"5876:5:9","type":""},{"name":"end","nodeType":"YulTypedName","src":"5883:3:9","type":""}],"src":"5838:186:9"},{"body":{"nodeType":"YulBlock","src":"6109:464:9","statements":[{"body":{"nodeType":"YulBlock","src":"6135:431:9","statements":[{"nodeType":"YulVariableDeclaration","src":"6149:54:9","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"6197:5:9"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"6165:31:9"},"nodeType":"YulFunctionCall","src":"6165:38:9"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"6153:8:9","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6216:63:9","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"6239:8:9"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"6267:10:9"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"6249:17:9"},"nodeType":"YulFunctionCall","src":"6249:29:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6235:3:9"},"nodeType":"YulFunctionCall","src":"6235:44:9"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"6220:11:9","type":""}]},{"body":{"nodeType":"YulBlock","src":"6436:27:9","statements":[{"nodeType":"YulAssignment","src":"6438:23:9","value":{"name":"dataArea","nodeType":"YulIdentifier","src":"6453:8:9"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"6438:11:9"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"6420:10:9"},{"kind":"number","nodeType":"YulLiteral","src":"6432:2:9","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6417:2:9"},"nodeType":"YulFunctionCall","src":"6417:18:9"},"nodeType":"YulIf","src":"6414:49:9"},{"expression":{"arguments":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"6505:11:9"},{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"6522:8:9"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"6550:3:9"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"6532:17:9"},"nodeType":"YulFunctionCall","src":"6532:22:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6518:3:9"},"nodeType":"YulFunctionCall","src":"6518:37:9"}],"functionName":{"name":"clear_storage_range_t_bytes1","nodeType":"YulIdentifier","src":"6476:28:9"},"nodeType":"YulFunctionCall","src":"6476:80:9"},"nodeType":"YulExpressionStatement","src":"6476:80:9"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"6126:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"6131:2:9","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6123:2:9"},"nodeType":"YulFunctionCall","src":"6123:11:9"},"nodeType":"YulIf","src":"6120:446:9"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"6085:5:9","type":""},{"name":"len","nodeType":"YulTypedName","src":"6092:3:9","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"6097:10:9","type":""}],"src":"6030:543:9"},{"body":{"nodeType":"YulBlock","src":"6642:54:9","statements":[{"nodeType":"YulAssignment","src":"6652:37:9","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"6677:4:9"},{"name":"value","nodeType":"YulIdentifier","src":"6683:5:9"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"6673:3:9"},"nodeType":"YulFunctionCall","src":"6673:16:9"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"6652:8:9"}]}]},"name":"shift_right_unsigned_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"6617:4:9","type":""},{"name":"value","nodeType":"YulTypedName","src":"6623:5:9","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"6633:8:9","type":""}],"src":"6579:117:9"},{"body":{"nodeType":"YulBlock","src":"6753:118:9","statements":[{"nodeType":"YulVariableDeclaration","src":"6763:68:9","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6812:1:9","type":"","value":"8"},{"name":"bytes","nodeType":"YulIdentifier","src":"6815:5:9"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"6808:3:9"},"nodeType":"YulFunctionCall","src":"6808:13:9"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6827:1:9","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"6823:3:9"},"nodeType":"YulFunctionCall","src":"6823:6:9"}],"functionName":{"name":"shift_right_unsigned_dynamic","nodeType":"YulIdentifier","src":"6779:28:9"},"nodeType":"YulFunctionCall","src":"6779:51:9"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"6775:3:9"},"nodeType":"YulFunctionCall","src":"6775:56:9"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"6767:4:9","type":""}]},{"nodeType":"YulAssignment","src":"6840:25:9","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"6854:4:9"},{"name":"mask","nodeType":"YulIdentifier","src":"6860:4:9"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6850:3:9"},"nodeType":"YulFunctionCall","src":"6850:15:9"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"6840:6:9"}]}]},"name":"mask_bytes_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"6730:4:9","type":""},{"name":"bytes","nodeType":"YulTypedName","src":"6736:5:9","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"6746:6:9","type":""}],"src":"6702:169:9"},{"body":{"nodeType":"YulBlock","src":"6957:214:9","statements":[{"nodeType":"YulAssignment","src":"7090:37:9","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"7117:4:9"},{"name":"len","nodeType":"YulIdentifier","src":"7123:3:9"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"7098:18:9"},"nodeType":"YulFunctionCall","src":"7098:29:9"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"7090:4:9"}]},{"nodeType":"YulAssignment","src":"7136:29:9","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"7147:4:9"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7157:1:9","type":"","value":"2"},{"name":"len","nodeType":"YulIdentifier","src":"7160:3:9"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"7153:3:9"},"nodeType":"YulFunctionCall","src":"7153:11:9"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"7144:2:9"},"nodeType":"YulFunctionCall","src":"7144:21:9"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"7136:4:9"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"6938:4:9","type":""},{"name":"len","nodeType":"YulTypedName","src":"6944:3:9","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"6952:4:9","type":""}],"src":"6876:295:9"},{"body":{"nodeType":"YulBlock","src":"7268:1303:9","statements":[{"nodeType":"YulVariableDeclaration","src":"7279:51:9","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7326:3:9"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"7293:32:9"},"nodeType":"YulFunctionCall","src":"7293:37:9"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"7283:6:9","type":""}]},{"body":{"nodeType":"YulBlock","src":"7415:22:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"7417:16:9"},"nodeType":"YulFunctionCall","src":"7417:18:9"},"nodeType":"YulExpressionStatement","src":"7417:18:9"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"7387:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"7395:18:9","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7384:2:9"},"nodeType":"YulFunctionCall","src":"7384:30:9"},"nodeType":"YulIf","src":"7381:56:9"},{"nodeType":"YulVariableDeclaration","src":"7447:52:9","value":{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"7493:4:9"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"7487:5:9"},"nodeType":"YulFunctionCall","src":"7487:11:9"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"7461:25:9"},"nodeType":"YulFunctionCall","src":"7461:38:9"},"variables":[{"name":"oldLen","nodeType":"YulTypedName","src":"7451:6:9","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"7592:4:9"},{"name":"oldLen","nodeType":"YulIdentifier","src":"7598:6:9"},{"name":"newLen","nodeType":"YulIdentifier","src":"7606:6:9"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulIdentifier","src":"7546:45:9"},"nodeType":"YulFunctionCall","src":"7546:67:9"},"nodeType":"YulExpressionStatement","src":"7546:67:9"},{"nodeType":"YulVariableDeclaration","src":"7623:18:9","value":{"kind":"number","nodeType":"YulLiteral","src":"7640:1:9","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"7627:9:9","type":""}]},{"nodeType":"YulAssignment","src":"7651:17:9","value":{"kind":"number","nodeType":"YulLiteral","src":"7664:4:9","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"7651:9:9"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"7715:611:9","statements":[{"nodeType":"YulVariableDeclaration","src":"7729:37:9","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"7748:6:9"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7760:4:9","type":"","value":"0x1f"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"7756:3:9"},"nodeType":"YulFunctionCall","src":"7756:9:9"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7744:3:9"},"nodeType":"YulFunctionCall","src":"7744:22:9"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"7733:7:9","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7780:51:9","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"7826:4:9"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"7794:31:9"},"nodeType":"YulFunctionCall","src":"7794:37:9"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"7784:6:9","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7844:10:9","value":{"kind":"number","nodeType":"YulLiteral","src":"7853:1:9","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"7848:1:9","type":""}]},{"body":{"nodeType":"YulBlock","src":"7912:163:9","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"7937:6:9"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7955:3:9"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"7960:9:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7951:3:9"},"nodeType":"YulFunctionCall","src":"7951:19:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7945:5:9"},"nodeType":"YulFunctionCall","src":"7945:26:9"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"7930:6:9"},"nodeType":"YulFunctionCall","src":"7930:42:9"},"nodeType":"YulExpressionStatement","src":"7930:42:9"},{"nodeType":"YulAssignment","src":"7989:24:9","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"8003:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"8011:1:9","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7999:3:9"},"nodeType":"YulFunctionCall","src":"7999:14:9"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"7989:6:9"}]},{"nodeType":"YulAssignment","src":"8030:31:9","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"8047:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"8058:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8043:3:9"},"nodeType":"YulFunctionCall","src":"8043:18:9"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"8030:9:9"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"7878:1:9"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"7881:7:9"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7875:2:9"},"nodeType":"YulFunctionCall","src":"7875:14:9"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"7890:21:9","statements":[{"nodeType":"YulAssignment","src":"7892:17:9","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"7901:1:9"},{"kind":"number","nodeType":"YulLiteral","src":"7904:4:9","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7897:3:9"},"nodeType":"YulFunctionCall","src":"7897:12:9"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"7892:1:9"}]}]},"pre":{"nodeType":"YulBlock","src":"7871:3:9","statements":[]},"src":"7867:208:9"},{"body":{"nodeType":"YulBlock","src":"8111:156:9","statements":[{"nodeType":"YulVariableDeclaration","src":"8129:43:9","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8156:3:9"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"8161:9:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8152:3:9"},"nodeType":"YulFunctionCall","src":"8152:19:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8146:5:9"},"nodeType":"YulFunctionCall","src":"8146:26:9"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"8133:9:9","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"8196:6:9"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"8223:9:9"},{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"8238:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"8246:4:9","type":"","value":"0x1f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8234:3:9"},"nodeType":"YulFunctionCall","src":"8234:17:9"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"8204:18:9"},"nodeType":"YulFunctionCall","src":"8204:48:9"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"8189:6:9"},"nodeType":"YulFunctionCall","src":"8189:64:9"},"nodeType":"YulExpressionStatement","src":"8189:64:9"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"8094:7:9"},{"name":"newLen","nodeType":"YulIdentifier","src":"8103:6:9"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8091:2:9"},"nodeType":"YulFunctionCall","src":"8091:19:9"},"nodeType":"YulIf","src":"8088:179:9"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"8287:4:9"},{"arguments":[{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"8301:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"8309:1:9","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"8297:3:9"},"nodeType":"YulFunctionCall","src":"8297:14:9"},{"kind":"number","nodeType":"YulLiteral","src":"8313:1:9","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8293:3:9"},"nodeType":"YulFunctionCall","src":"8293:22:9"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"8280:6:9"},"nodeType":"YulFunctionCall","src":"8280:36:9"},"nodeType":"YulExpressionStatement","src":"8280:36:9"}]},"nodeType":"YulCase","src":"7708:618:9","value":{"kind":"number","nodeType":"YulLiteral","src":"7713:1:9","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"8343:222:9","statements":[{"nodeType":"YulVariableDeclaration","src":"8357:14:9","value":{"kind":"number","nodeType":"YulLiteral","src":"8370:1:9","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"8361:5:9","type":""}]},{"body":{"nodeType":"YulBlock","src":"8394:67:9","statements":[{"nodeType":"YulAssignment","src":"8412:35:9","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8431:3:9"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"8436:9:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8427:3:9"},"nodeType":"YulFunctionCall","src":"8427:19:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8421:5:9"},"nodeType":"YulFunctionCall","src":"8421:26:9"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"8412:5:9"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"8387:6:9"},"nodeType":"YulIf","src":"8384:77:9"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"8481:4:9"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8540:5:9"},{"name":"newLen","nodeType":"YulIdentifier","src":"8547:6:9"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"8487:52:9"},"nodeType":"YulFunctionCall","src":"8487:67:9"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"8474:6:9"},"nodeType":"YulFunctionCall","src":"8474:81:9"},"nodeType":"YulExpressionStatement","src":"8474:81:9"}]},"nodeType":"YulCase","src":"8335:230:9","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"7688:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"7696:2:9","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7685:2:9"},"nodeType":"YulFunctionCall","src":"7685:14:9"},"nodeType":"YulSwitch","src":"7678:887:9"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"7257:4:9","type":""},{"name":"src","nodeType":"YulTypedName","src":"7263:3:9","type":""}],"src":"7176:1395:9"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n","id":9,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b50604051620017ec380380620017ec8339818101604052810190620000379190620001f6565b8160039081620000489190620004c6565b5080600490816200005a9190620004c6565b505050620005ad565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620000cc8262000081565b810181811067ffffffffffffffff82111715620000ee57620000ed62000092565b5b80604052505050565b60006200010362000063565b9050620001118282620000c1565b919050565b600067ffffffffffffffff82111562000134576200013362000092565b5b6200013f8262000081565b9050602081019050919050565b60005b838110156200016c5780820151818401526020810190506200014f565b60008484015250505050565b60006200018f620001898462000116565b620000f7565b905082815260208101848484011115620001ae57620001ad6200007c565b5b620001bb8482856200014c565b509392505050565b600082601f830112620001db57620001da62000077565b5b8151620001ed84826020860162000178565b91505092915050565b6000806040838503121562000210576200020f6200006d565b5b600083015167ffffffffffffffff81111562000231576200023062000072565b5b6200023f85828601620001c3565b925050602083015167ffffffffffffffff81111562000263576200026262000072565b5b6200027185828601620001c3565b9150509250929050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620002ce57607f821691505b602082108103620002e457620002e362000286565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026200034e7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826200030f565b6200035a86836200030f565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620003a7620003a16200039b8462000372565b6200037c565b62000372565b9050919050565b6000819050919050565b620003c38362000386565b620003db620003d282620003ae565b8484546200031c565b825550505050565b600090565b620003f2620003e3565b620003ff818484620003b8565b505050565b5b8181101562000427576200041b600082620003e8565b60018101905062000405565b5050565b601f82111562000476576200044081620002ea565b6200044b84620002ff565b810160208510156200045b578190505b620004736200046a85620002ff565b83018262000404565b50505b505050565b600082821c905092915050565b60006200049b600019846008026200047b565b1980831691505092915050565b6000620004b6838362000488565b9150826002028217905092915050565b620004d1826200027b565b67ffffffffffffffff811115620004ed57620004ec62000092565b5b620004f98254620002b5565b620005068282856200042b565b600060209050601f8311600181146200053e576000841562000529578287015190505b620005358582620004a8565b865550620005a5565b601f1984166200054e86620002ea565b60005b82811015620005785784890151825560018201915060208501945060208101905062000551565b8683101562000598578489015162000594601f89168262000488565b8355505b6001600288020188555050505b505050505050565b61122f80620005bd6000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461016857806370a082311461019857806395d89b41146101c8578063a457c2d7146101e6578063a9059cbb14610216578063dd62ed3e14610246576100a9565b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100fc57806323b872dd1461011a578063313ce5671461014a575b600080fd5b6100b6610276565b6040516100c39190610b0c565b60405180910390f35b6100e660048036038101906100e19190610bc7565b610308565b6040516100f39190610c22565b60405180910390f35b61010461032b565b6040516101119190610c4c565b60405180910390f35b610134600480360381019061012f9190610c67565b610335565b6040516101419190610c22565b60405180910390f35b610152610364565b60405161015f9190610cd6565b60405180910390f35b610182600480360381019061017d9190610bc7565b61036d565b60405161018f9190610c22565b60405180910390f35b6101b260048036038101906101ad9190610cf1565b6103a4565b6040516101bf9190610c4c565b60405180910390f35b6101d06103ec565b6040516101dd9190610b0c565b60405180910390f35b61020060048036038101906101fb9190610bc7565b61047e565b60405161020d9190610c22565b60405180910390f35b610230600480360381019061022b9190610bc7565b6104f5565b60405161023d9190610c22565b60405180910390f35b610260600480360381019061025b9190610d1e565b610518565b60405161026d9190610c4c565b60405180910390f35b60606003805461028590610d8d565b80601f01602080910402602001604051908101604052809291908181526020018280546102b190610d8d565b80156102fe5780601f106102d3576101008083540402835291602001916102fe565b820191906000526020600020905b8154815290600101906020018083116102e157829003601f168201915b5050505050905090565b60008061031361059f565b90506103208185856105a7565b600191505092915050565b6000600254905090565b60008061034061059f565b905061034d858285610770565b6103588585856107fc565b60019150509392505050565b60006012905090565b60008061037861059f565b905061039981858561038a8589610518565b6103949190610ded565b6105a7565b600191505092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060600480546103fb90610d8d565b80601f016020809104026020016040519081016040528092919081815260200182805461042790610d8d565b80156104745780601f1061044957610100808354040283529160200191610474565b820191906000526020600020905b81548152906001019060200180831161045757829003601f168201915b5050505050905090565b60008061048961059f565b905060006104978286610518565b9050838110156104dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d390610e93565b60405180910390fd5b6104e982868684036105a7565b60019250505092915050565b60008061050061059f565b905061050d8185856107fc565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610616576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060d90610f25565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610685576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067c90610fb7565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516107639190610c4c565b60405180910390a3505050565b600061077c8484610518565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146107f657818110156107e8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107df90611023565b60405180910390fd5b6107f584848484036105a7565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361086b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610862906110b5565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036108da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108d190611147565b60405180910390fd5b6108e5838383610a72565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101561096b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610962906111d9565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610a599190610c4c565b60405180910390a3610a6c848484610a77565b50505050565b505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610ab6578082015181840152602081019050610a9b565b60008484015250505050565b6000601f19601f8301169050919050565b6000610ade82610a7c565b610ae88185610a87565b9350610af8818560208601610a98565b610b0181610ac2565b840191505092915050565b60006020820190508181036000830152610b268184610ad3565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b5e82610b33565b9050919050565b610b6e81610b53565b8114610b7957600080fd5b50565b600081359050610b8b81610b65565b92915050565b6000819050919050565b610ba481610b91565b8114610baf57600080fd5b50565b600081359050610bc181610b9b565b92915050565b60008060408385031215610bde57610bdd610b2e565b5b6000610bec85828601610b7c565b9250506020610bfd85828601610bb2565b9150509250929050565b60008115159050919050565b610c1c81610c07565b82525050565b6000602082019050610c376000830184610c13565b92915050565b610c4681610b91565b82525050565b6000602082019050610c616000830184610c3d565b92915050565b600080600060608486031215610c8057610c7f610b2e565b5b6000610c8e86828701610b7c565b9350506020610c9f86828701610b7c565b9250506040610cb086828701610bb2565b9150509250925092565b600060ff82169050919050565b610cd081610cba565b82525050565b6000602082019050610ceb6000830184610cc7565b92915050565b600060208284031215610d0757610d06610b2e565b5b6000610d1584828501610b7c565b91505092915050565b60008060408385031215610d3557610d34610b2e565b5b6000610d4385828601610b7c565b9250506020610d5485828601610b7c565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610da557607f821691505b602082108103610db857610db7610d5e565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610df882610b91565b9150610e0383610b91565b9250828201905080821115610e1b57610e1a610dbe565b5b92915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b6000610e7d602583610a87565b9150610e8882610e21565b604082019050919050565b60006020820190508181036000830152610eac81610e70565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000610f0f602483610a87565b9150610f1a82610eb3565b604082019050919050565b60006020820190508181036000830152610f3e81610f02565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b6000610fa1602283610a87565b9150610fac82610f45565b604082019050919050565b60006020820190508181036000830152610fd081610f94565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b600061100d601d83610a87565b915061101882610fd7565b602082019050919050565b6000602082019050818103600083015261103c81611000565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b600061109f602583610a87565b91506110aa82611043565b604082019050919050565b600060208201905081810360008301526110ce81611092565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b6000611131602383610a87565b915061113c826110d5565b604082019050919050565b6000602082019050818103600083015261116081611124565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b60006111c3602683610a87565b91506111ce82611167565b604082019050919050565b600060208201905081810360008301526111f2816111b6565b905091905056fea264697066735822122022aa650b1b36ae0633af54ab6ba0e50b6942067358fed8c24ead03892a063d3164736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x17EC CODESIZE SUB DUP1 PUSH3 0x17EC DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x1F6 JUMP JUMPDEST DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH3 0x48 SWAP2 SWAP1 PUSH3 0x4C6 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH3 0x5A SWAP2 SWAP1 PUSH3 0x4C6 JUMP JUMPDEST POP POP POP PUSH3 0x5AD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH3 0xCC DUP3 PUSH3 0x81 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0xEE JUMPI PUSH3 0xED PUSH3 0x92 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x103 PUSH3 0x63 JUMP JUMPDEST SWAP1 POP PUSH3 0x111 DUP3 DUP3 PUSH3 0xC1 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x134 JUMPI PUSH3 0x133 PUSH3 0x92 JUMP JUMPDEST JUMPDEST PUSH3 0x13F DUP3 PUSH3 0x81 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x16C JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x14F JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x18F PUSH3 0x189 DUP5 PUSH3 0x116 JUMP JUMPDEST PUSH3 0xF7 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x1AE JUMPI PUSH3 0x1AD PUSH3 0x7C JUMP JUMPDEST JUMPDEST PUSH3 0x1BB DUP5 DUP3 DUP6 PUSH3 0x14C JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x1DB JUMPI PUSH3 0x1DA PUSH3 0x77 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x1ED DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x178 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x210 JUMPI PUSH3 0x20F PUSH3 0x6D JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x231 JUMPI PUSH3 0x230 PUSH3 0x72 JUMP JUMPDEST JUMPDEST PUSH3 0x23F DUP6 DUP3 DUP7 ADD PUSH3 0x1C3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x263 JUMPI PUSH3 0x262 PUSH3 0x72 JUMP JUMPDEST JUMPDEST PUSH3 0x271 DUP6 DUP3 DUP7 ADD PUSH3 0x1C3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x2CE JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x2E4 JUMPI PUSH3 0x2E3 PUSH3 0x286 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x34E PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x30F JUMP JUMPDEST PUSH3 0x35A DUP7 DUP4 PUSH3 0x30F JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x3A7 PUSH3 0x3A1 PUSH3 0x39B DUP5 PUSH3 0x372 JUMP JUMPDEST PUSH3 0x37C JUMP JUMPDEST PUSH3 0x372 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x3C3 DUP4 PUSH3 0x386 JUMP JUMPDEST PUSH3 0x3DB PUSH3 0x3D2 DUP3 PUSH3 0x3AE JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x31C JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x3F2 PUSH3 0x3E3 JUMP JUMPDEST PUSH3 0x3FF DUP2 DUP5 DUP5 PUSH3 0x3B8 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x427 JUMPI PUSH3 0x41B PUSH1 0x0 DUP3 PUSH3 0x3E8 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x405 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x476 JUMPI PUSH3 0x440 DUP2 PUSH3 0x2EA JUMP JUMPDEST PUSH3 0x44B DUP5 PUSH3 0x2FF JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x45B JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x473 PUSH3 0x46A DUP6 PUSH3 0x2FF JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x404 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x49B PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x47B JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x4B6 DUP4 DUP4 PUSH3 0x488 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x4D1 DUP3 PUSH3 0x27B JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x4ED JUMPI PUSH3 0x4EC PUSH3 0x92 JUMP JUMPDEST JUMPDEST PUSH3 0x4F9 DUP3 SLOAD PUSH3 0x2B5 JUMP JUMPDEST PUSH3 0x506 DUP3 DUP3 DUP6 PUSH3 0x42B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x53E JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x529 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x535 DUP6 DUP3 PUSH3 0x4A8 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x5A5 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x54E DUP7 PUSH3 0x2EA JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x578 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x551 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x598 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x594 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x488 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x122F DUP1 PUSH3 0x5BD PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x246 JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x14A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x276 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0xB0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE1 SWAP2 SWAP1 PUSH2 0xBC7 JUMP JUMPDEST PUSH2 0x308 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0x32B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x111 SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x134 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12F SWAP2 SWAP1 PUSH2 0xC67 JUMP JUMPDEST PUSH2 0x335 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x141 SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x152 PUSH2 0x364 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15F SWAP2 SWAP1 PUSH2 0xCD6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x182 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17D SWAP2 SWAP1 PUSH2 0xBC7 JUMP JUMPDEST PUSH2 0x36D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18F SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AD SWAP2 SWAP1 PUSH2 0xCF1 JUMP JUMPDEST PUSH2 0x3A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D0 PUSH2 0x3EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DD SWAP2 SWAP1 PUSH2 0xB0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x200 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FB SWAP2 SWAP1 PUSH2 0xBC7 JUMP JUMPDEST PUSH2 0x47E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20D SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x230 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22B SWAP2 SWAP1 PUSH2 0xBC7 JUMP JUMPDEST PUSH2 0x4F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23D SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x260 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25B SWAP2 SWAP1 PUSH2 0xD1E JUMP JUMPDEST PUSH2 0x518 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26D SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x285 SWAP1 PUSH2 0xD8D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B1 SWAP1 PUSH2 0xD8D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2FE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2FE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x313 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x320 DUP2 DUP6 DUP6 PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x340 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x34D DUP6 DUP3 DUP6 PUSH2 0x770 JUMP JUMPDEST PUSH2 0x358 DUP6 DUP6 DUP6 PUSH2 0x7FC JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x378 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x399 DUP2 DUP6 DUP6 PUSH2 0x38A DUP6 DUP10 PUSH2 0x518 JUMP JUMPDEST PUSH2 0x394 SWAP2 SWAP1 PUSH2 0xDED JUMP JUMPDEST PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x3FB SWAP1 PUSH2 0xD8D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x427 SWAP1 PUSH2 0xD8D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x474 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x449 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x474 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x457 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x489 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x497 DUP3 DUP7 PUSH2 0x518 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x4DC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D3 SWAP1 PUSH2 0xE93 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4E9 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x500 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x50D DUP2 DUP6 DUP6 PUSH2 0x7FC JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x616 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60D SWAP1 PUSH2 0xF25 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x685 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x67C SWAP1 PUSH2 0xFB7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x763 SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x77C DUP5 DUP5 PUSH2 0x518 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x7F6 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x7E8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7DF SWAP1 PUSH2 0x1023 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7F5 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x5A7 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x86B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x862 SWAP1 PUSH2 0x10B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8DA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8D1 SWAP1 PUSH2 0x1147 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8E5 DUP4 DUP4 DUP4 PUSH2 0xA72 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x96B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x962 SWAP1 PUSH2 0x11D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xA59 SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xA6C DUP5 DUP5 DUP5 PUSH2 0xA77 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xAB6 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xA9B JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xADE DUP3 PUSH2 0xA7C JUMP JUMPDEST PUSH2 0xAE8 DUP2 DUP6 PUSH2 0xA87 JUMP JUMPDEST SWAP4 POP PUSH2 0xAF8 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xA98 JUMP JUMPDEST PUSH2 0xB01 DUP2 PUSH2 0xAC2 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB26 DUP2 DUP5 PUSH2 0xAD3 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB5E DUP3 PUSH2 0xB33 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB6E DUP2 PUSH2 0xB53 JUMP JUMPDEST DUP2 EQ PUSH2 0xB79 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB8B DUP2 PUSH2 0xB65 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBA4 DUP2 PUSH2 0xB91 JUMP JUMPDEST DUP2 EQ PUSH2 0xBAF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBC1 DUP2 PUSH2 0xB9B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBDE JUMPI PUSH2 0xBDD PUSH2 0xB2E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xBEC DUP6 DUP3 DUP7 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xBFD DUP6 DUP3 DUP7 ADD PUSH2 0xBB2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC1C DUP2 PUSH2 0xC07 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC37 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC13 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC46 DUP2 PUSH2 0xB91 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC61 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC3D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xC80 JUMPI PUSH2 0xC7F PUSH2 0xB2E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC8E DUP7 DUP3 DUP8 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xC9F DUP7 DUP3 DUP8 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xCB0 DUP7 DUP3 DUP8 ADD PUSH2 0xBB2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCD0 DUP2 PUSH2 0xCBA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCEB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCC7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD07 JUMPI PUSH2 0xD06 PUSH2 0xB2E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD15 DUP5 DUP3 DUP6 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD35 JUMPI PUSH2 0xD34 PUSH2 0xB2E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD43 DUP6 DUP3 DUP7 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xD54 DUP6 DUP3 DUP7 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xDA5 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xDB8 JUMPI PUSH2 0xDB7 PUSH2 0xD5E JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xDF8 DUP3 PUSH2 0xB91 JUMP JUMPDEST SWAP2 POP PUSH2 0xE03 DUP4 PUSH2 0xB91 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xE1B JUMPI PUSH2 0xE1A PUSH2 0xDBE JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE7D PUSH1 0x25 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0xE88 DUP3 PUSH2 0xE21 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xEAC DUP2 PUSH2 0xE70 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF0F PUSH1 0x24 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0xF1A DUP3 PUSH2 0xEB3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF3E DUP2 PUSH2 0xF02 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFA1 PUSH1 0x22 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0xFAC DUP3 PUSH2 0xF45 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xFD0 DUP2 PUSH2 0xF94 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x100D PUSH1 0x1D DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0x1018 DUP3 PUSH2 0xFD7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x103C DUP2 PUSH2 0x1000 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x109F PUSH1 0x25 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0x10AA DUP3 PUSH2 0x1043 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x10CE DUP2 PUSH2 0x1092 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1131 PUSH1 0x23 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0x113C DUP3 PUSH2 0x10D5 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1160 DUP2 PUSH2 0x1124 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11C3 PUSH1 0x26 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0x11CE DUP3 PUSH2 0x1167 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x11F2 DUP2 PUSH2 0x11B6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x22 0xAA PUSH6 0xB1B36AE0633 0xAF SLOAD 0xAB PUSH12 0xA0E50B6942067358FED8C24E 0xAD SUB DUP10 0x2A MOD RETURNDATASIZE BALANCE PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"1401:11610:2:-:0;;;1976:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2050:5;2042;:13;;;;;;:::i;:::-;;2075:7;2065;:17;;;;;;:::i;:::-;;1976:113;;1401:11610;;7:75:9;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:246::-;1691:1;1701:113;1715:6;1712:1;1709:13;1701:113;;;1800:1;1795:3;1791:11;1785:18;1781:1;1776:3;1772:11;1765:39;1737:2;1734:1;1730:10;1725:15;;1701:113;;;1848:1;1839:6;1834:3;1830:16;1823:27;1672:184;1610:246;;;:::o;1862:434::-;1951:5;1976:66;1992:49;2034:6;1992:49;:::i;:::-;1976:66;:::i;:::-;1967:75;;2065:6;2058:5;2051:21;2103:4;2096:5;2092:16;2141:3;2132:6;2127:3;2123:16;2120:25;2117:112;;;2148:79;;:::i;:::-;2117:112;2238:52;2283:6;2278:3;2273;2238:52;:::i;:::-;1957:339;1862:434;;;;;:::o;2316:355::-;2383:5;2432:3;2425:4;2417:6;2413:17;2409:27;2399:122;;2440:79;;:::i;:::-;2399:122;2550:6;2544:13;2575:90;2661:3;2653:6;2646:4;2638:6;2634:17;2575:90;:::i;:::-;2566:99;;2389:282;2316:355;;;;:::o;2677:853::-;2776:6;2784;2833:2;2821:9;2812:7;2808:23;2804:32;2801:119;;;2839:79;;:::i;:::-;2801:119;2980:1;2969:9;2965:17;2959:24;3010:18;3002:6;2999:30;2996:117;;;3032:79;;:::i;:::-;2996:117;3137:74;3203:7;3194:6;3183:9;3179:22;3137:74;:::i;:::-;3127:84;;2930:291;3281:2;3270:9;3266:18;3260:25;3312:18;3304:6;3301:30;3298:117;;;3334:79;;:::i;:::-;3298:117;3439:74;3505:7;3496:6;3485:9;3481:22;3439:74;:::i;:::-;3429:84;;3231:292;2677:853;;;;;:::o;3536:99::-;3588:6;3622:5;3616:12;3606:22;;3536:99;;;:::o;3641:180::-;3689:77;3686:1;3679:88;3786:4;3783:1;3776:15;3810:4;3807:1;3800:15;3827:320;3871:6;3908:1;3902:4;3898:12;3888:22;;3955:1;3949:4;3945:12;3976:18;3966:81;;4032:4;4024:6;4020:17;4010:27;;3966:81;4094:2;4086:6;4083:14;4063:18;4060:38;4057:84;;4113:18;;:::i;:::-;4057:84;3878:269;3827:320;;;:::o;4153:141::-;4202:4;4225:3;4217:11;;4248:3;4245:1;4238:14;4282:4;4279:1;4269:18;4261:26;;4153:141;;;:::o;4300:93::-;4337:6;4384:2;4379;4372:5;4368:14;4364:23;4354:33;;4300:93;;;:::o;4399:107::-;4443:8;4493:5;4487:4;4483:16;4462:37;;4399:107;;;;:::o;4512:393::-;4581:6;4631:1;4619:10;4615:18;4654:97;4684:66;4673:9;4654:97;:::i;:::-;4772:39;4802:8;4791:9;4772:39;:::i;:::-;4760:51;;4844:4;4840:9;4833:5;4829:21;4820:30;;4893:4;4883:8;4879:19;4872:5;4869:30;4859:40;;4588:317;;4512:393;;;;;:::o;4911:77::-;4948:7;4977:5;4966:16;;4911:77;;;:::o;4994:60::-;5022:3;5043:5;5036:12;;4994:60;;;:::o;5060:142::-;5110:9;5143:53;5161:34;5170:24;5188:5;5170:24;:::i;:::-;5161:34;:::i;:::-;5143:53;:::i;:::-;5130:66;;5060:142;;;:::o;5208:75::-;5251:3;5272:5;5265:12;;5208:75;;;:::o;5289:269::-;5399:39;5430:7;5399:39;:::i;:::-;5460:91;5509:41;5533:16;5509:41;:::i;:::-;5501:6;5494:4;5488:11;5460:91;:::i;:::-;5454:4;5447:105;5365:193;5289:269;;;:::o;5564:73::-;5609:3;5564:73;:::o;5643:189::-;5720:32;;:::i;:::-;5761:65;5819:6;5811;5805:4;5761:65;:::i;:::-;5696:136;5643:189;;:::o;5838:186::-;5898:120;5915:3;5908:5;5905:14;5898:120;;;5969:39;6006:1;5999:5;5969:39;:::i;:::-;5942:1;5935:5;5931:13;5922:22;;5898:120;;;5838:186;;:::o;6030:543::-;6131:2;6126:3;6123:11;6120:446;;;6165:38;6197:5;6165:38;:::i;:::-;6249:29;6267:10;6249:29;:::i;:::-;6239:8;6235:44;6432:2;6420:10;6417:18;6414:49;;;6453:8;6438:23;;6414:49;6476:80;6532:22;6550:3;6532:22;:::i;:::-;6522:8;6518:37;6505:11;6476:80;:::i;:::-;6135:431;;6120:446;6030:543;;;:::o;6579:117::-;6633:8;6683:5;6677:4;6673:16;6652:37;;6579:117;;;;:::o;6702:169::-;6746:6;6779:51;6827:1;6823:6;6815:5;6812:1;6808:13;6779:51;:::i;:::-;6775:56;6860:4;6854;6850:15;6840:25;;6753:118;6702:169;;;;:::o;6876:295::-;6952:4;7098:29;7123:3;7117:4;7098:29;:::i;:::-;7090:37;;7160:3;7157:1;7153:11;7147:4;7144:21;7136:29;;6876:295;;;;:::o;7176:1395::-;7293:37;7326:3;7293:37;:::i;:::-;7395:18;7387:6;7384:30;7381:56;;;7417:18;;:::i;:::-;7381:56;7461:38;7493:4;7487:11;7461:38;:::i;:::-;7546:67;7606:6;7598;7592:4;7546:67;:::i;:::-;7640:1;7664:4;7651:17;;7696:2;7688:6;7685:14;7713:1;7708:618;;;;8370:1;8387:6;8384:77;;;8436:9;8431:3;8427:19;8421:26;8412:35;;8384:77;8487:67;8547:6;8540:5;8487:67;:::i;:::-;8481:4;8474:81;8343:222;7678:887;;7708:618;7760:4;7756:9;7748:6;7744:22;7794:37;7826:4;7794:37;:::i;:::-;7853:1;7867:208;7881:7;7878:1;7875:14;7867:208;;;7960:9;7955:3;7951:19;7945:26;7937:6;7930:42;8011:1;8003:6;7999:14;7989:24;;8058:2;8047:9;8043:18;8030:31;;7904:4;7901:1;7897:12;7892:17;;7867:208;;;8103:6;8094:7;8091:19;8088:179;;;8161:9;8156:3;8152:19;8146:26;8204:48;8246:4;8238:6;8234:17;8223:9;8204:48;:::i;:::-;8196:6;8189:64;8111:156;8088:179;8313:1;8309;8301:6;8297:14;8293:22;8287:4;8280:36;7715:611;;;7678:887;;7268:1303;;;7176:1395;;:::o;1401:11610:2:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_afterTokenTransfer_806":{"entryPoint":2679,"id":806,"parameterSlots":3,"returnSlots":0},"@_approve_741":{"entryPoint":1447,"id":741,"parameterSlots":3,"returnSlots":0},"@_beforeTokenTransfer_795":{"entryPoint":2674,"id":795,"parameterSlots":3,"returnSlots":0},"@_msgSender_966":{"entryPoint":1439,"id":966,"parameterSlots":0,"returnSlots":1},"@_spendAllowance_784":{"entryPoint":1904,"id":784,"parameterSlots":3,"returnSlots":0},"@_transfer_567":{"entryPoint":2044,"id":567,"parameterSlots":3,"returnSlots":0},"@allowance_362":{"entryPoint":1304,"id":362,"parameterSlots":2,"returnSlots":1},"@approve_387":{"entryPoint":776,"id":387,"parameterSlots":2,"returnSlots":1},"@balanceOf_319":{"entryPoint":932,"id":319,"parameterSlots":1,"returnSlots":1},"@decimals_295":{"entryPoint":868,"id":295,"parameterSlots":0,"returnSlots":1},"@decreaseAllowance_490":{"entryPoint":1150,"id":490,"parameterSlots":2,"returnSlots":1},"@increaseAllowance_449":{"entryPoint":877,"id":449,"parameterSlots":2,"returnSlots":1},"@name_275":{"entryPoint":630,"id":275,"parameterSlots":0,"returnSlots":1},"@symbol_285":{"entryPoint":1004,"id":285,"parameterSlots":0,"returnSlots":1},"@totalSupply_305":{"entryPoint":811,"id":305,"parameterSlots":0,"returnSlots":1},"@transferFrom_420":{"entryPoint":821,"id":420,"parameterSlots":3,"returnSlots":1},"@transfer_344":{"entryPoint":1269,"id":344,"parameterSlots":2,"returnSlots":1},"abi_decode_t_address":{"entryPoint":2940,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":2994,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":3313,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":3358,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":3175,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":3015,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":3091,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":2771,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack":{"entryPoint":4388,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack":{"entryPoint":3988,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack":{"entryPoint":4096,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack":{"entryPoint":4534,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack":{"entryPoint":4242,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack":{"entryPoint":3842,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack":{"entryPoint":3696,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":3133,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint8_to_t_uint8_fromStack":{"entryPoint":3271,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":3106,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":2828,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4423,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4023,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4131,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4569,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4277,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3877,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3731,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":3148,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":3286,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":2684,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":2695,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":3565,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":2899,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":3079,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":2867,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":2961,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":3258,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":2712,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":3469,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":3518,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":3422,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":2862,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":2754,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f":{"entryPoint":4309,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029":{"entryPoint":3909,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe":{"entryPoint":4055,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6":{"entryPoint":4455,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea":{"entryPoint":4163,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208":{"entryPoint":3763,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8":{"entryPoint":3617,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":2917,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":2971,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:13699:9","statements":[{"body":{"nodeType":"YulBlock","src":"66:40:9","statements":[{"nodeType":"YulAssignment","src":"77:22:9","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"93:5:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"87:5:9"},"nodeType":"YulFunctionCall","src":"87:12:9"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"77:6:9"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"49:5:9","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"59:6:9","type":""}],"src":"7:99:9"},{"body":{"nodeType":"YulBlock","src":"208:73:9","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"225:3:9"},{"name":"length","nodeType":"YulIdentifier","src":"230:6:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"218:6:9"},"nodeType":"YulFunctionCall","src":"218:19:9"},"nodeType":"YulExpressionStatement","src":"218:19:9"},{"nodeType":"YulAssignment","src":"246:29:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"265:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"270:4:9","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"261:3:9"},"nodeType":"YulFunctionCall","src":"261:14:9"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"246:11:9"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"180:3:9","type":""},{"name":"length","nodeType":"YulTypedName","src":"185:6:9","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"196:11:9","type":""}],"src":"112:169:9"},{"body":{"nodeType":"YulBlock","src":"349:184:9","statements":[{"nodeType":"YulVariableDeclaration","src":"359:10:9","value":{"kind":"number","nodeType":"YulLiteral","src":"368:1:9","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"363:1:9","type":""}]},{"body":{"nodeType":"YulBlock","src":"428:63:9","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"453:3:9"},{"name":"i","nodeType":"YulIdentifier","src":"458:1:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"449:3:9"},"nodeType":"YulFunctionCall","src":"449:11:9"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"472:3:9"},{"name":"i","nodeType":"YulIdentifier","src":"477:1:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"468:3:9"},"nodeType":"YulFunctionCall","src":"468:11:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"462:5:9"},"nodeType":"YulFunctionCall","src":"462:18:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"442:6:9"},"nodeType":"YulFunctionCall","src":"442:39:9"},"nodeType":"YulExpressionStatement","src":"442:39:9"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"389:1:9"},{"name":"length","nodeType":"YulIdentifier","src":"392:6:9"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"386:2:9"},"nodeType":"YulFunctionCall","src":"386:13:9"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"400:19:9","statements":[{"nodeType":"YulAssignment","src":"402:15:9","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"411:1:9"},{"kind":"number","nodeType":"YulLiteral","src":"414:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"407:3:9"},"nodeType":"YulFunctionCall","src":"407:10:9"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"402:1:9"}]}]},"pre":{"nodeType":"YulBlock","src":"382:3:9","statements":[]},"src":"378:113:9"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"511:3:9"},{"name":"length","nodeType":"YulIdentifier","src":"516:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"507:3:9"},"nodeType":"YulFunctionCall","src":"507:16:9"},{"kind":"number","nodeType":"YulLiteral","src":"525:1:9","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"500:6:9"},"nodeType":"YulFunctionCall","src":"500:27:9"},"nodeType":"YulExpressionStatement","src":"500:27:9"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"331:3:9","type":""},{"name":"dst","nodeType":"YulTypedName","src":"336:3:9","type":""},{"name":"length","nodeType":"YulTypedName","src":"341:6:9","type":""}],"src":"287:246:9"},{"body":{"nodeType":"YulBlock","src":"587:54:9","statements":[{"nodeType":"YulAssignment","src":"597:38:9","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"615:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"622:2:9","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"611:3:9"},"nodeType":"YulFunctionCall","src":"611:14:9"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"631:2:9","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"627:3:9"},"nodeType":"YulFunctionCall","src":"627:7:9"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"607:3:9"},"nodeType":"YulFunctionCall","src":"607:28:9"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"597:6:9"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"570:5:9","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"580:6:9","type":""}],"src":"539:102:9"},{"body":{"nodeType":"YulBlock","src":"739:285:9","statements":[{"nodeType":"YulVariableDeclaration","src":"749:53:9","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"796:5:9"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"763:32:9"},"nodeType":"YulFunctionCall","src":"763:39:9"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"753:6:9","type":""}]},{"nodeType":"YulAssignment","src":"811:78:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"877:3:9"},{"name":"length","nodeType":"YulIdentifier","src":"882:6:9"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"818:58:9"},"nodeType":"YulFunctionCall","src":"818:71:9"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"811:3:9"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"937:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"944:4:9","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"933:3:9"},"nodeType":"YulFunctionCall","src":"933:16:9"},{"name":"pos","nodeType":"YulIdentifier","src":"951:3:9"},{"name":"length","nodeType":"YulIdentifier","src":"956:6:9"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"898:34:9"},"nodeType":"YulFunctionCall","src":"898:65:9"},"nodeType":"YulExpressionStatement","src":"898:65:9"},{"nodeType":"YulAssignment","src":"972:46:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"983:3:9"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1010:6:9"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"988:21:9"},"nodeType":"YulFunctionCall","src":"988:29:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"979:3:9"},"nodeType":"YulFunctionCall","src":"979:39:9"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"972:3:9"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"720:5:9","type":""},{"name":"pos","nodeType":"YulTypedName","src":"727:3:9","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"735:3:9","type":""}],"src":"647:377:9"},{"body":{"nodeType":"YulBlock","src":"1148:195:9","statements":[{"nodeType":"YulAssignment","src":"1158:26:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1170:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"1181:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1166:3:9"},"nodeType":"YulFunctionCall","src":"1166:18:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1158:4:9"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1205:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"1216:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1201:3:9"},"nodeType":"YulFunctionCall","src":"1201:17:9"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"1224:4:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"1230:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1220:3:9"},"nodeType":"YulFunctionCall","src":"1220:20:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1194:6:9"},"nodeType":"YulFunctionCall","src":"1194:47:9"},"nodeType":"YulExpressionStatement","src":"1194:47:9"},{"nodeType":"YulAssignment","src":"1250:86:9","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1322:6:9"},{"name":"tail","nodeType":"YulIdentifier","src":"1331:4:9"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"1258:63:9"},"nodeType":"YulFunctionCall","src":"1258:78:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1250:4:9"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1120:9:9","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1132:6:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1143:4:9","type":""}],"src":"1030:313:9"},{"body":{"nodeType":"YulBlock","src":"1389:35:9","statements":[{"nodeType":"YulAssignment","src":"1399:19:9","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1415:2:9","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1409:5:9"},"nodeType":"YulFunctionCall","src":"1409:9:9"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1399:6:9"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1382:6:9","type":""}],"src":"1349:75:9"},{"body":{"nodeType":"YulBlock","src":"1519:28:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1536:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1539:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1529:6:9"},"nodeType":"YulFunctionCall","src":"1529:12:9"},"nodeType":"YulExpressionStatement","src":"1529:12:9"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"1430:117:9"},{"body":{"nodeType":"YulBlock","src":"1642:28:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1659:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1662:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1652:6:9"},"nodeType":"YulFunctionCall","src":"1652:12:9"},"nodeType":"YulExpressionStatement","src":"1652:12:9"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"1553:117:9"},{"body":{"nodeType":"YulBlock","src":"1721:81:9","statements":[{"nodeType":"YulAssignment","src":"1731:65:9","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1746:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"1753:42:9","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1742:3:9"},"nodeType":"YulFunctionCall","src":"1742:54:9"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1731:7:9"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1703:5:9","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1713:7:9","type":""}],"src":"1676:126:9"},{"body":{"nodeType":"YulBlock","src":"1853:51:9","statements":[{"nodeType":"YulAssignment","src":"1863:35:9","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1892:5:9"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"1874:17:9"},"nodeType":"YulFunctionCall","src":"1874:24:9"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1863:7:9"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1835:5:9","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1845:7:9","type":""}],"src":"1808:96:9"},{"body":{"nodeType":"YulBlock","src":"1953:79:9","statements":[{"body":{"nodeType":"YulBlock","src":"2010:16:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2019:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2022:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2012:6:9"},"nodeType":"YulFunctionCall","src":"2012:12:9"},"nodeType":"YulExpressionStatement","src":"2012:12:9"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1976:5:9"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2001:5:9"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"1983:17:9"},"nodeType":"YulFunctionCall","src":"1983:24:9"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1973:2:9"},"nodeType":"YulFunctionCall","src":"1973:35:9"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1966:6:9"},"nodeType":"YulFunctionCall","src":"1966:43:9"},"nodeType":"YulIf","src":"1963:63:9"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1946:5:9","type":""}],"src":"1910:122:9"},{"body":{"nodeType":"YulBlock","src":"2090:87:9","statements":[{"nodeType":"YulAssignment","src":"2100:29:9","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2122:6:9"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2109:12:9"},"nodeType":"YulFunctionCall","src":"2109:20:9"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2100:5:9"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2165:5:9"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"2138:26:9"},"nodeType":"YulFunctionCall","src":"2138:33:9"},"nodeType":"YulExpressionStatement","src":"2138:33:9"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2068:6:9","type":""},{"name":"end","nodeType":"YulTypedName","src":"2076:3:9","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2084:5:9","type":""}],"src":"2038:139:9"},{"body":{"nodeType":"YulBlock","src":"2228:32:9","statements":[{"nodeType":"YulAssignment","src":"2238:16:9","value":{"name":"value","nodeType":"YulIdentifier","src":"2249:5:9"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2238:7:9"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2210:5:9","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2220:7:9","type":""}],"src":"2183:77:9"},{"body":{"nodeType":"YulBlock","src":"2309:79:9","statements":[{"body":{"nodeType":"YulBlock","src":"2366:16:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2375:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2378:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2368:6:9"},"nodeType":"YulFunctionCall","src":"2368:12:9"},"nodeType":"YulExpressionStatement","src":"2368:12:9"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2332:5:9"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2357:5:9"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"2339:17:9"},"nodeType":"YulFunctionCall","src":"2339:24:9"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2329:2:9"},"nodeType":"YulFunctionCall","src":"2329:35:9"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2322:6:9"},"nodeType":"YulFunctionCall","src":"2322:43:9"},"nodeType":"YulIf","src":"2319:63:9"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2302:5:9","type":""}],"src":"2266:122:9"},{"body":{"nodeType":"YulBlock","src":"2446:87:9","statements":[{"nodeType":"YulAssignment","src":"2456:29:9","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2478:6:9"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2465:12:9"},"nodeType":"YulFunctionCall","src":"2465:20:9"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2456:5:9"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2521:5:9"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"2494:26:9"},"nodeType":"YulFunctionCall","src":"2494:33:9"},"nodeType":"YulExpressionStatement","src":"2494:33:9"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2424:6:9","type":""},{"name":"end","nodeType":"YulTypedName","src":"2432:3:9","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2440:5:9","type":""}],"src":"2394:139:9"},{"body":{"nodeType":"YulBlock","src":"2622:391:9","statements":[{"body":{"nodeType":"YulBlock","src":"2668:83:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2670:77:9"},"nodeType":"YulFunctionCall","src":"2670:79:9"},"nodeType":"YulExpressionStatement","src":"2670:79:9"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2643:7:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"2652:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2639:3:9"},"nodeType":"YulFunctionCall","src":"2639:23:9"},{"kind":"number","nodeType":"YulLiteral","src":"2664:2:9","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2635:3:9"},"nodeType":"YulFunctionCall","src":"2635:32:9"},"nodeType":"YulIf","src":"2632:119:9"},{"nodeType":"YulBlock","src":"2761:117:9","statements":[{"nodeType":"YulVariableDeclaration","src":"2776:15:9","value":{"kind":"number","nodeType":"YulLiteral","src":"2790:1:9","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2780:6:9","type":""}]},{"nodeType":"YulAssignment","src":"2805:63:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2840:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"2851:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2836:3:9"},"nodeType":"YulFunctionCall","src":"2836:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2860:7:9"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2815:20:9"},"nodeType":"YulFunctionCall","src":"2815:53:9"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2805:6:9"}]}]},{"nodeType":"YulBlock","src":"2888:118:9","statements":[{"nodeType":"YulVariableDeclaration","src":"2903:16:9","value":{"kind":"number","nodeType":"YulLiteral","src":"2917:2:9","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2907:6:9","type":""}]},{"nodeType":"YulAssignment","src":"2933:63:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2968:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"2979:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2964:3:9"},"nodeType":"YulFunctionCall","src":"2964:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2988:7:9"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"2943:20:9"},"nodeType":"YulFunctionCall","src":"2943:53:9"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2933:6:9"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2584:9:9","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2595:7:9","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2607:6:9","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2615:6:9","type":""}],"src":"2539:474:9"},{"body":{"nodeType":"YulBlock","src":"3061:48:9","statements":[{"nodeType":"YulAssignment","src":"3071:32:9","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3096:5:9"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3089:6:9"},"nodeType":"YulFunctionCall","src":"3089:13:9"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3082:6:9"},"nodeType":"YulFunctionCall","src":"3082:21:9"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3071:7:9"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3043:5:9","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3053:7:9","type":""}],"src":"3019:90:9"},{"body":{"nodeType":"YulBlock","src":"3174:50:9","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3191:3:9"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3211:5:9"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"3196:14:9"},"nodeType":"YulFunctionCall","src":"3196:21:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3184:6:9"},"nodeType":"YulFunctionCall","src":"3184:34:9"},"nodeType":"YulExpressionStatement","src":"3184:34:9"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3162:5:9","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3169:3:9","type":""}],"src":"3115:109:9"},{"body":{"nodeType":"YulBlock","src":"3322:118:9","statements":[{"nodeType":"YulAssignment","src":"3332:26:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3344:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"3355:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3340:3:9"},"nodeType":"YulFunctionCall","src":"3340:18:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3332:4:9"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3406:6:9"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3419:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"3430:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3415:3:9"},"nodeType":"YulFunctionCall","src":"3415:17:9"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"3368:37:9"},"nodeType":"YulFunctionCall","src":"3368:65:9"},"nodeType":"YulExpressionStatement","src":"3368:65:9"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3294:9:9","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3306:6:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3317:4:9","type":""}],"src":"3230:210:9"},{"body":{"nodeType":"YulBlock","src":"3511:53:9","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3528:3:9"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3551:5:9"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3533:17:9"},"nodeType":"YulFunctionCall","src":"3533:24:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3521:6:9"},"nodeType":"YulFunctionCall","src":"3521:37:9"},"nodeType":"YulExpressionStatement","src":"3521:37:9"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3499:5:9","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3506:3:9","type":""}],"src":"3446:118:9"},{"body":{"nodeType":"YulBlock","src":"3668:124:9","statements":[{"nodeType":"YulAssignment","src":"3678:26:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3690:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"3701:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3686:3:9"},"nodeType":"YulFunctionCall","src":"3686:18:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3678:4:9"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3758:6:9"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3771:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"3782:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3767:3:9"},"nodeType":"YulFunctionCall","src":"3767:17:9"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"3714:43:9"},"nodeType":"YulFunctionCall","src":"3714:71:9"},"nodeType":"YulExpressionStatement","src":"3714:71:9"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3640:9:9","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3652:6:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3663:4:9","type":""}],"src":"3570:222:9"},{"body":{"nodeType":"YulBlock","src":"3898:519:9","statements":[{"body":{"nodeType":"YulBlock","src":"3944:83:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3946:77:9"},"nodeType":"YulFunctionCall","src":"3946:79:9"},"nodeType":"YulExpressionStatement","src":"3946:79:9"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3919:7:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"3928:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3915:3:9"},"nodeType":"YulFunctionCall","src":"3915:23:9"},{"kind":"number","nodeType":"YulLiteral","src":"3940:2:9","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3911:3:9"},"nodeType":"YulFunctionCall","src":"3911:32:9"},"nodeType":"YulIf","src":"3908:119:9"},{"nodeType":"YulBlock","src":"4037:117:9","statements":[{"nodeType":"YulVariableDeclaration","src":"4052:15:9","value":{"kind":"number","nodeType":"YulLiteral","src":"4066:1:9","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4056:6:9","type":""}]},{"nodeType":"YulAssignment","src":"4081:63:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4116:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"4127:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4112:3:9"},"nodeType":"YulFunctionCall","src":"4112:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4136:7:9"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4091:20:9"},"nodeType":"YulFunctionCall","src":"4091:53:9"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4081:6:9"}]}]},{"nodeType":"YulBlock","src":"4164:118:9","statements":[{"nodeType":"YulVariableDeclaration","src":"4179:16:9","value":{"kind":"number","nodeType":"YulLiteral","src":"4193:2:9","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4183:6:9","type":""}]},{"nodeType":"YulAssignment","src":"4209:63:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4244:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"4255:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4240:3:9"},"nodeType":"YulFunctionCall","src":"4240:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4264:7:9"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4219:20:9"},"nodeType":"YulFunctionCall","src":"4219:53:9"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4209:6:9"}]}]},{"nodeType":"YulBlock","src":"4292:118:9","statements":[{"nodeType":"YulVariableDeclaration","src":"4307:16:9","value":{"kind":"number","nodeType":"YulLiteral","src":"4321:2:9","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4311:6:9","type":""}]},{"nodeType":"YulAssignment","src":"4337:63:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4372:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"4383:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4368:3:9"},"nodeType":"YulFunctionCall","src":"4368:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4392:7:9"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4347:20:9"},"nodeType":"YulFunctionCall","src":"4347:53:9"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"4337:6:9"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3852:9:9","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3863:7:9","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3875:6:9","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3883:6:9","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3891:6:9","type":""}],"src":"3798:619:9"},{"body":{"nodeType":"YulBlock","src":"4466:43:9","statements":[{"nodeType":"YulAssignment","src":"4476:27:9","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4491:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"4498:4:9","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4487:3:9"},"nodeType":"YulFunctionCall","src":"4487:16:9"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"4476:7:9"}]}]},"name":"cleanup_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4448:5:9","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"4458:7:9","type":""}],"src":"4423:86:9"},{"body":{"nodeType":"YulBlock","src":"4576:51:9","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4593:3:9"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4614:5:9"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"4598:15:9"},"nodeType":"YulFunctionCall","src":"4598:22:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4586:6:9"},"nodeType":"YulFunctionCall","src":"4586:35:9"},"nodeType":"YulExpressionStatement","src":"4586:35:9"}]},"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4564:5:9","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4571:3:9","type":""}],"src":"4515:112:9"},{"body":{"nodeType":"YulBlock","src":"4727:120:9","statements":[{"nodeType":"YulAssignment","src":"4737:26:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4749:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"4760:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4745:3:9"},"nodeType":"YulFunctionCall","src":"4745:18:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4737:4:9"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4813:6:9"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4826:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"4837:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4822:3:9"},"nodeType":"YulFunctionCall","src":"4822:17:9"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"4773:39:9"},"nodeType":"YulFunctionCall","src":"4773:67:9"},"nodeType":"YulExpressionStatement","src":"4773:67:9"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4699:9:9","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4711:6:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4722:4:9","type":""}],"src":"4633:214:9"},{"body":{"nodeType":"YulBlock","src":"4919:263:9","statements":[{"body":{"nodeType":"YulBlock","src":"4965:83:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4967:77:9"},"nodeType":"YulFunctionCall","src":"4967:79:9"},"nodeType":"YulExpressionStatement","src":"4967:79:9"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4940:7:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"4949:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4936:3:9"},"nodeType":"YulFunctionCall","src":"4936:23:9"},{"kind":"number","nodeType":"YulLiteral","src":"4961:2:9","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4932:3:9"},"nodeType":"YulFunctionCall","src":"4932:32:9"},"nodeType":"YulIf","src":"4929:119:9"},{"nodeType":"YulBlock","src":"5058:117:9","statements":[{"nodeType":"YulVariableDeclaration","src":"5073:15:9","value":{"kind":"number","nodeType":"YulLiteral","src":"5087:1:9","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5077:6:9","type":""}]},{"nodeType":"YulAssignment","src":"5102:63:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5137:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"5148:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5133:3:9"},"nodeType":"YulFunctionCall","src":"5133:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5157:7:9"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5112:20:9"},"nodeType":"YulFunctionCall","src":"5112:53:9"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5102:6:9"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4889:9:9","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4900:7:9","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4912:6:9","type":""}],"src":"4853:329:9"},{"body":{"nodeType":"YulBlock","src":"5271:391:9","statements":[{"body":{"nodeType":"YulBlock","src":"5317:83:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5319:77:9"},"nodeType":"YulFunctionCall","src":"5319:79:9"},"nodeType":"YulExpressionStatement","src":"5319:79:9"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5292:7:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"5301:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5288:3:9"},"nodeType":"YulFunctionCall","src":"5288:23:9"},{"kind":"number","nodeType":"YulLiteral","src":"5313:2:9","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5284:3:9"},"nodeType":"YulFunctionCall","src":"5284:32:9"},"nodeType":"YulIf","src":"5281:119:9"},{"nodeType":"YulBlock","src":"5410:117:9","statements":[{"nodeType":"YulVariableDeclaration","src":"5425:15:9","value":{"kind":"number","nodeType":"YulLiteral","src":"5439:1:9","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5429:6:9","type":""}]},{"nodeType":"YulAssignment","src":"5454:63:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5489:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"5500:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5485:3:9"},"nodeType":"YulFunctionCall","src":"5485:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5509:7:9"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5464:20:9"},"nodeType":"YulFunctionCall","src":"5464:53:9"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5454:6:9"}]}]},{"nodeType":"YulBlock","src":"5537:118:9","statements":[{"nodeType":"YulVariableDeclaration","src":"5552:16:9","value":{"kind":"number","nodeType":"YulLiteral","src":"5566:2:9","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5556:6:9","type":""}]},{"nodeType":"YulAssignment","src":"5582:63:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5617:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"5628:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5613:3:9"},"nodeType":"YulFunctionCall","src":"5613:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5637:7:9"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5592:20:9"},"nodeType":"YulFunctionCall","src":"5592:53:9"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5582:6:9"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5233:9:9","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5244:7:9","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5256:6:9","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5264:6:9","type":""}],"src":"5188:474:9"},{"body":{"nodeType":"YulBlock","src":"5696:152:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5713:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5716:77:9","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5706:6:9"},"nodeType":"YulFunctionCall","src":"5706:88:9"},"nodeType":"YulExpressionStatement","src":"5706:88:9"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5810:1:9","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"5813:4:9","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5803:6:9"},"nodeType":"YulFunctionCall","src":"5803:15:9"},"nodeType":"YulExpressionStatement","src":"5803:15:9"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5834:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5837:4:9","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5827:6:9"},"nodeType":"YulFunctionCall","src":"5827:15:9"},"nodeType":"YulExpressionStatement","src":"5827:15:9"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"5668:180:9"},{"body":{"nodeType":"YulBlock","src":"5905:269:9","statements":[{"nodeType":"YulAssignment","src":"5915:22:9","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"5929:4:9"},{"kind":"number","nodeType":"YulLiteral","src":"5935:1:9","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"5925:3:9"},"nodeType":"YulFunctionCall","src":"5925:12:9"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"5915:6:9"}]},{"nodeType":"YulVariableDeclaration","src":"5946:38:9","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"5976:4:9"},{"kind":"number","nodeType":"YulLiteral","src":"5982:1:9","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5972:3:9"},"nodeType":"YulFunctionCall","src":"5972:12:9"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"5950:18:9","type":""}]},{"body":{"nodeType":"YulBlock","src":"6023:51:9","statements":[{"nodeType":"YulAssignment","src":"6037:27:9","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6051:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"6059:4:9","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6047:3:9"},"nodeType":"YulFunctionCall","src":"6047:17:9"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"6037:6:9"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"6003:18:9"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5996:6:9"},"nodeType":"YulFunctionCall","src":"5996:26:9"},"nodeType":"YulIf","src":"5993:81:9"},{"body":{"nodeType":"YulBlock","src":"6126:42:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"6140:16:9"},"nodeType":"YulFunctionCall","src":"6140:18:9"},"nodeType":"YulExpressionStatement","src":"6140:18:9"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"6090:18:9"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6113:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"6121:2:9","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6110:2:9"},"nodeType":"YulFunctionCall","src":"6110:14:9"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6087:2:9"},"nodeType":"YulFunctionCall","src":"6087:38:9"},"nodeType":"YulIf","src":"6084:84:9"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"5889:4:9","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"5898:6:9","type":""}],"src":"5854:320:9"},{"body":{"nodeType":"YulBlock","src":"6208:152:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6225:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6228:77:9","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6218:6:9"},"nodeType":"YulFunctionCall","src":"6218:88:9"},"nodeType":"YulExpressionStatement","src":"6218:88:9"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6322:1:9","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"6325:4:9","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6315:6:9"},"nodeType":"YulFunctionCall","src":"6315:15:9"},"nodeType":"YulExpressionStatement","src":"6315:15:9"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6346:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6349:4:9","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6339:6:9"},"nodeType":"YulFunctionCall","src":"6339:15:9"},"nodeType":"YulExpressionStatement","src":"6339:15:9"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"6180:180:9"},{"body":{"nodeType":"YulBlock","src":"6410:147:9","statements":[{"nodeType":"YulAssignment","src":"6420:25:9","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6443:1:9"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6425:17:9"},"nodeType":"YulFunctionCall","src":"6425:20:9"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"6420:1:9"}]},{"nodeType":"YulAssignment","src":"6454:25:9","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"6477:1:9"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6459:17:9"},"nodeType":"YulFunctionCall","src":"6459:20:9"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"6454:1:9"}]},{"nodeType":"YulAssignment","src":"6488:16:9","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6499:1:9"},{"name":"y","nodeType":"YulIdentifier","src":"6502:1:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6495:3:9"},"nodeType":"YulFunctionCall","src":"6495:9:9"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"6488:3:9"}]},{"body":{"nodeType":"YulBlock","src":"6528:22:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"6530:16:9"},"nodeType":"YulFunctionCall","src":"6530:18:9"},"nodeType":"YulExpressionStatement","src":"6530:18:9"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6520:1:9"},{"name":"sum","nodeType":"YulIdentifier","src":"6523:3:9"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6517:2:9"},"nodeType":"YulFunctionCall","src":"6517:10:9"},"nodeType":"YulIf","src":"6514:36:9"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"6397:1:9","type":""},{"name":"y","nodeType":"YulTypedName","src":"6400:1:9","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"6406:3:9","type":""}],"src":"6366:191:9"},{"body":{"nodeType":"YulBlock","src":"6669:118:9","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6691:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"6699:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6687:3:9"},"nodeType":"YulFunctionCall","src":"6687:14:9"},{"hexValue":"45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77","kind":"string","nodeType":"YulLiteral","src":"6703:34:9","type":"","value":"ERC20: decreased allowance below"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6680:6:9"},"nodeType":"YulFunctionCall","src":"6680:58:9"},"nodeType":"YulExpressionStatement","src":"6680:58:9"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6759:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"6767:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6755:3:9"},"nodeType":"YulFunctionCall","src":"6755:15:9"},{"hexValue":"207a65726f","kind":"string","nodeType":"YulLiteral","src":"6772:7:9","type":"","value":" zero"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6748:6:9"},"nodeType":"YulFunctionCall","src":"6748:32:9"},"nodeType":"YulExpressionStatement","src":"6748:32:9"}]},"name":"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"6661:6:9","type":""}],"src":"6563:224:9"},{"body":{"nodeType":"YulBlock","src":"6939:220:9","statements":[{"nodeType":"YulAssignment","src":"6949:74:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7015:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"7020:2:9","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6956:58:9"},"nodeType":"YulFunctionCall","src":"6956:67:9"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6949:3:9"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7121:3:9"}],"functionName":{"name":"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","nodeType":"YulIdentifier","src":"7032:88:9"},"nodeType":"YulFunctionCall","src":"7032:93:9"},"nodeType":"YulExpressionStatement","src":"7032:93:9"},{"nodeType":"YulAssignment","src":"7134:19:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7145:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"7150:2:9","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7141:3:9"},"nodeType":"YulFunctionCall","src":"7141:12:9"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7134:3:9"}]}]},"name":"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"6927:3:9","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6935:3:9","type":""}],"src":"6793:366:9"},{"body":{"nodeType":"YulBlock","src":"7336:248:9","statements":[{"nodeType":"YulAssignment","src":"7346:26:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7358:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"7369:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7354:3:9"},"nodeType":"YulFunctionCall","src":"7354:18:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7346:4:9"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7393:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"7404:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7389:3:9"},"nodeType":"YulFunctionCall","src":"7389:17:9"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7412:4:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"7418:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7408:3:9"},"nodeType":"YulFunctionCall","src":"7408:20:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7382:6:9"},"nodeType":"YulFunctionCall","src":"7382:47:9"},"nodeType":"YulExpressionStatement","src":"7382:47:9"},{"nodeType":"YulAssignment","src":"7438:139:9","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7572:4:9"}],"functionName":{"name":"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7446:124:9"},"nodeType":"YulFunctionCall","src":"7446:131:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7438:4:9"}]}]},"name":"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7316:9:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7331:4:9","type":""}],"src":"7165:419:9"},{"body":{"nodeType":"YulBlock","src":"7696:117:9","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7718:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"7726:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7714:3:9"},"nodeType":"YulFunctionCall","src":"7714:14:9"},{"hexValue":"45524332303a20617070726f76652066726f6d20746865207a65726f20616464","kind":"string","nodeType":"YulLiteral","src":"7730:34:9","type":"","value":"ERC20: approve from the zero add"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7707:6:9"},"nodeType":"YulFunctionCall","src":"7707:58:9"},"nodeType":"YulExpressionStatement","src":"7707:58:9"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7786:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"7794:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7782:3:9"},"nodeType":"YulFunctionCall","src":"7782:15:9"},{"hexValue":"72657373","kind":"string","nodeType":"YulLiteral","src":"7799:6:9","type":"","value":"ress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7775:6:9"},"nodeType":"YulFunctionCall","src":"7775:31:9"},"nodeType":"YulExpressionStatement","src":"7775:31:9"}]},"name":"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"7688:6:9","type":""}],"src":"7590:223:9"},{"body":{"nodeType":"YulBlock","src":"7965:220:9","statements":[{"nodeType":"YulAssignment","src":"7975:74:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8041:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"8046:2:9","type":"","value":"36"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7982:58:9"},"nodeType":"YulFunctionCall","src":"7982:67:9"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7975:3:9"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8147:3:9"}],"functionName":{"name":"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","nodeType":"YulIdentifier","src":"8058:88:9"},"nodeType":"YulFunctionCall","src":"8058:93:9"},"nodeType":"YulExpressionStatement","src":"8058:93:9"},{"nodeType":"YulAssignment","src":"8160:19:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8171:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"8176:2:9","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8167:3:9"},"nodeType":"YulFunctionCall","src":"8167:12:9"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8160:3:9"}]}]},"name":"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"7953:3:9","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7961:3:9","type":""}],"src":"7819:366:9"},{"body":{"nodeType":"YulBlock","src":"8362:248:9","statements":[{"nodeType":"YulAssignment","src":"8372:26:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8384:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"8395:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8380:3:9"},"nodeType":"YulFunctionCall","src":"8380:18:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8372:4:9"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8419:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"8430:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8415:3:9"},"nodeType":"YulFunctionCall","src":"8415:17:9"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8438:4:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"8444:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8434:3:9"},"nodeType":"YulFunctionCall","src":"8434:20:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8408:6:9"},"nodeType":"YulFunctionCall","src":"8408:47:9"},"nodeType":"YulExpressionStatement","src":"8408:47:9"},{"nodeType":"YulAssignment","src":"8464:139:9","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8598:4:9"}],"functionName":{"name":"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8472:124:9"},"nodeType":"YulFunctionCall","src":"8472:131:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8464:4:9"}]}]},"name":"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8342:9:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8357:4:9","type":""}],"src":"8191:419:9"},{"body":{"nodeType":"YulBlock","src":"8722:115:9","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"8744:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"8752:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8740:3:9"},"nodeType":"YulFunctionCall","src":"8740:14:9"},{"hexValue":"45524332303a20617070726f766520746f20746865207a65726f206164647265","kind":"string","nodeType":"YulLiteral","src":"8756:34:9","type":"","value":"ERC20: approve to the zero addre"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8733:6:9"},"nodeType":"YulFunctionCall","src":"8733:58:9"},"nodeType":"YulExpressionStatement","src":"8733:58:9"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"8812:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"8820:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8808:3:9"},"nodeType":"YulFunctionCall","src":"8808:15:9"},{"hexValue":"7373","kind":"string","nodeType":"YulLiteral","src":"8825:4:9","type":"","value":"ss"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8801:6:9"},"nodeType":"YulFunctionCall","src":"8801:29:9"},"nodeType":"YulExpressionStatement","src":"8801:29:9"}]},"name":"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"8714:6:9","type":""}],"src":"8616:221:9"},{"body":{"nodeType":"YulBlock","src":"8989:220:9","statements":[{"nodeType":"YulAssignment","src":"8999:74:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9065:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"9070:2:9","type":"","value":"34"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9006:58:9"},"nodeType":"YulFunctionCall","src":"9006:67:9"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8999:3:9"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9171:3:9"}],"functionName":{"name":"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","nodeType":"YulIdentifier","src":"9082:88:9"},"nodeType":"YulFunctionCall","src":"9082:93:9"},"nodeType":"YulExpressionStatement","src":"9082:93:9"},{"nodeType":"YulAssignment","src":"9184:19:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9195:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"9200:2:9","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9191:3:9"},"nodeType":"YulFunctionCall","src":"9191:12:9"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"9184:3:9"}]}]},"name":"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8977:3:9","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8985:3:9","type":""}],"src":"8843:366:9"},{"body":{"nodeType":"YulBlock","src":"9386:248:9","statements":[{"nodeType":"YulAssignment","src":"9396:26:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9408:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"9419:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9404:3:9"},"nodeType":"YulFunctionCall","src":"9404:18:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9396:4:9"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9443:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"9454:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9439:3:9"},"nodeType":"YulFunctionCall","src":"9439:17:9"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9462:4:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"9468:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9458:3:9"},"nodeType":"YulFunctionCall","src":"9458:20:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9432:6:9"},"nodeType":"YulFunctionCall","src":"9432:47:9"},"nodeType":"YulExpressionStatement","src":"9432:47:9"},{"nodeType":"YulAssignment","src":"9488:139:9","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9622:4:9"}],"functionName":{"name":"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9496:124:9"},"nodeType":"YulFunctionCall","src":"9496:131:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9488:4:9"}]}]},"name":"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9366:9:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9381:4:9","type":""}],"src":"9215:419:9"},{"body":{"nodeType":"YulBlock","src":"9746:73:9","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"9768:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"9776:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9764:3:9"},"nodeType":"YulFunctionCall","src":"9764:14:9"},{"hexValue":"45524332303a20696e73756666696369656e7420616c6c6f77616e6365","kind":"string","nodeType":"YulLiteral","src":"9780:31:9","type":"","value":"ERC20: insufficient allowance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9757:6:9"},"nodeType":"YulFunctionCall","src":"9757:55:9"},"nodeType":"YulExpressionStatement","src":"9757:55:9"}]},"name":"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"9738:6:9","type":""}],"src":"9640:179:9"},{"body":{"nodeType":"YulBlock","src":"9971:220:9","statements":[{"nodeType":"YulAssignment","src":"9981:74:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10047:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"10052:2:9","type":"","value":"29"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9988:58:9"},"nodeType":"YulFunctionCall","src":"9988:67:9"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"9981:3:9"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10153:3:9"}],"functionName":{"name":"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","nodeType":"YulIdentifier","src":"10064:88:9"},"nodeType":"YulFunctionCall","src":"10064:93:9"},"nodeType":"YulExpressionStatement","src":"10064:93:9"},{"nodeType":"YulAssignment","src":"10166:19:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10177:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"10182:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10173:3:9"},"nodeType":"YulFunctionCall","src":"10173:12:9"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"10166:3:9"}]}]},"name":"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9959:3:9","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"9967:3:9","type":""}],"src":"9825:366:9"},{"body":{"nodeType":"YulBlock","src":"10368:248:9","statements":[{"nodeType":"YulAssignment","src":"10378:26:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10390:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"10401:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10386:3:9"},"nodeType":"YulFunctionCall","src":"10386:18:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10378:4:9"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10425:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"10436:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10421:3:9"},"nodeType":"YulFunctionCall","src":"10421:17:9"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10444:4:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"10450:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10440:3:9"},"nodeType":"YulFunctionCall","src":"10440:20:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10414:6:9"},"nodeType":"YulFunctionCall","src":"10414:47:9"},"nodeType":"YulExpressionStatement","src":"10414:47:9"},{"nodeType":"YulAssignment","src":"10470:139:9","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10604:4:9"}],"functionName":{"name":"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10478:124:9"},"nodeType":"YulFunctionCall","src":"10478:131:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10470:4:9"}]}]},"name":"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10348:9:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10363:4:9","type":""}],"src":"10197:419:9"},{"body":{"nodeType":"YulBlock","src":"10728:118:9","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"10750:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"10758:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10746:3:9"},"nodeType":"YulFunctionCall","src":"10746:14:9"},{"hexValue":"45524332303a207472616e736665722066726f6d20746865207a65726f206164","kind":"string","nodeType":"YulLiteral","src":"10762:34:9","type":"","value":"ERC20: transfer from the zero ad"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10739:6:9"},"nodeType":"YulFunctionCall","src":"10739:58:9"},"nodeType":"YulExpressionStatement","src":"10739:58:9"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"10818:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"10826:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10814:3:9"},"nodeType":"YulFunctionCall","src":"10814:15:9"},{"hexValue":"6472657373","kind":"string","nodeType":"YulLiteral","src":"10831:7:9","type":"","value":"dress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10807:6:9"},"nodeType":"YulFunctionCall","src":"10807:32:9"},"nodeType":"YulExpressionStatement","src":"10807:32:9"}]},"name":"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"10720:6:9","type":""}],"src":"10622:224:9"},{"body":{"nodeType":"YulBlock","src":"10998:220:9","statements":[{"nodeType":"YulAssignment","src":"11008:74:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11074:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"11079:2:9","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11015:58:9"},"nodeType":"YulFunctionCall","src":"11015:67:9"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"11008:3:9"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11180:3:9"}],"functionName":{"name":"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","nodeType":"YulIdentifier","src":"11091:88:9"},"nodeType":"YulFunctionCall","src":"11091:93:9"},"nodeType":"YulExpressionStatement","src":"11091:93:9"},{"nodeType":"YulAssignment","src":"11193:19:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11204:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"11209:2:9","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11200:3:9"},"nodeType":"YulFunctionCall","src":"11200:12:9"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"11193:3:9"}]}]},"name":"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"10986:3:9","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"10994:3:9","type":""}],"src":"10852:366:9"},{"body":{"nodeType":"YulBlock","src":"11395:248:9","statements":[{"nodeType":"YulAssignment","src":"11405:26:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11417:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"11428:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11413:3:9"},"nodeType":"YulFunctionCall","src":"11413:18:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11405:4:9"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11452:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"11463:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11448:3:9"},"nodeType":"YulFunctionCall","src":"11448:17:9"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11471:4:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"11477:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11467:3:9"},"nodeType":"YulFunctionCall","src":"11467:20:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11441:6:9"},"nodeType":"YulFunctionCall","src":"11441:47:9"},"nodeType":"YulExpressionStatement","src":"11441:47:9"},{"nodeType":"YulAssignment","src":"11497:139:9","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11631:4:9"}],"functionName":{"name":"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11505:124:9"},"nodeType":"YulFunctionCall","src":"11505:131:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11497:4:9"}]}]},"name":"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11375:9:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11390:4:9","type":""}],"src":"11224:419:9"},{"body":{"nodeType":"YulBlock","src":"11755:116:9","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"11777:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"11785:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11773:3:9"},"nodeType":"YulFunctionCall","src":"11773:14:9"},{"hexValue":"45524332303a207472616e7366657220746f20746865207a65726f2061646472","kind":"string","nodeType":"YulLiteral","src":"11789:34:9","type":"","value":"ERC20: transfer to the zero addr"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11766:6:9"},"nodeType":"YulFunctionCall","src":"11766:58:9"},"nodeType":"YulExpressionStatement","src":"11766:58:9"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"11845:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"11853:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11841:3:9"},"nodeType":"YulFunctionCall","src":"11841:15:9"},{"hexValue":"657373","kind":"string","nodeType":"YulLiteral","src":"11858:5:9","type":"","value":"ess"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11834:6:9"},"nodeType":"YulFunctionCall","src":"11834:30:9"},"nodeType":"YulExpressionStatement","src":"11834:30:9"}]},"name":"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"11747:6:9","type":""}],"src":"11649:222:9"},{"body":{"nodeType":"YulBlock","src":"12023:220:9","statements":[{"nodeType":"YulAssignment","src":"12033:74:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12099:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"12104:2:9","type":"","value":"35"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12040:58:9"},"nodeType":"YulFunctionCall","src":"12040:67:9"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"12033:3:9"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12205:3:9"}],"functionName":{"name":"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","nodeType":"YulIdentifier","src":"12116:88:9"},"nodeType":"YulFunctionCall","src":"12116:93:9"},"nodeType":"YulExpressionStatement","src":"12116:93:9"},{"nodeType":"YulAssignment","src":"12218:19:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12229:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"12234:2:9","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12225:3:9"},"nodeType":"YulFunctionCall","src":"12225:12:9"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"12218:3:9"}]}]},"name":"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"12011:3:9","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"12019:3:9","type":""}],"src":"11877:366:9"},{"body":{"nodeType":"YulBlock","src":"12420:248:9","statements":[{"nodeType":"YulAssignment","src":"12430:26:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12442:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"12453:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12438:3:9"},"nodeType":"YulFunctionCall","src":"12438:18:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12430:4:9"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12477:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"12488:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12473:3:9"},"nodeType":"YulFunctionCall","src":"12473:17:9"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12496:4:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"12502:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12492:3:9"},"nodeType":"YulFunctionCall","src":"12492:20:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12466:6:9"},"nodeType":"YulFunctionCall","src":"12466:47:9"},"nodeType":"YulExpressionStatement","src":"12466:47:9"},{"nodeType":"YulAssignment","src":"12522:139:9","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12656:4:9"}],"functionName":{"name":"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12530:124:9"},"nodeType":"YulFunctionCall","src":"12530:131:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12522:4:9"}]}]},"name":"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12400:9:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12415:4:9","type":""}],"src":"12249:419:9"},{"body":{"nodeType":"YulBlock","src":"12780:119:9","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12802:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"12810:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12798:3:9"},"nodeType":"YulFunctionCall","src":"12798:14:9"},{"hexValue":"45524332303a207472616e7366657220616d6f756e7420657863656564732062","kind":"string","nodeType":"YulLiteral","src":"12814:34:9","type":"","value":"ERC20: transfer amount exceeds b"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12791:6:9"},"nodeType":"YulFunctionCall","src":"12791:58:9"},"nodeType":"YulExpressionStatement","src":"12791:58:9"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12870:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"12878:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12866:3:9"},"nodeType":"YulFunctionCall","src":"12866:15:9"},{"hexValue":"616c616e6365","kind":"string","nodeType":"YulLiteral","src":"12883:8:9","type":"","value":"alance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12859:6:9"},"nodeType":"YulFunctionCall","src":"12859:33:9"},"nodeType":"YulExpressionStatement","src":"12859:33:9"}]},"name":"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"12772:6:9","type":""}],"src":"12674:225:9"},{"body":{"nodeType":"YulBlock","src":"13051:220:9","statements":[{"nodeType":"YulAssignment","src":"13061:74:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13127:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"13132:2:9","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13068:58:9"},"nodeType":"YulFunctionCall","src":"13068:67:9"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"13061:3:9"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13233:3:9"}],"functionName":{"name":"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","nodeType":"YulIdentifier","src":"13144:88:9"},"nodeType":"YulFunctionCall","src":"13144:93:9"},"nodeType":"YulExpressionStatement","src":"13144:93:9"},{"nodeType":"YulAssignment","src":"13246:19:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13257:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"13262:2:9","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13253:3:9"},"nodeType":"YulFunctionCall","src":"13253:12:9"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"13246:3:9"}]}]},"name":"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"13039:3:9","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"13047:3:9","type":""}],"src":"12905:366:9"},{"body":{"nodeType":"YulBlock","src":"13448:248:9","statements":[{"nodeType":"YulAssignment","src":"13458:26:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13470:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"13481:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13466:3:9"},"nodeType":"YulFunctionCall","src":"13466:18:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13458:4:9"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13505:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"13516:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13501:3:9"},"nodeType":"YulFunctionCall","src":"13501:17:9"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13524:4:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"13530:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13520:3:9"},"nodeType":"YulFunctionCall","src":"13520:20:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13494:6:9"},"nodeType":"YulFunctionCall","src":"13494:47:9"},"nodeType":"YulExpressionStatement","src":"13494:47:9"},{"nodeType":"YulAssignment","src":"13550:139:9","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13684:4:9"}],"functionName":{"name":"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13558:124:9"},"nodeType":"YulFunctionCall","src":"13558:131:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13550:4:9"}]}]},"name":"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13428:9:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13443:4:9","type":""}],"src":"13277:419:9"}]},"contents":"{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: decreased allowance below\")\n\n        mstore(add(memPtr, 32), \" zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve from the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve to the zero addre\")\n\n        mstore(add(memPtr, 32), \"ss\")\n\n    }\n\n    function abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: insufficient allowance\")\n\n    }\n\n    function abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer from the zero ad\")\n\n        mstore(add(memPtr, 32), \"dress\")\n\n    }\n\n    function abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer to the zero addr\")\n\n        mstore(add(memPtr, 32), \"ess\")\n\n    }\n\n    function abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer amount exceeds b\")\n\n        mstore(add(memPtr, 32), \"alance\")\n\n    }\n\n    function abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n","id":9,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461016857806370a082311461019857806395d89b41146101c8578063a457c2d7146101e6578063a9059cbb14610216578063dd62ed3e14610246576100a9565b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100fc57806323b872dd1461011a578063313ce5671461014a575b600080fd5b6100b6610276565b6040516100c39190610b0c565b60405180910390f35b6100e660048036038101906100e19190610bc7565b610308565b6040516100f39190610c22565b60405180910390f35b61010461032b565b6040516101119190610c4c565b60405180910390f35b610134600480360381019061012f9190610c67565b610335565b6040516101419190610c22565b60405180910390f35b610152610364565b60405161015f9190610cd6565b60405180910390f35b610182600480360381019061017d9190610bc7565b61036d565b60405161018f9190610c22565b60405180910390f35b6101b260048036038101906101ad9190610cf1565b6103a4565b6040516101bf9190610c4c565b60405180910390f35b6101d06103ec565b6040516101dd9190610b0c565b60405180910390f35b61020060048036038101906101fb9190610bc7565b61047e565b60405161020d9190610c22565b60405180910390f35b610230600480360381019061022b9190610bc7565b6104f5565b60405161023d9190610c22565b60405180910390f35b610260600480360381019061025b9190610d1e565b610518565b60405161026d9190610c4c565b60405180910390f35b60606003805461028590610d8d565b80601f01602080910402602001604051908101604052809291908181526020018280546102b190610d8d565b80156102fe5780601f106102d3576101008083540402835291602001916102fe565b820191906000526020600020905b8154815290600101906020018083116102e157829003601f168201915b5050505050905090565b60008061031361059f565b90506103208185856105a7565b600191505092915050565b6000600254905090565b60008061034061059f565b905061034d858285610770565b6103588585856107fc565b60019150509392505050565b60006012905090565b60008061037861059f565b905061039981858561038a8589610518565b6103949190610ded565b6105a7565b600191505092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060600480546103fb90610d8d565b80601f016020809104026020016040519081016040528092919081815260200182805461042790610d8d565b80156104745780601f1061044957610100808354040283529160200191610474565b820191906000526020600020905b81548152906001019060200180831161045757829003601f168201915b5050505050905090565b60008061048961059f565b905060006104978286610518565b9050838110156104dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d390610e93565b60405180910390fd5b6104e982868684036105a7565b60019250505092915050565b60008061050061059f565b905061050d8185856107fc565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610616576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060d90610f25565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610685576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067c90610fb7565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516107639190610c4c565b60405180910390a3505050565b600061077c8484610518565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146107f657818110156107e8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107df90611023565b60405180910390fd5b6107f584848484036105a7565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361086b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610862906110b5565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036108da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108d190611147565b60405180910390fd5b6108e5838383610a72565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101561096b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610962906111d9565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610a599190610c4c565b60405180910390a3610a6c848484610a77565b50505050565b505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610ab6578082015181840152602081019050610a9b565b60008484015250505050565b6000601f19601f8301169050919050565b6000610ade82610a7c565b610ae88185610a87565b9350610af8818560208601610a98565b610b0181610ac2565b840191505092915050565b60006020820190508181036000830152610b268184610ad3565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b5e82610b33565b9050919050565b610b6e81610b53565b8114610b7957600080fd5b50565b600081359050610b8b81610b65565b92915050565b6000819050919050565b610ba481610b91565b8114610baf57600080fd5b50565b600081359050610bc181610b9b565b92915050565b60008060408385031215610bde57610bdd610b2e565b5b6000610bec85828601610b7c565b9250506020610bfd85828601610bb2565b9150509250929050565b60008115159050919050565b610c1c81610c07565b82525050565b6000602082019050610c376000830184610c13565b92915050565b610c4681610b91565b82525050565b6000602082019050610c616000830184610c3d565b92915050565b600080600060608486031215610c8057610c7f610b2e565b5b6000610c8e86828701610b7c565b9350506020610c9f86828701610b7c565b9250506040610cb086828701610bb2565b9150509250925092565b600060ff82169050919050565b610cd081610cba565b82525050565b6000602082019050610ceb6000830184610cc7565b92915050565b600060208284031215610d0757610d06610b2e565b5b6000610d1584828501610b7c565b91505092915050565b60008060408385031215610d3557610d34610b2e565b5b6000610d4385828601610b7c565b9250506020610d5485828601610b7c565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610da557607f821691505b602082108103610db857610db7610d5e565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610df882610b91565b9150610e0383610b91565b9250828201905080821115610e1b57610e1a610dbe565b5b92915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b6000610e7d602583610a87565b9150610e8882610e21565b604082019050919050565b60006020820190508181036000830152610eac81610e70565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000610f0f602483610a87565b9150610f1a82610eb3565b604082019050919050565b60006020820190508181036000830152610f3e81610f02565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b6000610fa1602283610a87565b9150610fac82610f45565b604082019050919050565b60006020820190508181036000830152610fd081610f94565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b600061100d601d83610a87565b915061101882610fd7565b602082019050919050565b6000602082019050818103600083015261103c81611000565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b600061109f602583610a87565b91506110aa82611043565b604082019050919050565b600060208201905081810360008301526110ce81611092565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b6000611131602383610a87565b915061113c826110d5565b604082019050919050565b6000602082019050818103600083015261116081611124565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b60006111c3602683610a87565b91506111ce82611167565b604082019050919050565b600060208201905081810360008301526111f2816111b6565b905091905056fea264697066735822122022aa650b1b36ae0633af54ab6ba0e50b6942067358fed8c24ead03892a063d3164736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x246 JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x14A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x276 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0xB0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE1 SWAP2 SWAP1 PUSH2 0xBC7 JUMP JUMPDEST PUSH2 0x308 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0x32B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x111 SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x134 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12F SWAP2 SWAP1 PUSH2 0xC67 JUMP JUMPDEST PUSH2 0x335 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x141 SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x152 PUSH2 0x364 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15F SWAP2 SWAP1 PUSH2 0xCD6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x182 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17D SWAP2 SWAP1 PUSH2 0xBC7 JUMP JUMPDEST PUSH2 0x36D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18F SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AD SWAP2 SWAP1 PUSH2 0xCF1 JUMP JUMPDEST PUSH2 0x3A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D0 PUSH2 0x3EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DD SWAP2 SWAP1 PUSH2 0xB0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x200 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FB SWAP2 SWAP1 PUSH2 0xBC7 JUMP JUMPDEST PUSH2 0x47E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20D SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x230 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22B SWAP2 SWAP1 PUSH2 0xBC7 JUMP JUMPDEST PUSH2 0x4F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23D SWAP2 SWAP1 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x260 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25B SWAP2 SWAP1 PUSH2 0xD1E JUMP JUMPDEST PUSH2 0x518 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26D SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x285 SWAP1 PUSH2 0xD8D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B1 SWAP1 PUSH2 0xD8D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2FE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2FE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x313 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x320 DUP2 DUP6 DUP6 PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x340 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x34D DUP6 DUP3 DUP6 PUSH2 0x770 JUMP JUMPDEST PUSH2 0x358 DUP6 DUP6 DUP6 PUSH2 0x7FC JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x378 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x399 DUP2 DUP6 DUP6 PUSH2 0x38A DUP6 DUP10 PUSH2 0x518 JUMP JUMPDEST PUSH2 0x394 SWAP2 SWAP1 PUSH2 0xDED JUMP JUMPDEST PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x3FB SWAP1 PUSH2 0xD8D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x427 SWAP1 PUSH2 0xD8D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x474 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x449 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x474 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x457 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x489 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x497 DUP3 DUP7 PUSH2 0x518 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x4DC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D3 SWAP1 PUSH2 0xE93 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4E9 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x500 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x50D DUP2 DUP6 DUP6 PUSH2 0x7FC JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x616 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60D SWAP1 PUSH2 0xF25 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x685 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x67C SWAP1 PUSH2 0xFB7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x763 SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x77C DUP5 DUP5 PUSH2 0x518 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x7F6 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x7E8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7DF SWAP1 PUSH2 0x1023 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7F5 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x5A7 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x86B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x862 SWAP1 PUSH2 0x10B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8DA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8D1 SWAP1 PUSH2 0x1147 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8E5 DUP4 DUP4 DUP4 PUSH2 0xA72 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x96B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x962 SWAP1 PUSH2 0x11D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xA59 SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xA6C DUP5 DUP5 DUP5 PUSH2 0xA77 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xAB6 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xA9B JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xADE DUP3 PUSH2 0xA7C JUMP JUMPDEST PUSH2 0xAE8 DUP2 DUP6 PUSH2 0xA87 JUMP JUMPDEST SWAP4 POP PUSH2 0xAF8 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xA98 JUMP JUMPDEST PUSH2 0xB01 DUP2 PUSH2 0xAC2 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB26 DUP2 DUP5 PUSH2 0xAD3 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB5E DUP3 PUSH2 0xB33 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB6E DUP2 PUSH2 0xB53 JUMP JUMPDEST DUP2 EQ PUSH2 0xB79 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB8B DUP2 PUSH2 0xB65 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBA4 DUP2 PUSH2 0xB91 JUMP JUMPDEST DUP2 EQ PUSH2 0xBAF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBC1 DUP2 PUSH2 0xB9B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBDE JUMPI PUSH2 0xBDD PUSH2 0xB2E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xBEC DUP6 DUP3 DUP7 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xBFD DUP6 DUP3 DUP7 ADD PUSH2 0xBB2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC1C DUP2 PUSH2 0xC07 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC37 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC13 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC46 DUP2 PUSH2 0xB91 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC61 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC3D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xC80 JUMPI PUSH2 0xC7F PUSH2 0xB2E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC8E DUP7 DUP3 DUP8 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xC9F DUP7 DUP3 DUP8 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xCB0 DUP7 DUP3 DUP8 ADD PUSH2 0xBB2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCD0 DUP2 PUSH2 0xCBA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCEB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCC7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD07 JUMPI PUSH2 0xD06 PUSH2 0xB2E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD15 DUP5 DUP3 DUP6 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD35 JUMPI PUSH2 0xD34 PUSH2 0xB2E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD43 DUP6 DUP3 DUP7 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xD54 DUP6 DUP3 DUP7 ADD PUSH2 0xB7C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xDA5 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xDB8 JUMPI PUSH2 0xDB7 PUSH2 0xD5E JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xDF8 DUP3 PUSH2 0xB91 JUMP JUMPDEST SWAP2 POP PUSH2 0xE03 DUP4 PUSH2 0xB91 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xE1B JUMPI PUSH2 0xE1A PUSH2 0xDBE JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE7D PUSH1 0x25 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0xE88 DUP3 PUSH2 0xE21 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xEAC DUP2 PUSH2 0xE70 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF0F PUSH1 0x24 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0xF1A DUP3 PUSH2 0xEB3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF3E DUP2 PUSH2 0xF02 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFA1 PUSH1 0x22 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0xFAC DUP3 PUSH2 0xF45 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xFD0 DUP2 PUSH2 0xF94 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x100D PUSH1 0x1D DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0x1018 DUP3 PUSH2 0xFD7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x103C DUP2 PUSH2 0x1000 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x109F PUSH1 0x25 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0x10AA DUP3 PUSH2 0x1043 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x10CE DUP2 PUSH2 0x1092 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1131 PUSH1 0x23 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0x113C DUP3 PUSH2 0x10D5 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1160 DUP2 PUSH2 0x1124 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11C3 PUSH1 0x26 DUP4 PUSH2 0xA87 JUMP JUMPDEST SWAP2 POP PUSH2 0x11CE DUP3 PUSH2 0x1167 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x11F2 DUP2 PUSH2 0x11B6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x22 0xAA PUSH6 0xB1B36AE0633 0xAF SLOAD 0xAB PUSH12 0xA0E50B6942067358FED8C24E 0xAD SUB DUP10 0x2A MOD RETURNDATASIZE BALANCE PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"1401:11610:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2154:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4431:197;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3242:106;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5190:286;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3091:91;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5871:234;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3406:125;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2365:102;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6592:427;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3727:189;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3974:149;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2154:98;2208:13;2240:5;2233:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2154:98;:::o;4431:197::-;4514:4;4530:13;4546:12;:10;:12::i;:::-;4530:28;;4568:32;4577:5;4584:7;4593:6;4568:8;:32::i;:::-;4617:4;4610:11;;;4431:197;;;;:::o;3242:106::-;3303:7;3329:12;;3322:19;;3242:106;:::o;5190:286::-;5317:4;5333:15;5351:12;:10;:12::i;:::-;5333:30;;5373:38;5389:4;5395:7;5404:6;5373:15;:38::i;:::-;5421:27;5431:4;5437:2;5441:6;5421:9;:27::i;:::-;5465:4;5458:11;;;5190:286;;;;;:::o;3091:91::-;3149:5;3173:2;3166:9;;3091:91;:::o;5871:234::-;5959:4;5975:13;5991:12;:10;:12::i;:::-;5975:28;;6013:64;6022:5;6029:7;6066:10;6038:25;6048:5;6055:7;6038:9;:25::i;:::-;:38;;;;:::i;:::-;6013:8;:64::i;:::-;6094:4;6087:11;;;5871:234;;;;:::o;3406:125::-;3480:7;3506:9;:18;3516:7;3506:18;;;;;;;;;;;;;;;;3499:25;;3406:125;;;:::o;2365:102::-;2421:13;2453:7;2446:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2365:102;:::o;6592:427::-;6685:4;6701:13;6717:12;:10;:12::i;:::-;6701:28;;6739:24;6766:25;6776:5;6783:7;6766:9;:25::i;:::-;6739:52;;6829:15;6809:16;:35;;6801:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;6920:60;6929:5;6936:7;6964:15;6945:16;:34;6920:8;:60::i;:::-;7008:4;7001:11;;;;6592:427;;;;:::o;3727:189::-;3806:4;3822:13;3838:12;:10;:12::i;:::-;3822:28;;3860;3870:5;3877:2;3881:6;3860:9;:28::i;:::-;3905:4;3898:11;;;3727:189;;;;:::o;3974:149::-;4063:7;4089:11;:18;4101:5;4089:18;;;;;;;;;;;;;;;:27;4108:7;4089:27;;;;;;;;;;;;;;;;4082:34;;3974:149;;;;:::o;640:96:6:-;693:7;719:10;712:17;;640:96;:::o;10504:370:2:-;10652:1;10635:19;;:5;:19;;;10627:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;10732:1;10713:21;;:7;:21;;;10705:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;10814:6;10784:11;:18;10796:5;10784:18;;;;;;;;;;;;;;;:27;10803:7;10784:27;;;;;;;;;;;;;;;:36;;;;10851:7;10835:32;;10844:5;10835:32;;;10860:6;10835:32;;;;;;:::i;:::-;;;;;;;;10504:370;;;:::o;11155:441::-;11285:24;11312:25;11322:5;11329:7;11312:9;:25::i;:::-;11285:52;;11371:17;11351:16;:37;11347:243;;11432:6;11412:16;:26;;11404:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;11514:51;11523:5;11530:7;11558:6;11539:16;:25;11514:8;:51::i;:::-;11347:243;11275:321;11155:441;;;:::o;7473:818::-;7615:1;7599:18;;:4;:18;;;7591:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;7691:1;7677:16;;:2;:16;;;7669:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;7744:38;7765:4;7771:2;7775:6;7744:20;:38::i;:::-;7793:19;7815:9;:15;7825:4;7815:15;;;;;;;;;;;;;;;;7793:37;;7863:6;7848:11;:21;;7840:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;7978:6;7964:11;:20;7946:9;:15;7956:4;7946:15;;;;;;;;;;;;;;;:38;;;;8178:6;8161:9;:13;8171:2;8161:13;;;;;;;;;;;;;;;;:23;;;;;;;;;;;8225:2;8210:26;;8219:4;8210:26;;;8229:6;8210:26;;;;;;:::i;:::-;;;;;;;;8247:37;8267:4;8273:2;8277:6;8247:19;:37::i;:::-;7581:710;7473:818;;;:::o;12180:121::-;;;;:::o;12889:120::-;;;;:::o;7:99:9:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:246::-;368:1;378:113;392:6;389:1;386:13;378:113;;;477:1;472:3;468:11;462:18;458:1;453:3;449:11;442:39;414:2;411:1;407:10;402:15;;378:113;;;525:1;516:6;511:3;507:16;500:27;349:184;287:246;;;:::o;539:102::-;580:6;631:2;627:7;622:2;615:5;611:14;607:28;597:38;;539:102;;;:::o;647:377::-;735:3;763:39;796:5;763:39;:::i;:::-;818:71;882:6;877:3;818:71;:::i;:::-;811:78;;898:65;956:6;951:3;944:4;937:5;933:16;898:65;:::i;:::-;988:29;1010:6;988:29;:::i;:::-;983:3;979:39;972:46;;739:285;647:377;;;;:::o;1030:313::-;1143:4;1181:2;1170:9;1166:18;1158:26;;1230:9;1224:4;1220:20;1216:1;1205:9;1201:17;1194:47;1258:78;1331:4;1322:6;1258:78;:::i;:::-;1250:86;;1030:313;;;;:::o;1430:117::-;1539:1;1536;1529:12;1676:126;1713:7;1753:42;1746:5;1742:54;1731:65;;1676:126;;;:::o;1808:96::-;1845:7;1874:24;1892:5;1874:24;:::i;:::-;1863:35;;1808:96;;;:::o;1910:122::-;1983:24;2001:5;1983:24;:::i;:::-;1976:5;1973:35;1963:63;;2022:1;2019;2012:12;1963:63;1910:122;:::o;2038:139::-;2084:5;2122:6;2109:20;2100:29;;2138:33;2165:5;2138:33;:::i;:::-;2038:139;;;;:::o;2183:77::-;2220:7;2249:5;2238:16;;2183:77;;;:::o;2266:122::-;2339:24;2357:5;2339:24;:::i;:::-;2332:5;2329:35;2319:63;;2378:1;2375;2368:12;2319:63;2266:122;:::o;2394:139::-;2440:5;2478:6;2465:20;2456:29;;2494:33;2521:5;2494:33;:::i;:::-;2394:139;;;;:::o;2539:474::-;2607:6;2615;2664:2;2652:9;2643:7;2639:23;2635:32;2632:119;;;2670:79;;:::i;:::-;2632:119;2790:1;2815:53;2860:7;2851:6;2840:9;2836:22;2815:53;:::i;:::-;2805:63;;2761:117;2917:2;2943:53;2988:7;2979:6;2968:9;2964:22;2943:53;:::i;:::-;2933:63;;2888:118;2539:474;;;;;:::o;3019:90::-;3053:7;3096:5;3089:13;3082:21;3071:32;;3019:90;;;:::o;3115:109::-;3196:21;3211:5;3196:21;:::i;:::-;3191:3;3184:34;3115:109;;:::o;3230:210::-;3317:4;3355:2;3344:9;3340:18;3332:26;;3368:65;3430:1;3419:9;3415:17;3406:6;3368:65;:::i;:::-;3230:210;;;;:::o;3446:118::-;3533:24;3551:5;3533:24;:::i;:::-;3528:3;3521:37;3446:118;;:::o;3570:222::-;3663:4;3701:2;3690:9;3686:18;3678:26;;3714:71;3782:1;3771:9;3767:17;3758:6;3714:71;:::i;:::-;3570:222;;;;:::o;3798:619::-;3875:6;3883;3891;3940:2;3928:9;3919:7;3915:23;3911:32;3908:119;;;3946:79;;:::i;:::-;3908:119;4066:1;4091:53;4136:7;4127:6;4116:9;4112:22;4091:53;:::i;:::-;4081:63;;4037:117;4193:2;4219:53;4264:7;4255:6;4244:9;4240:22;4219:53;:::i;:::-;4209:63;;4164:118;4321:2;4347:53;4392:7;4383:6;4372:9;4368:22;4347:53;:::i;:::-;4337:63;;4292:118;3798:619;;;;;:::o;4423:86::-;4458:7;4498:4;4491:5;4487:16;4476:27;;4423:86;;;:::o;4515:112::-;4598:22;4614:5;4598:22;:::i;:::-;4593:3;4586:35;4515:112;;:::o;4633:214::-;4722:4;4760:2;4749:9;4745:18;4737:26;;4773:67;4837:1;4826:9;4822:17;4813:6;4773:67;:::i;:::-;4633:214;;;;:::o;4853:329::-;4912:6;4961:2;4949:9;4940:7;4936:23;4932:32;4929:119;;;4967:79;;:::i;:::-;4929:119;5087:1;5112:53;5157:7;5148:6;5137:9;5133:22;5112:53;:::i;:::-;5102:63;;5058:117;4853:329;;;;:::o;5188:474::-;5256:6;5264;5313:2;5301:9;5292:7;5288:23;5284:32;5281:119;;;5319:79;;:::i;:::-;5281:119;5439:1;5464:53;5509:7;5500:6;5489:9;5485:22;5464:53;:::i;:::-;5454:63;;5410:117;5566:2;5592:53;5637:7;5628:6;5617:9;5613:22;5592:53;:::i;:::-;5582:63;;5537:118;5188:474;;;;;:::o;5668:180::-;5716:77;5713:1;5706:88;5813:4;5810:1;5803:15;5837:4;5834:1;5827:15;5854:320;5898:6;5935:1;5929:4;5925:12;5915:22;;5982:1;5976:4;5972:12;6003:18;5993:81;;6059:4;6051:6;6047:17;6037:27;;5993:81;6121:2;6113:6;6110:14;6090:18;6087:38;6084:84;;6140:18;;:::i;:::-;6084:84;5905:269;5854:320;;;:::o;6180:180::-;6228:77;6225:1;6218:88;6325:4;6322:1;6315:15;6349:4;6346:1;6339:15;6366:191;6406:3;6425:20;6443:1;6425:20;:::i;:::-;6420:25;;6459:20;6477:1;6459:20;:::i;:::-;6454:25;;6502:1;6499;6495:9;6488:16;;6523:3;6520:1;6517:10;6514:36;;;6530:18;;:::i;:::-;6514:36;6366:191;;;;:::o;6563:224::-;6703:34;6699:1;6691:6;6687:14;6680:58;6772:7;6767:2;6759:6;6755:15;6748:32;6563:224;:::o;6793:366::-;6935:3;6956:67;7020:2;7015:3;6956:67;:::i;:::-;6949:74;;7032:93;7121:3;7032:93;:::i;:::-;7150:2;7145:3;7141:12;7134:19;;6793:366;;;:::o;7165:419::-;7331:4;7369:2;7358:9;7354:18;7346:26;;7418:9;7412:4;7408:20;7404:1;7393:9;7389:17;7382:47;7446:131;7572:4;7446:131;:::i;:::-;7438:139;;7165:419;;;:::o;7590:223::-;7730:34;7726:1;7718:6;7714:14;7707:58;7799:6;7794:2;7786:6;7782:15;7775:31;7590:223;:::o;7819:366::-;7961:3;7982:67;8046:2;8041:3;7982:67;:::i;:::-;7975:74;;8058:93;8147:3;8058:93;:::i;:::-;8176:2;8171:3;8167:12;8160:19;;7819:366;;;:::o;8191:419::-;8357:4;8395:2;8384:9;8380:18;8372:26;;8444:9;8438:4;8434:20;8430:1;8419:9;8415:17;8408:47;8472:131;8598:4;8472:131;:::i;:::-;8464:139;;8191:419;;;:::o;8616:221::-;8756:34;8752:1;8744:6;8740:14;8733:58;8825:4;8820:2;8812:6;8808:15;8801:29;8616:221;:::o;8843:366::-;8985:3;9006:67;9070:2;9065:3;9006:67;:::i;:::-;8999:74;;9082:93;9171:3;9082:93;:::i;:::-;9200:2;9195:3;9191:12;9184:19;;8843:366;;;:::o;9215:419::-;9381:4;9419:2;9408:9;9404:18;9396:26;;9468:9;9462:4;9458:20;9454:1;9443:9;9439:17;9432:47;9496:131;9622:4;9496:131;:::i;:::-;9488:139;;9215:419;;;:::o;9640:179::-;9780:31;9776:1;9768:6;9764:14;9757:55;9640:179;:::o;9825:366::-;9967:3;9988:67;10052:2;10047:3;9988:67;:::i;:::-;9981:74;;10064:93;10153:3;10064:93;:::i;:::-;10182:2;10177:3;10173:12;10166:19;;9825:366;;;:::o;10197:419::-;10363:4;10401:2;10390:9;10386:18;10378:26;;10450:9;10444:4;10440:20;10436:1;10425:9;10421:17;10414:47;10478:131;10604:4;10478:131;:::i;:::-;10470:139;;10197:419;;;:::o;10622:224::-;10762:34;10758:1;10750:6;10746:14;10739:58;10831:7;10826:2;10818:6;10814:15;10807:32;10622:224;:::o;10852:366::-;10994:3;11015:67;11079:2;11074:3;11015:67;:::i;:::-;11008:74;;11091:93;11180:3;11091:93;:::i;:::-;11209:2;11204:3;11200:12;11193:19;;10852:366;;;:::o;11224:419::-;11390:4;11428:2;11417:9;11413:18;11405:26;;11477:9;11471:4;11467:20;11463:1;11452:9;11448:17;11441:47;11505:131;11631:4;11505:131;:::i;:::-;11497:139;;11224:419;;;:::o;11649:222::-;11789:34;11785:1;11777:6;11773:14;11766:58;11858:5;11853:2;11845:6;11841:15;11834:30;11649:222;:::o;11877:366::-;12019:3;12040:67;12104:2;12099:3;12040:67;:::i;:::-;12033:74;;12116:93;12205:3;12116:93;:::i;:::-;12234:2;12229:3;12225:12;12218:19;;11877:366;;;:::o;12249:419::-;12415:4;12453:2;12442:9;12438:18;12430:26;;12502:9;12496:4;12492:20;12488:1;12477:9;12473:17;12466:47;12530:131;12656:4;12530:131;:::i;:::-;12522:139;;12249:419;;;:::o;12674:225::-;12814:34;12810:1;12802:6;12798:14;12791:58;12883:8;12878:2;12870:6;12866:15;12859:33;12674:225;:::o;12905:366::-;13047:3;13068:67;13132:2;13127:3;13068:67;:::i;:::-;13061:74;;13144:93;13233:3;13144:93;:::i;:::-;13262:2;13257:3;13253:12;13246:19;;12905:366;;;:::o;13277:419::-;13443:4;13481:2;13470:9;13466:18;13458:26;;13530:9;13524:4;13520:20;13516:1;13505:9;13501:17;13494:47;13558:131;13684:4;13558:131;:::i;:::-;13550:139;;13277:419;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"931000","executionCost":"infinite","totalCost":"infinite"},"external":{"allowance(address,address)":"infinite","approve(address,uint256)":"infinite","balanceOf(address)":"2863","decimals()":"432","decreaseAllowance(address,uint256)":"infinite","increaseAllowance(address,uint256)":"infinite","name()":"infinite","symbol()":"infinite","totalSupply()":"2482","transfer(address,uint256)":"infinite","transferFrom(address,address,uint256)":"infinite"},"internal":{"_afterTokenTransfer(address,address,uint256)":"15","_approve(address,address,uint256)":"infinite","_beforeTokenTransfer(address,address,uint256)":"15","_burn(address,uint256)":"infinite","_mint(address,uint256)":"infinite","_spendAllowance(address,address,uint256)":"infinite","_transfer(address,address,uint256)":"infinite"}},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","increaseAllowance(address,uint256)":"39509351","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"./extensions/IERC20Metadata.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20 is Context, IERC20, IERC20Metadata {\\n    mapping(address => uint256) private _balances;\\n\\n    mapping(address => mapping(address => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * The default value of {decimals} is 18. To select a different value for\\n     * {decimals} you should overload it.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\\n     * overridden;\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual override returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `amount`.\\n     */\\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `amount`.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) public virtual override returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, amount);\\n        _transfer(from, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `spender` must have allowance for the caller of at least\\n     * `subtractedValue`.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        uint256 currentAllowance = allowance(owner, spender);\\n        require(currentAllowance >= subtractedValue, \\\"ERC20: decreased allowance below zero\\\");\\n        unchecked {\\n            _approve(owner, spender, currentAllowance - subtractedValue);\\n        }\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves `amount` of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     */\\n    function _transfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {\\n        require(from != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(to != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, amount);\\n\\n        uint256 fromBalance = _balances[from];\\n        require(fromBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        unchecked {\\n            _balances[from] = fromBalance - amount;\\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\\n            // decrementing then incrementing.\\n            _balances[to] += amount;\\n        }\\n\\n        emit Transfer(from, to, amount);\\n\\n        _afterTokenTransfer(from, to, amount);\\n    }\\n\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _beforeTokenTransfer(address(0), account, amount);\\n\\n        _totalSupply += amount;\\n        unchecked {\\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\\n            _balances[account] += amount;\\n        }\\n        emit Transfer(address(0), account, amount);\\n\\n        _afterTokenTransfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     */\\n    function _burn(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        _beforeTokenTransfer(account, address(0), amount);\\n\\n        uint256 accountBalance = _balances[account];\\n        require(accountBalance >= amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        unchecked {\\n            _balances[account] = accountBalance - amount;\\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\\n            _totalSupply -= amount;\\n        }\\n\\n        emit Transfer(account, address(0), amount);\\n\\n        _afterTokenTransfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     */\\n    function _approve(\\n        address owner,\\n        address spender,\\n        uint256 amount\\n    ) internal virtual {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\\n     *\\n     * Does not update the allowance amount in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Might emit an {Approval} event.\\n     */\\n    function _spendAllowance(\\n        address owner,\\n        address spender,\\n        uint256 amount\\n    ) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            require(currentAllowance >= amount, \\\"ERC20: insufficient allowance\\\");\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - amount);\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * will be transferred to `to`.\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * has been transferred to `to`.\\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n}\\n\",\"keccak256\":\"0x4ffc0547c02ad22925310c585c0f166f8759e2648a09e9b489100c42f15dd98d\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":236,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_balances","offset":0,"slot":"0","type":"t_mapping(t_address,t_uint256)"},{"astId":242,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_allowances","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":244,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_totalSupply","offset":0,"slot":"2","type":"t_uint256"},{"astId":246,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_name","offset":0,"slot":"3","type":"t_string_storage"},{"astId":248,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_symbol","offset":0,"slot":"4","type":"t_string_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface of the ERC20 standard as defined in the EIP.","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the amount of tokens owned by `account`."},"totalSupply()":{"details":"Returns the amount of tokens in existence."},"transfer(address,uint256)":{"details":"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol":{"ERC20Burnable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"burnFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).","kind":"dev","methods":{"allowance(address,address)":{"details":"See {IERC20-allowance}."},"approve(address,uint256)":{"details":"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."},"balanceOf(address)":{"details":"See {IERC20-balanceOf}."},"burn(uint256)":{"details":"Destroys `amount` tokens from the caller. See {ERC20-_burn}."},"burnFrom(address,uint256)":{"details":"Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`."},"decimals()":{"details":"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"decreaseAllowance(address,uint256)":{"details":"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."},"increaseAllowance(address,uint256)":{"details":"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{"details":"See {IERC20-totalSupply}."},"transfer(address,uint256)":{"details":"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."},"transferFrom(address,address,uint256)":{"details":"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","burn(uint256)":"42966c68","burnFrom(address,uint256)":"79cc6790","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","increaseAllowance(address,uint256)":"39509351","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys `amount` tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":\"ERC20Burnable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"./extensions/IERC20Metadata.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20 is Context, IERC20, IERC20Metadata {\\n    mapping(address => uint256) private _balances;\\n\\n    mapping(address => mapping(address => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * The default value of {decimals} is 18. To select a different value for\\n     * {decimals} you should overload it.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\\n     * overridden;\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual override returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `amount`.\\n     */\\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `amount`.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) public virtual override returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, amount);\\n        _transfer(from, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `spender` must have allowance for the caller of at least\\n     * `subtractedValue`.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        uint256 currentAllowance = allowance(owner, spender);\\n        require(currentAllowance >= subtractedValue, \\\"ERC20: decreased allowance below zero\\\");\\n        unchecked {\\n            _approve(owner, spender, currentAllowance - subtractedValue);\\n        }\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves `amount` of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     */\\n    function _transfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {\\n        require(from != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(to != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, amount);\\n\\n        uint256 fromBalance = _balances[from];\\n        require(fromBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        unchecked {\\n            _balances[from] = fromBalance - amount;\\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\\n            // decrementing then incrementing.\\n            _balances[to] += amount;\\n        }\\n\\n        emit Transfer(from, to, amount);\\n\\n        _afterTokenTransfer(from, to, amount);\\n    }\\n\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _beforeTokenTransfer(address(0), account, amount);\\n\\n        _totalSupply += amount;\\n        unchecked {\\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\\n            _balances[account] += amount;\\n        }\\n        emit Transfer(address(0), account, amount);\\n\\n        _afterTokenTransfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     */\\n    function _burn(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        _beforeTokenTransfer(account, address(0), amount);\\n\\n        uint256 accountBalance = _balances[account];\\n        require(accountBalance >= amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        unchecked {\\n            _balances[account] = accountBalance - amount;\\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\\n            _totalSupply -= amount;\\n        }\\n\\n        emit Transfer(account, address(0), amount);\\n\\n        _afterTokenTransfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     */\\n    function _approve(\\n        address owner,\\n        address spender,\\n        uint256 amount\\n    ) internal virtual {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\\n     *\\n     * Does not update the allowance amount in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Might emit an {Approval} event.\\n     */\\n    function _spendAllowance(\\n        address owner,\\n        address spender,\\n        uint256 amount\\n    ) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            require(currentAllowance >= amount, \\\"ERC20: insufficient allowance\\\");\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - amount);\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * will be transferred to `to`.\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * has been transferred to `to`.\\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n}\\n\",\"keccak256\":\"0x4ffc0547c02ad22925310c585c0f166f8759e2648a09e9b489100c42f15dd98d\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/extensions/ERC20Burnable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../ERC20.sol\\\";\\nimport \\\"../../../utils/Context.sol\\\";\\n\\n/**\\n * @dev Extension of {ERC20} that allows token holders to destroy both their own\\n * tokens and those that they have an allowance for, in a way that can be\\n * recognized off-chain (via event analysis).\\n */\\nabstract contract ERC20Burnable is Context, ERC20 {\\n    /**\\n     * @dev Destroys `amount` tokens from the caller.\\n     *\\n     * See {ERC20-_burn}.\\n     */\\n    function burn(uint256 amount) public virtual {\\n        _burn(_msgSender(), amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, deducting from the caller's\\n     * allowance.\\n     *\\n     * See {ERC20-_burn} and {ERC20-allowance}.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have allowance for ``accounts``'s tokens of at least\\n     * `amount`.\\n     */\\n    function burnFrom(address account, uint256 amount) public virtual {\\n        _spendAllowance(account, _msgSender(), amount);\\n        _burn(account, amount);\\n    }\\n}\\n\",\"keccak256\":\"0x0d19410453cda55960a818e02bd7c18952a5c8fe7a3036e81f0d599f34487a7b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":236,"contract":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable","label":"_balances","offset":0,"slot":"0","type":"t_mapping(t_address,t_uint256)"},{"astId":242,"contract":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable","label":"_allowances","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":244,"contract":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable","label":"_totalSupply","offset":0,"slot":"2","type":"t_uint256"},{"astId":246,"contract":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable","label":"_name","offset":0,"slot":"3","type":"t_string_storage"},{"astId":248,"contract":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable","label":"_symbol","offset":0,"slot":"4","type":"t_string_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._","kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the amount of tokens owned by `account`."},"decimals()":{"details":"Returns the decimals places of the token."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token."},"totalSupply()":{"details":"Returns the amount of tokens in existence."},"transfer(address,uint256)":{"details":"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"devdoc":{"details":"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/math/SafeMath.sol":{"SafeMath":{"abi":[],"devdoc":{"details":"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a02c648438644133931b4c66812933dcc54aec01449b04904e46734647f00bf764736f6c63430008110033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG0 0x2C PUSH5 0x8438644133 SWAP4 SHL 0x4C PUSH7 0x812933DCC54AEC ADD DIFFICULTY SWAP12 DIV SWAP1 0x4E CHAINID PUSH20 0x4647F00BF764736F6C6343000811003300000000 ","sourceMap":"482:6300:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a02c648438644133931b4c66812933dcc54aec01449b04904e46734647f00bf764736f6c63430008110033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG0 0x2C PUSH5 0x8438644133 SWAP4 SHL 0x4C PUSH7 0x812933DCC54AEC ADD DIFFICULTY SWAP12 DIV SWAP1 0x4E CHAINID PUSH20 0x4647F00BF764736F6C6343000811003300000000 ","sourceMap":"482:6300:7:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"add(uint256,uint256)":"infinite","div(uint256,uint256)":"infinite","div(uint256,uint256,string memory)":"infinite","mod(uint256,uint256)":"infinite","mod(uint256,uint256,string memory)":"infinite","mul(uint256,uint256)":"infinite","sub(uint256,uint256)":"infinite","sub(uint256,uint256,string memory)":"infinite","tryAdd(uint256,uint256)":"infinite","tryDiv(uint256,uint256)":"infinite","tryMod(uint256,uint256)":"infinite","tryMul(uint256,uint256)":"infinite","trySub(uint256,uint256)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\\n\\npragma solidity ^0.8.0;\\n\\n// CAUTION\\n// This version of SafeMath should only be used with Solidity 0.8 or later,\\n// because it relies on the compiler's built in overflow checks.\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations.\\n *\\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\\n * now has built in overflow checking.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            uint256 c = a + b;\\n            if (c < a) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b > a) return (false, 0);\\n            return (true, a - b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n            // benefit is lost if 'b' is also tested.\\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n            if (a == 0) return (true, 0);\\n            uint256 c = a * b;\\n            if (c / a != b) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a / b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a % b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a + b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a - b;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a * b;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a / b;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a % b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {trySub}.\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b <= a, errorMessage);\\n            return a - b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a / b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting with custom message when dividing by zero.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryMod}.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a % b;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/ProvableGBP.sol":{"ProvableGBP":{"abi":[{"inputs":[{"internalType":"bytes","name":"_publicKey","type":"bytes"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"requester","type":"address"},{"indexed":true,"internalType":"bytes32","name":"requestId","type":"bytes32"},{"indexed":false,"internalType":"bytes","name":"grantEncryptedData","type":"bytes"}],"name":"AuthGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"requester","type":"address"},{"indexed":true,"internalType":"bytes32","name":"requestId","type":"bytes32"},{"indexed":false,"internalType":"bytes","name":"authEncryptedData","type":"bytes"}],"name":"AuthRequest","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"requester","type":"address"},{"indexed":true,"internalType":"bytes32","name":"requestId","type":"bytes32"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"expiration","type":"uint256"},{"indexed":false,"internalType":"bytes","name":"encryptedData","type":"bytes"}],"name":"MintRequest","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[],"name":"actualMintedPercentage","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"requestId","type":"bytes32"},{"internalType":"bytes","name":"encryptedData","type":"bytes"}],"name":"authGranted","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"requestId","type":"bytes32"},{"internalType":"bytes","name":"serverEncryptedData","type":"bytes"}],"name":"authRequest","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"burnFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getExpiryTime","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"mint","outputs":[],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"encryptedData","type":"bytes"}],"name":"mintRequest","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"oneHundredPercent","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"requestId","type":"bytes32"}],"name":"paymentComplete","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"publicKey","outputs":[{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"seignorageFee","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes","name":"_publicKey","type":"bytes"}],"name":"setPublicKey","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"unpause","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"allowance(address,address)":{"details":"See {IERC20-allowance}."},"approve(address,uint256)":{"details":"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."},"authGranted(bytes32,bytes)":{"params":{"encryptedData":"the grant's encrypted data","requestId":"the original mint request id"}},"authRequest(bytes32,bytes)":{"params":{"requestId":"the original mint request id","serverEncryptedData":"the current auth. request's encrypted data"}},"balanceOf(address)":{"details":"See {IERC20-balanceOf}."},"burn(uint256)":{"details":"Destroys `amount` tokens from the caller. See {ERC20-_burn}."},"burnFrom(address,uint256)":{"details":"Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`."},"decimals()":{"details":"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."},"decreaseAllowance(address,uint256)":{"details":"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."},"increaseAllowance(address,uint256)":{"details":"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."},"mintRequest(uint256,bytes)":{"params":{"amount":"The amount to be minted (specified in 10^18 decimals)","encryptedData":"The encrypted payload of the request"}},"name()":{"details":"Returns the name of the token."},"owner()":{"details":"Returns the address of the current owner."},"paused()":{"details":"Returns true if the contract is paused, and false otherwise."},"paymentComplete(bytes32)":{"params":{"requestId":"the original mint request id"}},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"symbol()":{"details":"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{"details":"See {IERC20-totalSupply}."},"transfer(address,uint256)":{"details":"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."},"transferFrom(address,address,uint256)":{"details":"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_1351":{"entryPoint":null,"id":1351,"parameterSlots":1,"returnSlots":0},"@_139":{"entryPoint":null,"id":139,"parameterSlots":0,"returnSlots":0},"@_23":{"entryPoint":null,"id":23,"parameterSlots":0,"returnSlots":0},"@_265":{"entryPoint":null,"id":265,"parameterSlots":2,"returnSlots":0},"@_msgSender_966":{"entryPoint":318,"id":966,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_111":{"entryPoint":326,"id":111,"parameterSlots":1,"returnSlots":0},"abi_decode_available_length_t_bytes_memory_ptr_fromMemory":{"entryPoint":1619,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_bytes_memory_ptr_fromMemory":{"entryPoint":1694,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes_memory_ptr_fromMemory":{"entryPoint":1745,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":1490,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":1389,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_bytes_memory_ptr":{"entryPoint":1521,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_bytes_storage":{"entryPoint":682,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":1826,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":2158,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":524,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_t_bytes_storage":{"entryPoint":1003,"id":null,"parameterSlots":3,"returnSlots":0},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":1847,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_uint256":{"entryPoint":818,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":964,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_uint256_to_t_uint256":{"entryPoint":838,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_bytes_memory_ptr_to_t_bytes_storage":{"entryPoint":2169,"id":null,"parameterSlots":2,"returnSlots":0},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_bytes_storage":{"entryPoint":1158,"id":null,"parameterSlots":2,"returnSlots":0},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":1927,"id":null,"parameterSlots":2,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":1575,"id":null,"parameterSlots":3,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":703,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":629,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":1128,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":1436,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":828,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":1096,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x22":{"entryPoint":582,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":535,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":878,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":1409,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":1414,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":1404,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":1399,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":1419,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":719,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":1083,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":936,"id":null,"parameterSlots":2,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":732,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":888,"id":null,"parameterSlots":3,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":931,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:11828:9","statements":[{"body":{"nodeType":"YulBlock","src":"66:40:9","statements":[{"nodeType":"YulAssignment","src":"77:22:9","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"93:5:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"87:5:9"},"nodeType":"YulFunctionCall","src":"87:12:9"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"77:6:9"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"49:5:9","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"59:6:9","type":""}],"src":"7:99:9"},{"body":{"nodeType":"YulBlock","src":"140:152:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"157:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"160:77:9","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"150:6:9"},"nodeType":"YulFunctionCall","src":"150:88:9"},"nodeType":"YulExpressionStatement","src":"150:88:9"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"254:1:9","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"257:4:9","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"247:6:9"},"nodeType":"YulFunctionCall","src":"247:15:9"},"nodeType":"YulExpressionStatement","src":"247:15:9"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"278:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"281:4:9","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"271:6:9"},"nodeType":"YulFunctionCall","src":"271:15:9"},"nodeType":"YulExpressionStatement","src":"271:15:9"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"112:180:9"},{"body":{"nodeType":"YulBlock","src":"326:152:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"343:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"346:77:9","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"336:6:9"},"nodeType":"YulFunctionCall","src":"336:88:9"},"nodeType":"YulExpressionStatement","src":"336:88:9"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"440:1:9","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"443:4:9","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"433:6:9"},"nodeType":"YulFunctionCall","src":"433:15:9"},"nodeType":"YulExpressionStatement","src":"433:15:9"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"464:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"467:4:9","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"457:6:9"},"nodeType":"YulFunctionCall","src":"457:15:9"},"nodeType":"YulExpressionStatement","src":"457:15:9"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"298:180:9"},{"body":{"nodeType":"YulBlock","src":"535:269:9","statements":[{"nodeType":"YulAssignment","src":"545:22:9","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"559:4:9"},{"kind":"number","nodeType":"YulLiteral","src":"565:1:9","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"555:3:9"},"nodeType":"YulFunctionCall","src":"555:12:9"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"545:6:9"}]},{"nodeType":"YulVariableDeclaration","src":"576:38:9","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"606:4:9"},{"kind":"number","nodeType":"YulLiteral","src":"612:1:9","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"602:3:9"},"nodeType":"YulFunctionCall","src":"602:12:9"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"580:18:9","type":""}]},{"body":{"nodeType":"YulBlock","src":"653:51:9","statements":[{"nodeType":"YulAssignment","src":"667:27:9","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"681:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"689:4:9","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"677:3:9"},"nodeType":"YulFunctionCall","src":"677:17:9"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"667:6:9"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"633:18:9"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"626:6:9"},"nodeType":"YulFunctionCall","src":"626:26:9"},"nodeType":"YulIf","src":"623:81:9"},{"body":{"nodeType":"YulBlock","src":"756:42:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"770:16:9"},"nodeType":"YulFunctionCall","src":"770:18:9"},"nodeType":"YulExpressionStatement","src":"770:18:9"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"720:18:9"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"743:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"751:2:9","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"740:2:9"},"nodeType":"YulFunctionCall","src":"740:14:9"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"717:2:9"},"nodeType":"YulFunctionCall","src":"717:38:9"},"nodeType":"YulIf","src":"714:84:9"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"519:4:9","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"528:6:9","type":""}],"src":"484:320:9"},{"body":{"nodeType":"YulBlock","src":"863:87:9","statements":[{"nodeType":"YulAssignment","src":"873:11:9","value":{"name":"ptr","nodeType":"YulIdentifier","src":"881:3:9"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"873:4:9"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"901:1:9","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"904:3:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"894:6:9"},"nodeType":"YulFunctionCall","src":"894:14:9"},"nodeType":"YulExpressionStatement","src":"894:14:9"},{"nodeType":"YulAssignment","src":"917:26:9","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"935:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"938:4:9","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"925:9:9"},"nodeType":"YulFunctionCall","src":"925:18:9"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"917:4:9"}]}]},"name":"array_dataslot_t_bytes_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"850:3:9","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"858:4:9","type":""}],"src":"810:140:9"},{"body":{"nodeType":"YulBlock","src":"1000:49:9","statements":[{"nodeType":"YulAssignment","src":"1010:33:9","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1028:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"1035:2:9","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1024:3:9"},"nodeType":"YulFunctionCall","src":"1024:14:9"},{"kind":"number","nodeType":"YulLiteral","src":"1040:2:9","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"1020:3:9"},"nodeType":"YulFunctionCall","src":"1020:23:9"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"1010:6:9"}]}]},"name":"divide_by_32_ceil","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"983:5:9","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"993:6:9","type":""}],"src":"956:93:9"},{"body":{"nodeType":"YulBlock","src":"1108:54:9","statements":[{"nodeType":"YulAssignment","src":"1118:37:9","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"1143:4:9"},{"name":"value","nodeType":"YulIdentifier","src":"1149:5:9"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1139:3:9"},"nodeType":"YulFunctionCall","src":"1139:16:9"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"1118:8:9"}]}]},"name":"shift_left_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"1083:4:9","type":""},{"name":"value","nodeType":"YulTypedName","src":"1089:5:9","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"1099:8:9","type":""}],"src":"1055:107:9"},{"body":{"nodeType":"YulBlock","src":"1244:317:9","statements":[{"nodeType":"YulVariableDeclaration","src":"1254:35:9","value":{"arguments":[{"name":"shiftBytes","nodeType":"YulIdentifier","src":"1275:10:9"},{"kind":"number","nodeType":"YulLiteral","src":"1287:1:9","type":"","value":"8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"1271:3:9"},"nodeType":"YulFunctionCall","src":"1271:18:9"},"variables":[{"name":"shiftBits","nodeType":"YulTypedName","src":"1258:9:9","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1298:109:9","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"1329:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"1340:66:9","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"1310:18:9"},"nodeType":"YulFunctionCall","src":"1310:97:9"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"1302:4:9","type":""}]},{"nodeType":"YulAssignment","src":"1416:51:9","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"1447:9:9"},{"name":"toInsert","nodeType":"YulIdentifier","src":"1458:8:9"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"1428:18:9"},"nodeType":"YulFunctionCall","src":"1428:39:9"},"variableNames":[{"name":"toInsert","nodeType":"YulIdentifier","src":"1416:8:9"}]},{"nodeType":"YulAssignment","src":"1476:30:9","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1489:5:9"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"1500:4:9"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1496:3:9"},"nodeType":"YulFunctionCall","src":"1496:9:9"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1485:3:9"},"nodeType":"YulFunctionCall","src":"1485:21:9"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1476:5:9"}]},{"nodeType":"YulAssignment","src":"1515:40:9","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1528:5:9"},{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"1539:8:9"},{"name":"mask","nodeType":"YulIdentifier","src":"1549:4:9"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1535:3:9"},"nodeType":"YulFunctionCall","src":"1535:19:9"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1525:2:9"},"nodeType":"YulFunctionCall","src":"1525:30:9"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"1515:6:9"}]}]},"name":"update_byte_slice_dynamic32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1205:5:9","type":""},{"name":"shiftBytes","nodeType":"YulTypedName","src":"1212:10:9","type":""},{"name":"toInsert","nodeType":"YulTypedName","src":"1224:8:9","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"1237:6:9","type":""}],"src":"1168:393:9"},{"body":{"nodeType":"YulBlock","src":"1612:32:9","statements":[{"nodeType":"YulAssignment","src":"1622:16:9","value":{"name":"value","nodeType":"YulIdentifier","src":"1633:5:9"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1622:7:9"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1594:5:9","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1604:7:9","type":""}],"src":"1567:77:9"},{"body":{"nodeType":"YulBlock","src":"1682:28:9","statements":[{"nodeType":"YulAssignment","src":"1692:12:9","value":{"name":"value","nodeType":"YulIdentifier","src":"1699:5:9"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"1692:3:9"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1668:5:9","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"1678:3:9","type":""}],"src":"1650:60:9"},{"body":{"nodeType":"YulBlock","src":"1776:82:9","statements":[{"nodeType":"YulAssignment","src":"1786:66:9","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1844:5:9"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"1826:17:9"},"nodeType":"YulFunctionCall","src":"1826:24:9"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"1817:8:9"},"nodeType":"YulFunctionCall","src":"1817:34:9"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"1799:17:9"},"nodeType":"YulFunctionCall","src":"1799:53:9"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"1786:9:9"}]}]},"name":"convert_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1756:5:9","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"1766:9:9","type":""}],"src":"1716:142:9"},{"body":{"nodeType":"YulBlock","src":"1911:28:9","statements":[{"nodeType":"YulAssignment","src":"1921:12:9","value":{"name":"value","nodeType":"YulIdentifier","src":"1928:5:9"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"1921:3:9"}]}]},"name":"prepare_store_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1897:5:9","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"1907:3:9","type":""}],"src":"1864:75:9"},{"body":{"nodeType":"YulBlock","src":"2021:193:9","statements":[{"nodeType":"YulVariableDeclaration","src":"2031:63:9","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"2086:7:9"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"2055:30:9"},"nodeType":"YulFunctionCall","src":"2055:39:9"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"2035:16:9","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2110:4:9"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2150:4:9"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"2144:5:9"},"nodeType":"YulFunctionCall","src":"2144:11:9"},{"name":"offset","nodeType":"YulIdentifier","src":"2157:6:9"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"2189:16:9"}],"functionName":{"name":"prepare_store_t_uint256","nodeType":"YulIdentifier","src":"2165:23:9"},"nodeType":"YulFunctionCall","src":"2165:41:9"}],"functionName":{"name":"update_byte_slice_dynamic32","nodeType":"YulIdentifier","src":"2116:27:9"},"nodeType":"YulFunctionCall","src":"2116:91:9"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2103:6:9"},"nodeType":"YulFunctionCall","src":"2103:105:9"},"nodeType":"YulExpressionStatement","src":"2103:105:9"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"1998:4:9","type":""},{"name":"offset","nodeType":"YulTypedName","src":"2004:6:9","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"2012:7:9","type":""}],"src":"1945:269:9"},{"body":{"nodeType":"YulBlock","src":"2269:24:9","statements":[{"nodeType":"YulAssignment","src":"2279:8:9","value":{"kind":"number","nodeType":"YulLiteral","src":"2286:1:9","type":"","value":"0"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"2279:3:9"}]}]},"name":"zero_value_for_split_t_uint256","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"2265:3:9","type":""}],"src":"2220:73:9"},{"body":{"nodeType":"YulBlock","src":"2352:136:9","statements":[{"nodeType":"YulVariableDeclaration","src":"2362:46:9","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nodeType":"YulIdentifier","src":"2376:30:9"},"nodeType":"YulFunctionCall","src":"2376:32:9"},"variables":[{"name":"zero_0","nodeType":"YulTypedName","src":"2366:6:9","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2461:4:9"},{"name":"offset","nodeType":"YulIdentifier","src":"2467:6:9"},{"name":"zero_0","nodeType":"YulIdentifier","src":"2475:6:9"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"2417:43:9"},"nodeType":"YulFunctionCall","src":"2417:65:9"},"nodeType":"YulExpressionStatement","src":"2417:65:9"}]},"name":"storage_set_to_zero_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"2338:4:9","type":""},{"name":"offset","nodeType":"YulTypedName","src":"2344:6:9","type":""}],"src":"2299:189:9"},{"body":{"nodeType":"YulBlock","src":"2544:136:9","statements":[{"body":{"nodeType":"YulBlock","src":"2611:63:9","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2655:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"2662:1:9","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nodeType":"YulIdentifier","src":"2625:29:9"},"nodeType":"YulFunctionCall","src":"2625:39:9"},"nodeType":"YulExpressionStatement","src":"2625:39:9"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2564:5:9"},{"name":"end","nodeType":"YulIdentifier","src":"2571:3:9"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2561:2:9"},"nodeType":"YulFunctionCall","src":"2561:14:9"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2576:26:9","statements":[{"nodeType":"YulAssignment","src":"2578:22:9","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2591:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"2598:1:9","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2587:3:9"},"nodeType":"YulFunctionCall","src":"2587:13:9"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"2578:5:9"}]}]},"pre":{"nodeType":"YulBlock","src":"2558:2:9","statements":[]},"src":"2554:120:9"}]},"name":"clear_storage_range_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"2532:5:9","type":""},{"name":"end","nodeType":"YulTypedName","src":"2539:3:9","type":""}],"src":"2494:186:9"},{"body":{"nodeType":"YulBlock","src":"2764:463:9","statements":[{"body":{"nodeType":"YulBlock","src":"2790:430:9","statements":[{"nodeType":"YulVariableDeclaration","src":"2804:53:9","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2851:5:9"}],"functionName":{"name":"array_dataslot_t_bytes_storage","nodeType":"YulIdentifier","src":"2820:30:9"},"nodeType":"YulFunctionCall","src":"2820:37:9"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"2808:8:9","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2870:63:9","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"2893:8:9"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"2921:10:9"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"2903:17:9"},"nodeType":"YulFunctionCall","src":"2903:29:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2889:3:9"},"nodeType":"YulFunctionCall","src":"2889:44:9"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"2874:11:9","type":""}]},{"body":{"nodeType":"YulBlock","src":"3090:27:9","statements":[{"nodeType":"YulAssignment","src":"3092:23:9","value":{"name":"dataArea","nodeType":"YulIdentifier","src":"3107:8:9"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"3092:11:9"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"3074:10:9"},{"kind":"number","nodeType":"YulLiteral","src":"3086:2:9","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3071:2:9"},"nodeType":"YulFunctionCall","src":"3071:18:9"},"nodeType":"YulIf","src":"3068:49:9"},{"expression":{"arguments":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"3159:11:9"},{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"3176:8:9"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"3204:3:9"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"3186:17:9"},"nodeType":"YulFunctionCall","src":"3186:22:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3172:3:9"},"nodeType":"YulFunctionCall","src":"3172:37:9"}],"functionName":{"name":"clear_storage_range_t_bytes1","nodeType":"YulIdentifier","src":"3130:28:9"},"nodeType":"YulFunctionCall","src":"3130:80:9"},"nodeType":"YulExpressionStatement","src":"3130:80:9"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"2781:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"2786:2:9","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2778:2:9"},"nodeType":"YulFunctionCall","src":"2778:11:9"},"nodeType":"YulIf","src":"2775:445:9"}]},"name":"clean_up_bytearray_end_slots_t_bytes_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"2740:5:9","type":""},{"name":"len","nodeType":"YulTypedName","src":"2747:3:9","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"2752:10:9","type":""}],"src":"2686:541:9"},{"body":{"nodeType":"YulBlock","src":"3296:54:9","statements":[{"nodeType":"YulAssignment","src":"3306:37:9","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"3331:4:9"},{"name":"value","nodeType":"YulIdentifier","src":"3337:5:9"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"3327:3:9"},"nodeType":"YulFunctionCall","src":"3327:16:9"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"3306:8:9"}]}]},"name":"shift_right_unsigned_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"3271:4:9","type":""},{"name":"value","nodeType":"YulTypedName","src":"3277:5:9","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"3287:8:9","type":""}],"src":"3233:117:9"},{"body":{"nodeType":"YulBlock","src":"3407:118:9","statements":[{"nodeType":"YulVariableDeclaration","src":"3417:68:9","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3466:1:9","type":"","value":"8"},{"name":"bytes","nodeType":"YulIdentifier","src":"3469:5:9"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"3462:3:9"},"nodeType":"YulFunctionCall","src":"3462:13:9"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3481:1:9","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3477:3:9"},"nodeType":"YulFunctionCall","src":"3477:6:9"}],"functionName":{"name":"shift_right_unsigned_dynamic","nodeType":"YulIdentifier","src":"3433:28:9"},"nodeType":"YulFunctionCall","src":"3433:51:9"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3429:3:9"},"nodeType":"YulFunctionCall","src":"3429:56:9"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"3421:4:9","type":""}]},{"nodeType":"YulAssignment","src":"3494:25:9","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3508:4:9"},{"name":"mask","nodeType":"YulIdentifier","src":"3514:4:9"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3504:3:9"},"nodeType":"YulFunctionCall","src":"3504:15:9"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3494:6:9"}]}]},"name":"mask_bytes_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"3384:4:9","type":""},{"name":"bytes","nodeType":"YulTypedName","src":"3390:5:9","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"3400:6:9","type":""}],"src":"3356:169:9"},{"body":{"nodeType":"YulBlock","src":"3611:214:9","statements":[{"nodeType":"YulAssignment","src":"3744:37:9","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3771:4:9"},{"name":"len","nodeType":"YulIdentifier","src":"3777:3:9"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"3752:18:9"},"nodeType":"YulFunctionCall","src":"3752:29:9"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"3744:4:9"}]},{"nodeType":"YulAssignment","src":"3790:29:9","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3801:4:9"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3811:1:9","type":"","value":"2"},{"name":"len","nodeType":"YulIdentifier","src":"3814:3:9"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"3807:3:9"},"nodeType":"YulFunctionCall","src":"3807:11:9"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"3798:2:9"},"nodeType":"YulFunctionCall","src":"3798:21:9"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"3790:4:9"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"3592:4:9","type":""},{"name":"len","nodeType":"YulTypedName","src":"3598:3:9","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"3606:4:9","type":""}],"src":"3530:295:9"},{"body":{"nodeType":"YulBlock","src":"3921:1301:9","statements":[{"nodeType":"YulVariableDeclaration","src":"3932:51:9","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3979:3:9"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"3946:32:9"},"nodeType":"YulFunctionCall","src":"3946:37:9"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"3936:6:9","type":""}]},{"body":{"nodeType":"YulBlock","src":"4068:22:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"4070:16:9"},"nodeType":"YulFunctionCall","src":"4070:18:9"},"nodeType":"YulExpressionStatement","src":"4070:18:9"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"4040:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"4048:18:9","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4037:2:9"},"nodeType":"YulFunctionCall","src":"4037:30:9"},"nodeType":"YulIf","src":"4034:56:9"},{"nodeType":"YulVariableDeclaration","src":"4100:52:9","value":{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4146:4:9"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"4140:5:9"},"nodeType":"YulFunctionCall","src":"4140:11:9"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"4114:25:9"},"nodeType":"YulFunctionCall","src":"4114:38:9"},"variables":[{"name":"oldLen","nodeType":"YulTypedName","src":"4104:6:9","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4244:4:9"},{"name":"oldLen","nodeType":"YulIdentifier","src":"4250:6:9"},{"name":"newLen","nodeType":"YulIdentifier","src":"4258:6:9"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_bytes_storage","nodeType":"YulIdentifier","src":"4199:44:9"},"nodeType":"YulFunctionCall","src":"4199:66:9"},"nodeType":"YulExpressionStatement","src":"4199:66:9"},{"nodeType":"YulVariableDeclaration","src":"4275:18:9","value":{"kind":"number","nodeType":"YulLiteral","src":"4292:1:9","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"4279:9:9","type":""}]},{"nodeType":"YulAssignment","src":"4303:17:9","value":{"kind":"number","nodeType":"YulLiteral","src":"4316:4:9","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"4303:9:9"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"4367:610:9","statements":[{"nodeType":"YulVariableDeclaration","src":"4381:37:9","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"4400:6:9"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4412:4:9","type":"","value":"0x1f"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4408:3:9"},"nodeType":"YulFunctionCall","src":"4408:9:9"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4396:3:9"},"nodeType":"YulFunctionCall","src":"4396:22:9"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"4385:7:9","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4432:50:9","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4477:4:9"}],"functionName":{"name":"array_dataslot_t_bytes_storage","nodeType":"YulIdentifier","src":"4446:30:9"},"nodeType":"YulFunctionCall","src":"4446:36:9"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"4436:6:9","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4495:10:9","value":{"kind":"number","nodeType":"YulLiteral","src":"4504:1:9","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"4499:1:9","type":""}]},{"body":{"nodeType":"YulBlock","src":"4563:163:9","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"4588:6:9"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4606:3:9"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"4611:9:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4602:3:9"},"nodeType":"YulFunctionCall","src":"4602:19:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4596:5:9"},"nodeType":"YulFunctionCall","src":"4596:26:9"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"4581:6:9"},"nodeType":"YulFunctionCall","src":"4581:42:9"},"nodeType":"YulExpressionStatement","src":"4581:42:9"},{"nodeType":"YulAssignment","src":"4640:24:9","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"4654:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"4662:1:9","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4650:3:9"},"nodeType":"YulFunctionCall","src":"4650:14:9"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"4640:6:9"}]},{"nodeType":"YulAssignment","src":"4681:31:9","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"4698:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"4709:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4694:3:9"},"nodeType":"YulFunctionCall","src":"4694:18:9"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"4681:9:9"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4529:1:9"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"4532:7:9"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4526:2:9"},"nodeType":"YulFunctionCall","src":"4526:14:9"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"4541:21:9","statements":[{"nodeType":"YulAssignment","src":"4543:17:9","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4552:1:9"},{"kind":"number","nodeType":"YulLiteral","src":"4555:4:9","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4548:3:9"},"nodeType":"YulFunctionCall","src":"4548:12:9"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"4543:1:9"}]}]},"pre":{"nodeType":"YulBlock","src":"4522:3:9","statements":[]},"src":"4518:208:9"},{"body":{"nodeType":"YulBlock","src":"4762:156:9","statements":[{"nodeType":"YulVariableDeclaration","src":"4780:43:9","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4807:3:9"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"4812:9:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4803:3:9"},"nodeType":"YulFunctionCall","src":"4803:19:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4797:5:9"},"nodeType":"YulFunctionCall","src":"4797:26:9"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"4784:9:9","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"4847:6:9"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"4874:9:9"},{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"4889:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"4897:4:9","type":"","value":"0x1f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4885:3:9"},"nodeType":"YulFunctionCall","src":"4885:17:9"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"4855:18:9"},"nodeType":"YulFunctionCall","src":"4855:48:9"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"4840:6:9"},"nodeType":"YulFunctionCall","src":"4840:64:9"},"nodeType":"YulExpressionStatement","src":"4840:64:9"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"4745:7:9"},{"name":"newLen","nodeType":"YulIdentifier","src":"4754:6:9"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4742:2:9"},"nodeType":"YulFunctionCall","src":"4742:19:9"},"nodeType":"YulIf","src":"4739:179:9"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4938:4:9"},{"arguments":[{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"4952:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"4960:1:9","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"4948:3:9"},"nodeType":"YulFunctionCall","src":"4948:14:9"},{"kind":"number","nodeType":"YulLiteral","src":"4964:1:9","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4944:3:9"},"nodeType":"YulFunctionCall","src":"4944:22:9"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"4931:6:9"},"nodeType":"YulFunctionCall","src":"4931:36:9"},"nodeType":"YulExpressionStatement","src":"4931:36:9"}]},"nodeType":"YulCase","src":"4360:617:9","value":{"kind":"number","nodeType":"YulLiteral","src":"4365:1:9","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"4994:222:9","statements":[{"nodeType":"YulVariableDeclaration","src":"5008:14:9","value":{"kind":"number","nodeType":"YulLiteral","src":"5021:1:9","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"5012:5:9","type":""}]},{"body":{"nodeType":"YulBlock","src":"5045:67:9","statements":[{"nodeType":"YulAssignment","src":"5063:35:9","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5082:3:9"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"5087:9:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5078:3:9"},"nodeType":"YulFunctionCall","src":"5078:19:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5072:5:9"},"nodeType":"YulFunctionCall","src":"5072:26:9"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"5063:5:9"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"5038:6:9"},"nodeType":"YulIf","src":"5035:77:9"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5132:4:9"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5191:5:9"},{"name":"newLen","nodeType":"YulIdentifier","src":"5198:6:9"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"5138:52:9"},"nodeType":"YulFunctionCall","src":"5138:67:9"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"5125:6:9"},"nodeType":"YulFunctionCall","src":"5125:81:9"},"nodeType":"YulExpressionStatement","src":"5125:81:9"}]},"nodeType":"YulCase","src":"4986:230:9","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"4340:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"4348:2:9","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4337:2:9"},"nodeType":"YulFunctionCall","src":"4337:14:9"},"nodeType":"YulSwitch","src":"4330:886:9"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_bytes_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"3910:4:9","type":""},{"name":"src","nodeType":"YulTypedName","src":"3916:3:9","type":""}],"src":"3830:1392:9"},{"body":{"nodeType":"YulBlock","src":"5268:35:9","statements":[{"nodeType":"YulAssignment","src":"5278:19:9","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5294:2:9","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5288:5:9"},"nodeType":"YulFunctionCall","src":"5288:9:9"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"5278:6:9"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"5261:6:9","type":""}],"src":"5228:75:9"},{"body":{"nodeType":"YulBlock","src":"5398:28:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5415:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5418:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5408:6:9"},"nodeType":"YulFunctionCall","src":"5408:12:9"},"nodeType":"YulExpressionStatement","src":"5408:12:9"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"5309:117:9"},{"body":{"nodeType":"YulBlock","src":"5521:28:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5538:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5541:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5531:6:9"},"nodeType":"YulFunctionCall","src":"5531:12:9"},"nodeType":"YulExpressionStatement","src":"5531:12:9"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"5432:117:9"},{"body":{"nodeType":"YulBlock","src":"5644:28:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5661:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5664:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5654:6:9"},"nodeType":"YulFunctionCall","src":"5654:12:9"},"nodeType":"YulExpressionStatement","src":"5654:12:9"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"5555:117:9"},{"body":{"nodeType":"YulBlock","src":"5767:28:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5784:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5787:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5777:6:9"},"nodeType":"YulFunctionCall","src":"5777:12:9"},"nodeType":"YulExpressionStatement","src":"5777:12:9"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"5678:117:9"},{"body":{"nodeType":"YulBlock","src":"5849:54:9","statements":[{"nodeType":"YulAssignment","src":"5859:38:9","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5877:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"5884:2:9","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5873:3:9"},"nodeType":"YulFunctionCall","src":"5873:14:9"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5893:2:9","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"5889:3:9"},"nodeType":"YulFunctionCall","src":"5889:7:9"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5869:3:9"},"nodeType":"YulFunctionCall","src":"5869:28:9"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"5859:6:9"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5832:5:9","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"5842:6:9","type":""}],"src":"5801:102:9"},{"body":{"nodeType":"YulBlock","src":"5952:238:9","statements":[{"nodeType":"YulVariableDeclaration","src":"5962:58:9","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"5984:6:9"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"6014:4:9"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"5992:21:9"},"nodeType":"YulFunctionCall","src":"5992:27:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5980:3:9"},"nodeType":"YulFunctionCall","src":"5980:40:9"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"5966:10:9","type":""}]},{"body":{"nodeType":"YulBlock","src":"6131:22:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"6133:16:9"},"nodeType":"YulFunctionCall","src":"6133:18:9"},"nodeType":"YulExpressionStatement","src":"6133:18:9"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"6074:10:9"},{"kind":"number","nodeType":"YulLiteral","src":"6086:18:9","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6071:2:9"},"nodeType":"YulFunctionCall","src":"6071:34:9"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"6110:10:9"},{"name":"memPtr","nodeType":"YulIdentifier","src":"6122:6:9"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6107:2:9"},"nodeType":"YulFunctionCall","src":"6107:22:9"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"6068:2:9"},"nodeType":"YulFunctionCall","src":"6068:62:9"},"nodeType":"YulIf","src":"6065:88:9"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6169:2:9","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"6173:10:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6162:6:9"},"nodeType":"YulFunctionCall","src":"6162:22:9"},"nodeType":"YulExpressionStatement","src":"6162:22:9"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"5938:6:9","type":""},{"name":"size","nodeType":"YulTypedName","src":"5946:4:9","type":""}],"src":"5909:281:9"},{"body":{"nodeType":"YulBlock","src":"6237:88:9","statements":[{"nodeType":"YulAssignment","src":"6247:30:9","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"6257:18:9"},"nodeType":"YulFunctionCall","src":"6257:20:9"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6247:6:9"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6306:6:9"},{"name":"size","nodeType":"YulIdentifier","src":"6314:4:9"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"6286:19:9"},"nodeType":"YulFunctionCall","src":"6286:33:9"},"nodeType":"YulExpressionStatement","src":"6286:33:9"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"6221:4:9","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"6230:6:9","type":""}],"src":"6196:129:9"},{"body":{"nodeType":"YulBlock","src":"6397:241:9","statements":[{"body":{"nodeType":"YulBlock","src":"6502:22:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"6504:16:9"},"nodeType":"YulFunctionCall","src":"6504:18:9"},"nodeType":"YulExpressionStatement","src":"6504:18:9"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6474:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"6482:18:9","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6471:2:9"},"nodeType":"YulFunctionCall","src":"6471:30:9"},"nodeType":"YulIf","src":"6468:56:9"},{"nodeType":"YulAssignment","src":"6534:37:9","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6564:6:9"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"6542:21:9"},"nodeType":"YulFunctionCall","src":"6542:29:9"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"6534:4:9"}]},{"nodeType":"YulAssignment","src":"6608:23:9","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"6620:4:9"},{"kind":"number","nodeType":"YulLiteral","src":"6626:4:9","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6616:3:9"},"nodeType":"YulFunctionCall","src":"6616:15:9"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"6608:4:9"}]}]},"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"6381:6:9","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"6392:4:9","type":""}],"src":"6331:307:9"},{"body":{"nodeType":"YulBlock","src":"6706:184:9","statements":[{"nodeType":"YulVariableDeclaration","src":"6716:10:9","value":{"kind":"number","nodeType":"YulLiteral","src":"6725:1:9","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"6720:1:9","type":""}]},{"body":{"nodeType":"YulBlock","src":"6785:63:9","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"6810:3:9"},{"name":"i","nodeType":"YulIdentifier","src":"6815:1:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6806:3:9"},"nodeType":"YulFunctionCall","src":"6806:11:9"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"6829:3:9"},{"name":"i","nodeType":"YulIdentifier","src":"6834:1:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6825:3:9"},"nodeType":"YulFunctionCall","src":"6825:11:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6819:5:9"},"nodeType":"YulFunctionCall","src":"6819:18:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6799:6:9"},"nodeType":"YulFunctionCall","src":"6799:39:9"},"nodeType":"YulExpressionStatement","src":"6799:39:9"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"6746:1:9"},{"name":"length","nodeType":"YulIdentifier","src":"6749:6:9"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6743:2:9"},"nodeType":"YulFunctionCall","src":"6743:13:9"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"6757:19:9","statements":[{"nodeType":"YulAssignment","src":"6759:15:9","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"6768:1:9"},{"kind":"number","nodeType":"YulLiteral","src":"6771:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6764:3:9"},"nodeType":"YulFunctionCall","src":"6764:10:9"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"6759:1:9"}]}]},"pre":{"nodeType":"YulBlock","src":"6739:3:9","statements":[]},"src":"6735:113:9"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"6868:3:9"},{"name":"length","nodeType":"YulIdentifier","src":"6873:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6864:3:9"},"nodeType":"YulFunctionCall","src":"6864:16:9"},{"kind":"number","nodeType":"YulLiteral","src":"6882:1:9","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6857:6:9"},"nodeType":"YulFunctionCall","src":"6857:27:9"},"nodeType":"YulExpressionStatement","src":"6857:27:9"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"6688:3:9","type":""},{"name":"dst","nodeType":"YulTypedName","src":"6693:3:9","type":""},{"name":"length","nodeType":"YulTypedName","src":"6698:6:9","type":""}],"src":"6644:246:9"},{"body":{"nodeType":"YulBlock","src":"6990:338:9","statements":[{"nodeType":"YulAssignment","src":"7000:74:9","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7066:6:9"}],"functionName":{"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"7025:40:9"},"nodeType":"YulFunctionCall","src":"7025:48:9"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"7009:15:9"},"nodeType":"YulFunctionCall","src":"7009:65:9"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"7000:5:9"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"7090:5:9"},{"name":"length","nodeType":"YulIdentifier","src":"7097:6:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7083:6:9"},"nodeType":"YulFunctionCall","src":"7083:21:9"},"nodeType":"YulExpressionStatement","src":"7083:21:9"},{"nodeType":"YulVariableDeclaration","src":"7113:27:9","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"7128:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"7135:4:9","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7124:3:9"},"nodeType":"YulFunctionCall","src":"7124:16:9"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"7117:3:9","type":""}]},{"body":{"nodeType":"YulBlock","src":"7178:83:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"7180:77:9"},"nodeType":"YulFunctionCall","src":"7180:79:9"},"nodeType":"YulExpressionStatement","src":"7180:79:9"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7159:3:9"},{"name":"length","nodeType":"YulIdentifier","src":"7164:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7155:3:9"},"nodeType":"YulFunctionCall","src":"7155:16:9"},{"name":"end","nodeType":"YulIdentifier","src":"7173:3:9"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7152:2:9"},"nodeType":"YulFunctionCall","src":"7152:25:9"},"nodeType":"YulIf","src":"7149:112:9"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7305:3:9"},{"name":"dst","nodeType":"YulIdentifier","src":"7310:3:9"},{"name":"length","nodeType":"YulIdentifier","src":"7315:6:9"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"7270:34:9"},"nodeType":"YulFunctionCall","src":"7270:52:9"},"nodeType":"YulExpressionStatement","src":"7270:52:9"}]},"name":"abi_decode_available_length_t_bytes_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"6963:3:9","type":""},{"name":"length","nodeType":"YulTypedName","src":"6968:6:9","type":""},{"name":"end","nodeType":"YulTypedName","src":"6976:3:9","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"6984:5:9","type":""}],"src":"6896:432:9"},{"body":{"nodeType":"YulBlock","src":"7419:281:9","statements":[{"body":{"nodeType":"YulBlock","src":"7468:83:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"7470:77:9"},"nodeType":"YulFunctionCall","src":"7470:79:9"},"nodeType":"YulExpressionStatement","src":"7470:79:9"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7447:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"7455:4:9","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7443:3:9"},"nodeType":"YulFunctionCall","src":"7443:17:9"},{"name":"end","nodeType":"YulIdentifier","src":"7462:3:9"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7439:3:9"},"nodeType":"YulFunctionCall","src":"7439:27:9"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7432:6:9"},"nodeType":"YulFunctionCall","src":"7432:35:9"},"nodeType":"YulIf","src":"7429:122:9"},{"nodeType":"YulVariableDeclaration","src":"7560:27:9","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7580:6:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7574:5:9"},"nodeType":"YulFunctionCall","src":"7574:13:9"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"7564:6:9","type":""}]},{"nodeType":"YulAssignment","src":"7596:98:9","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7667:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"7675:4:9","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7663:3:9"},"nodeType":"YulFunctionCall","src":"7663:17:9"},{"name":"length","nodeType":"YulIdentifier","src":"7682:6:9"},{"name":"end","nodeType":"YulIdentifier","src":"7690:3:9"}],"functionName":{"name":"abi_decode_available_length_t_bytes_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"7605:57:9"},"nodeType":"YulFunctionCall","src":"7605:89:9"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"7596:5:9"}]}]},"name":"abi_decode_t_bytes_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"7397:6:9","type":""},{"name":"end","nodeType":"YulTypedName","src":"7405:3:9","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"7413:5:9","type":""}],"src":"7347:353:9"},{"body":{"nodeType":"YulBlock","src":"7792:436:9","statements":[{"body":{"nodeType":"YulBlock","src":"7838:83:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"7840:77:9"},"nodeType":"YulFunctionCall","src":"7840:79:9"},"nodeType":"YulExpressionStatement","src":"7840:79:9"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7813:7:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"7822:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7809:3:9"},"nodeType":"YulFunctionCall","src":"7809:23:9"},{"kind":"number","nodeType":"YulLiteral","src":"7834:2:9","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7805:3:9"},"nodeType":"YulFunctionCall","src":"7805:32:9"},"nodeType":"YulIf","src":"7802:119:9"},{"nodeType":"YulBlock","src":"7931:290:9","statements":[{"nodeType":"YulVariableDeclaration","src":"7946:38:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7970:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"7981:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7966:3:9"},"nodeType":"YulFunctionCall","src":"7966:17:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7960:5:9"},"nodeType":"YulFunctionCall","src":"7960:24:9"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7950:6:9","type":""}]},{"body":{"nodeType":"YulBlock","src":"8031:83:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"8033:77:9"},"nodeType":"YulFunctionCall","src":"8033:79:9"},"nodeType":"YulExpressionStatement","src":"8033:79:9"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8003:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"8011:18:9","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8000:2:9"},"nodeType":"YulFunctionCall","src":"8000:30:9"},"nodeType":"YulIf","src":"7997:117:9"},{"nodeType":"YulAssignment","src":"8128:83:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8183:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"8194:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8179:3:9"},"nodeType":"YulFunctionCall","src":"8179:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8203:7:9"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"8138:40:9"},"nodeType":"YulFunctionCall","src":"8138:73:9"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"8128:6:9"}]}]}]},"name":"abi_decode_tuple_t_bytes_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7762:9:9","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7773:7:9","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7785:6:9","type":""}],"src":"7706:522:9"},{"body":{"nodeType":"YulBlock","src":"8288:87:9","statements":[{"nodeType":"YulAssignment","src":"8298:11:9","value":{"name":"ptr","nodeType":"YulIdentifier","src":"8306:3:9"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"8298:4:9"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8326:1:9","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"8329:3:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8319:6:9"},"nodeType":"YulFunctionCall","src":"8319:14:9"},"nodeType":"YulExpressionStatement","src":"8319:14:9"},{"nodeType":"YulAssignment","src":"8342:26:9","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8360:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8363:4:9","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"8350:9:9"},"nodeType":"YulFunctionCall","src":"8350:18:9"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"8342:4:9"}]}]},"name":"array_dataslot_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"8275:3:9","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"8283:4:9","type":""}],"src":"8234:141:9"},{"body":{"nodeType":"YulBlock","src":"8460:464:9","statements":[{"body":{"nodeType":"YulBlock","src":"8486:431:9","statements":[{"nodeType":"YulVariableDeclaration","src":"8500:54:9","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"8548:5:9"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"8516:31:9"},"nodeType":"YulFunctionCall","src":"8516:38:9"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"8504:8:9","type":""}]},{"nodeType":"YulVariableDeclaration","src":"8567:63:9","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"8590:8:9"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"8618:10:9"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"8600:17:9"},"nodeType":"YulFunctionCall","src":"8600:29:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8586:3:9"},"nodeType":"YulFunctionCall","src":"8586:44:9"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"8571:11:9","type":""}]},{"body":{"nodeType":"YulBlock","src":"8787:27:9","statements":[{"nodeType":"YulAssignment","src":"8789:23:9","value":{"name":"dataArea","nodeType":"YulIdentifier","src":"8804:8:9"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"8789:11:9"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"8771:10:9"},{"kind":"number","nodeType":"YulLiteral","src":"8783:2:9","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8768:2:9"},"nodeType":"YulFunctionCall","src":"8768:18:9"},"nodeType":"YulIf","src":"8765:49:9"},{"expression":{"arguments":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"8856:11:9"},{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"8873:8:9"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"8901:3:9"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"8883:17:9"},"nodeType":"YulFunctionCall","src":"8883:22:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8869:3:9"},"nodeType":"YulFunctionCall","src":"8869:37:9"}],"functionName":{"name":"clear_storage_range_t_bytes1","nodeType":"YulIdentifier","src":"8827:28:9"},"nodeType":"YulFunctionCall","src":"8827:80:9"},"nodeType":"YulExpressionStatement","src":"8827:80:9"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"8477:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"8482:2:9","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8474:2:9"},"nodeType":"YulFunctionCall","src":"8474:11:9"},"nodeType":"YulIf","src":"8471:446:9"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"8436:5:9","type":""},{"name":"len","nodeType":"YulTypedName","src":"8443:3:9","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"8448:10:9","type":""}],"src":"8381:543:9"},{"body":{"nodeType":"YulBlock","src":"9022:1303:9","statements":[{"nodeType":"YulVariableDeclaration","src":"9033:51:9","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"9080:3:9"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"9047:32:9"},"nodeType":"YulFunctionCall","src":"9047:37:9"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"9037:6:9","type":""}]},{"body":{"nodeType":"YulBlock","src":"9169:22:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"9171:16:9"},"nodeType":"YulFunctionCall","src":"9171:18:9"},"nodeType":"YulExpressionStatement","src":"9171:18:9"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"9141:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"9149:18:9","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9138:2:9"},"nodeType":"YulFunctionCall","src":"9138:30:9"},"nodeType":"YulIf","src":"9135:56:9"},{"nodeType":"YulVariableDeclaration","src":"9201:52:9","value":{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"9247:4:9"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"9241:5:9"},"nodeType":"YulFunctionCall","src":"9241:11:9"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"9215:25:9"},"nodeType":"YulFunctionCall","src":"9215:38:9"},"variables":[{"name":"oldLen","nodeType":"YulTypedName","src":"9205:6:9","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"9346:4:9"},{"name":"oldLen","nodeType":"YulIdentifier","src":"9352:6:9"},{"name":"newLen","nodeType":"YulIdentifier","src":"9360:6:9"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulIdentifier","src":"9300:45:9"},"nodeType":"YulFunctionCall","src":"9300:67:9"},"nodeType":"YulExpressionStatement","src":"9300:67:9"},{"nodeType":"YulVariableDeclaration","src":"9377:18:9","value":{"kind":"number","nodeType":"YulLiteral","src":"9394:1:9","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"9381:9:9","type":""}]},{"nodeType":"YulAssignment","src":"9405:17:9","value":{"kind":"number","nodeType":"YulLiteral","src":"9418:4:9","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"9405:9:9"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"9469:611:9","statements":[{"nodeType":"YulVariableDeclaration","src":"9483:37:9","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"9502:6:9"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9514:4:9","type":"","value":"0x1f"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"9510:3:9"},"nodeType":"YulFunctionCall","src":"9510:9:9"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9498:3:9"},"nodeType":"YulFunctionCall","src":"9498:22:9"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"9487:7:9","type":""}]},{"nodeType":"YulVariableDeclaration","src":"9534:51:9","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"9580:4:9"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"9548:31:9"},"nodeType":"YulFunctionCall","src":"9548:37:9"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"9538:6:9","type":""}]},{"nodeType":"YulVariableDeclaration","src":"9598:10:9","value":{"kind":"number","nodeType":"YulLiteral","src":"9607:1:9","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"9602:1:9","type":""}]},{"body":{"nodeType":"YulBlock","src":"9666:163:9","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"9691:6:9"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"9709:3:9"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"9714:9:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9705:3:9"},"nodeType":"YulFunctionCall","src":"9705:19:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9699:5:9"},"nodeType":"YulFunctionCall","src":"9699:26:9"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"9684:6:9"},"nodeType":"YulFunctionCall","src":"9684:42:9"},"nodeType":"YulExpressionStatement","src":"9684:42:9"},{"nodeType":"YulAssignment","src":"9743:24:9","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"9757:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"9765:1:9","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9753:3:9"},"nodeType":"YulFunctionCall","src":"9753:14:9"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"9743:6:9"}]},{"nodeType":"YulAssignment","src":"9784:31:9","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"9801:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"9812:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9797:3:9"},"nodeType":"YulFunctionCall","src":"9797:18:9"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"9784:9:9"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"9632:1:9"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"9635:7:9"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"9629:2:9"},"nodeType":"YulFunctionCall","src":"9629:14:9"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"9644:21:9","statements":[{"nodeType":"YulAssignment","src":"9646:17:9","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"9655:1:9"},{"kind":"number","nodeType":"YulLiteral","src":"9658:4:9","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9651:3:9"},"nodeType":"YulFunctionCall","src":"9651:12:9"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"9646:1:9"}]}]},"pre":{"nodeType":"YulBlock","src":"9625:3:9","statements":[]},"src":"9621:208:9"},{"body":{"nodeType":"YulBlock","src":"9865:156:9","statements":[{"nodeType":"YulVariableDeclaration","src":"9883:43:9","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"9910:3:9"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"9915:9:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9906:3:9"},"nodeType":"YulFunctionCall","src":"9906:19:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9900:5:9"},"nodeType":"YulFunctionCall","src":"9900:26:9"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"9887:9:9","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"9950:6:9"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"9977:9:9"},{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"9992:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"10000:4:9","type":"","value":"0x1f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9988:3:9"},"nodeType":"YulFunctionCall","src":"9988:17:9"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"9958:18:9"},"nodeType":"YulFunctionCall","src":"9958:48:9"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"9943:6:9"},"nodeType":"YulFunctionCall","src":"9943:64:9"},"nodeType":"YulExpressionStatement","src":"9943:64:9"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"9848:7:9"},{"name":"newLen","nodeType":"YulIdentifier","src":"9857:6:9"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"9845:2:9"},"nodeType":"YulFunctionCall","src":"9845:19:9"},"nodeType":"YulIf","src":"9842:179:9"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"10041:4:9"},{"arguments":[{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"10055:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"10063:1:9","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"10051:3:9"},"nodeType":"YulFunctionCall","src":"10051:14:9"},{"kind":"number","nodeType":"YulLiteral","src":"10067:1:9","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10047:3:9"},"nodeType":"YulFunctionCall","src":"10047:22:9"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"10034:6:9"},"nodeType":"YulFunctionCall","src":"10034:36:9"},"nodeType":"YulExpressionStatement","src":"10034:36:9"}]},"nodeType":"YulCase","src":"9462:618:9","value":{"kind":"number","nodeType":"YulLiteral","src":"9467:1:9","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"10097:222:9","statements":[{"nodeType":"YulVariableDeclaration","src":"10111:14:9","value":{"kind":"number","nodeType":"YulLiteral","src":"10124:1:9","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"10115:5:9","type":""}]},{"body":{"nodeType":"YulBlock","src":"10148:67:9","statements":[{"nodeType":"YulAssignment","src":"10166:35:9","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"10185:3:9"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"10190:9:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10181:3:9"},"nodeType":"YulFunctionCall","src":"10181:19:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10175:5:9"},"nodeType":"YulFunctionCall","src":"10175:26:9"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"10166:5:9"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"10141:6:9"},"nodeType":"YulIf","src":"10138:77:9"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"10235:4:9"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10294:5:9"},{"name":"newLen","nodeType":"YulIdentifier","src":"10301:6:9"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"10241:52:9"},"nodeType":"YulFunctionCall","src":"10241:67:9"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"10228:6:9"},"nodeType":"YulFunctionCall","src":"10228:81:9"},"nodeType":"YulExpressionStatement","src":"10228:81:9"}]},"nodeType":"YulCase","src":"10089:230:9","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"9442:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"9450:2:9","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9439:2:9"},"nodeType":"YulFunctionCall","src":"9439:14:9"},"nodeType":"YulSwitch","src":"9432:887:9"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"9011:4:9","type":""},{"name":"src","nodeType":"YulTypedName","src":"9017:3:9","type":""}],"src":"8930:1395:9"},{"body":{"nodeType":"YulBlock","src":"10389:40:9","statements":[{"nodeType":"YulAssignment","src":"10400:22:9","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10416:5:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10410:5:9"},"nodeType":"YulFunctionCall","src":"10410:12:9"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"10400:6:9"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10372:5:9","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"10382:6:9","type":""}],"src":"10331:98:9"},{"body":{"nodeType":"YulBlock","src":"10525:1300:9","statements":[{"nodeType":"YulVariableDeclaration","src":"10536:50:9","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"10582:3:9"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"10550:31:9"},"nodeType":"YulFunctionCall","src":"10550:36:9"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"10540:6:9","type":""}]},{"body":{"nodeType":"YulBlock","src":"10671:22:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"10673:16:9"},"nodeType":"YulFunctionCall","src":"10673:18:9"},"nodeType":"YulExpressionStatement","src":"10673:18:9"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"10643:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"10651:18:9","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10640:2:9"},"nodeType":"YulFunctionCall","src":"10640:30:9"},"nodeType":"YulIf","src":"10637:56:9"},{"nodeType":"YulVariableDeclaration","src":"10703:52:9","value":{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"10749:4:9"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"10743:5:9"},"nodeType":"YulFunctionCall","src":"10743:11:9"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"10717:25:9"},"nodeType":"YulFunctionCall","src":"10717:38:9"},"variables":[{"name":"oldLen","nodeType":"YulTypedName","src":"10707:6:9","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"10847:4:9"},{"name":"oldLen","nodeType":"YulIdentifier","src":"10853:6:9"},{"name":"newLen","nodeType":"YulIdentifier","src":"10861:6:9"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_bytes_storage","nodeType":"YulIdentifier","src":"10802:44:9"},"nodeType":"YulFunctionCall","src":"10802:66:9"},"nodeType":"YulExpressionStatement","src":"10802:66:9"},{"nodeType":"YulVariableDeclaration","src":"10878:18:9","value":{"kind":"number","nodeType":"YulLiteral","src":"10895:1:9","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"10882:9:9","type":""}]},{"nodeType":"YulAssignment","src":"10906:17:9","value":{"kind":"number","nodeType":"YulLiteral","src":"10919:4:9","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"10906:9:9"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"10970:610:9","statements":[{"nodeType":"YulVariableDeclaration","src":"10984:37:9","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"11003:6:9"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11015:4:9","type":"","value":"0x1f"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"11011:3:9"},"nodeType":"YulFunctionCall","src":"11011:9:9"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10999:3:9"},"nodeType":"YulFunctionCall","src":"10999:22:9"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"10988:7:9","type":""}]},{"nodeType":"YulVariableDeclaration","src":"11035:50:9","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"11080:4:9"}],"functionName":{"name":"array_dataslot_t_bytes_storage","nodeType":"YulIdentifier","src":"11049:30:9"},"nodeType":"YulFunctionCall","src":"11049:36:9"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"11039:6:9","type":""}]},{"nodeType":"YulVariableDeclaration","src":"11098:10:9","value":{"kind":"number","nodeType":"YulLiteral","src":"11107:1:9","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"11102:1:9","type":""}]},{"body":{"nodeType":"YulBlock","src":"11166:163:9","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"11191:6:9"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"11209:3:9"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"11214:9:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11205:3:9"},"nodeType":"YulFunctionCall","src":"11205:19:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11199:5:9"},"nodeType":"YulFunctionCall","src":"11199:26:9"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"11184:6:9"},"nodeType":"YulFunctionCall","src":"11184:42:9"},"nodeType":"YulExpressionStatement","src":"11184:42:9"},{"nodeType":"YulAssignment","src":"11243:24:9","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"11257:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"11265:1:9","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11253:3:9"},"nodeType":"YulFunctionCall","src":"11253:14:9"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"11243:6:9"}]},{"nodeType":"YulAssignment","src":"11284:31:9","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"11301:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"11312:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11297:3:9"},"nodeType":"YulFunctionCall","src":"11297:18:9"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"11284:9:9"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"11132:1:9"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"11135:7:9"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"11129:2:9"},"nodeType":"YulFunctionCall","src":"11129:14:9"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"11144:21:9","statements":[{"nodeType":"YulAssignment","src":"11146:17:9","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"11155:1:9"},{"kind":"number","nodeType":"YulLiteral","src":"11158:4:9","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11151:3:9"},"nodeType":"YulFunctionCall","src":"11151:12:9"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"11146:1:9"}]}]},"pre":{"nodeType":"YulBlock","src":"11125:3:9","statements":[]},"src":"11121:208:9"},{"body":{"nodeType":"YulBlock","src":"11365:156:9","statements":[{"nodeType":"YulVariableDeclaration","src":"11383:43:9","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"11410:3:9"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"11415:9:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11406:3:9"},"nodeType":"YulFunctionCall","src":"11406:19:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11400:5:9"},"nodeType":"YulFunctionCall","src":"11400:26:9"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"11387:9:9","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"11450:6:9"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"11477:9:9"},{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"11492:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"11500:4:9","type":"","value":"0x1f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11488:3:9"},"nodeType":"YulFunctionCall","src":"11488:17:9"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"11458:18:9"},"nodeType":"YulFunctionCall","src":"11458:48:9"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"11443:6:9"},"nodeType":"YulFunctionCall","src":"11443:64:9"},"nodeType":"YulExpressionStatement","src":"11443:64:9"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"11348:7:9"},{"name":"newLen","nodeType":"YulIdentifier","src":"11357:6:9"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"11345:2:9"},"nodeType":"YulFunctionCall","src":"11345:19:9"},"nodeType":"YulIf","src":"11342:179:9"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"11541:4:9"},{"arguments":[{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"11555:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"11563:1:9","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"11551:3:9"},"nodeType":"YulFunctionCall","src":"11551:14:9"},{"kind":"number","nodeType":"YulLiteral","src":"11567:1:9","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11547:3:9"},"nodeType":"YulFunctionCall","src":"11547:22:9"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"11534:6:9"},"nodeType":"YulFunctionCall","src":"11534:36:9"},"nodeType":"YulExpressionStatement","src":"11534:36:9"}]},"nodeType":"YulCase","src":"10963:617:9","value":{"kind":"number","nodeType":"YulLiteral","src":"10968:1:9","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"11597:222:9","statements":[{"nodeType":"YulVariableDeclaration","src":"11611:14:9","value":{"kind":"number","nodeType":"YulLiteral","src":"11624:1:9","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"11615:5:9","type":""}]},{"body":{"nodeType":"YulBlock","src":"11648:67:9","statements":[{"nodeType":"YulAssignment","src":"11666:35:9","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"11685:3:9"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"11690:9:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11681:3:9"},"nodeType":"YulFunctionCall","src":"11681:19:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11675:5:9"},"nodeType":"YulFunctionCall","src":"11675:26:9"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"11666:5:9"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"11641:6:9"},"nodeType":"YulIf","src":"11638:77:9"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"11735:4:9"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11794:5:9"},{"name":"newLen","nodeType":"YulIdentifier","src":"11801:6:9"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"11741:52:9"},"nodeType":"YulFunctionCall","src":"11741:67:9"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"11728:6:9"},"nodeType":"YulFunctionCall","src":"11728:81:9"},"nodeType":"YulExpressionStatement","src":"11728:81:9"}]},"nodeType":"YulCase","src":"11589:230:9","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"10943:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"10951:2:9","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10940:2:9"},"nodeType":"YulFunctionCall","src":"10940:14:9"},"nodeType":"YulSwitch","src":"10933:886:9"}]},"name":"copy_byte_array_to_storage_from_t_bytes_memory_ptr_to_t_bytes_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"10514:4:9","type":""},{"name":"src","nodeType":"YulTypedName","src":"10520:3:9","type":""}],"src":"10435:1390:9"}]},"contents":"{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_bytes_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_bytes_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_bytes_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_bytes_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_bytes_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_bytes_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_bytes_memory_ptr_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_bytes_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function copy_byte_array_to_storage_from_t_bytes_memory_ptr_to_t_bytes_storage(slot, src) {\n\n        let newLen := array_length_t_bytes_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_bytes_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_bytes_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n","id":9,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"6080604052604051806020016040528060008152506006908162000024919062000486565b503480156200003257600080fd5b5060405162003c6c38038062003c6c8339818101604052810190620000589190620006d1565b6040518060400160405280600c81526020017f50726f7661626c652047425000000000000000000000000000000000000000008152506040518060400160405280600481526020017f50474250000000000000000000000000000000000000000000000000000000008152508160039081620000d5919062000787565b508060049081620000e7919062000787565b5050506000600560006101000a81548160ff02191690831515021790555062000125620001196200013e60201b60201c565b6200014660201b60201c565b806006908162000136919062000879565b505062000960565b600033905090565b6000600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200028e57607f821691505b602082108103620002a457620002a362000246565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026200030e7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620002cf565b6200031a8683620002cf565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b600062000367620003616200035b8462000332565b6200033c565b62000332565b9050919050565b6000819050919050565b620003838362000346565b6200039b62000392826200036e565b848454620002dc565b825550505050565b600090565b620003b2620003a3565b620003bf81848462000378565b505050565b5b81811015620003e757620003db600082620003a8565b600181019050620003c5565b5050565b601f82111562000436576200040081620002aa565b6200040b84620002bf565b810160208510156200041b578190505b620004336200042a85620002bf565b830182620003c4565b50505b505050565b600082821c905092915050565b60006200045b600019846008026200043b565b1980831691505092915050565b600062000476838362000448565b9150826002028217905092915050565b62000491826200020c565b67ffffffffffffffff811115620004ad57620004ac62000217565b5b620004b9825462000275565b620004c6828285620003eb565b600060209050601f831160018114620004fe5760008415620004e9578287015190505b620004f5858262000468565b86555062000565565b601f1984166200050e86620002aa565b60005b82811015620005385784890151825560018201915060208501945060208101905062000511565b8683101562000558578489015162000554601f89168262000448565b8355505b6001600288020188555050505b505050505050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b620005a7826200058b565b810181811067ffffffffffffffff82111715620005c957620005c862000217565b5b80604052505050565b6000620005de6200056d565b9050620005ec82826200059c565b919050565b600067ffffffffffffffff8211156200060f576200060e62000217565b5b6200061a826200058b565b9050602081019050919050565b60005b83811015620006475780820151818401526020810190506200062a565b60008484015250505050565b60006200066a6200066484620005f1565b620005d2565b90508281526020810184848401111562000689576200068862000586565b5b6200069684828562000627565b509392505050565b600082601f830112620006b657620006b562000581565b5b8151620006c884826020860162000653565b91505092915050565b600060208284031215620006ea57620006e962000577565b5b600082015167ffffffffffffffff8111156200070b576200070a6200057c565b5b62000719848285016200069e565b91505092915050565b60008190508160005260206000209050919050565b601f82111562000782576200074c8162000722565b6200075784620002bf565b8101602085101562000767578190505b6200077f6200077685620002bf565b830182620003c4565b50505b505050565b62000792826200020c565b67ffffffffffffffff811115620007ae57620007ad62000217565b5b620007ba825462000275565b620007c782828562000737565b600060209050601f831160018114620007ff5760008415620007ea578287015190505b620007f6858262000468565b86555062000866565b601f1984166200080f8662000722565b60005b82811015620008395784890151825560018201915060208501945060208101905062000812565b8683101562000859578489015162000855601f89168262000448565b8355505b6001600288020188555050505b505050505050565b600081519050919050565b62000884826200086e565b67ffffffffffffffff811115620008a0576200089f62000217565b5b620008ac825462000275565b620008b9828285620003eb565b600060209050601f831160018114620008f15760008415620008dc578287015190505b620008e8858262000468565b86555062000958565b601f1984166200090186620002aa565b60005b828110156200092b5784890151825560018201915060208501945060208101905062000904565b868310156200094b578489015162000947601f89168262000448565b8355505b6001600288020188555050505b505050505050565b6132fc80620009706000396000f3fe608060405234801561001057600080fd5b50600436106101da5760003560e01c806363ffab3111610104578063a457c2d7116100a2578063ac5b756d11610071578063ac5b756d1461050f578063cdc1f6d41461052b578063dd62ed3e14610547578063f2fde38b14610577576101da565b8063a457c2d714610477578063a4629533146104a7578063a9059cbb146104c3578063a91d58b4146104f3576101da565b806379cc6790116100de57806379cc6790146104155780638456cb59146104315780638da5cb5b1461043b57806395d89b4114610459576101da565b806363ffab31146103bd57806370a08231146103db578063715018a61461040b576101da565b8063313ce5671161017c5780633f4ba83a1161014b5780633f4ba83a1461035d57806340c10f191461036757806342966c68146103835780635c975abb1461039f576101da565b8063313ce567146102d357806334913f28146102f1578063395093511461030f5780633addb12c1461033f576101da565b806318160ddd116101b857806318160ddd1461024b57806321a7e7e91461026957806323b872dd1461028557806325cb5bc0146102b5576101da565b806306fdde03146101df578063095ea7b3146101fd5780631285cc2a1461022d575b600080fd5b6101e7610593565b6040516101f49190611d5f565b60405180910390f35b61021760048036038101906102129190611e29565b610625565b6040516102249190611e84565b60405180910390f35b610235610648565b6040516102429190611eae565b60405180910390f35b61025361064d565b6040516102609190611eae565b60405180910390f35b610283600480360381019061027e9190611f64565b610657565b005b61029f600480360381019061029a9190611fc4565b6107cc565b6040516102ac9190611e84565b60405180910390f35b6102bd6107fb565b6040516102ca9190611eae565b60405180910390f35b6102db610801565b6040516102e89190612033565b60405180910390f35b6102f961080a565b6040516103069190611eae565b60405180910390f35b61032960048036038101906103249190611e29565b610810565b6040516103369190611e84565b60405180910390f35b610347610847565b6040516103549190611eae565b60405180910390f35b610365610859565b005b610381600480360381019061037c9190611e29565b61086b565b005b61039d6004803603810190610398919061204e565b6108ae565b005b6103a76108c2565b6040516103b49190611e84565b60405180910390f35b6103c56108d9565b6040516103d291906120d0565b60405180910390f35b6103f560048036038101906103f091906120f2565b610967565b6040516104029190611eae565b60405180910390f35b6104136109af565b005b61042f600480360381019061042a9190611e29565b6109c3565b005b6104396109e3565b005b6104436109f5565b604051610450919061212e565b60405180910390f35b610461610a1f565b60405161046e9190611d5f565b60405180910390f35b610491600480360381019061048c9190611e29565b610ab1565b60405161049e9190611e84565b60405180910390f35b6104c160048036038101906104bc9190611f64565b610b28565b005b6104dd60048036038101906104d89190611e29565b610c8e565b6040516104ea9190611e84565b60405180910390f35b61050d60048036038101906105089190612279565b610cb1565b005b610529600480360381019061052491906122c2565b610ccc565b005b610545600480360381019061054091906122ef565b610e63565b005b610561600480360381019061055c919061234f565b610eda565b60405161056e9190611eae565b60405180910390f35b610591600480360381019061058c91906120f2565b610f61565b005b6060600380546105a2906123be565b80601f01602080910402602001604051908101604052809291908181526020018280546105ce906123be565b801561061b5780601f106105f05761010080835404028352916020019161061b565b820191906000526020600020905b8154815290600101906020018083116105fe57829003601f168201915b5050505050905090565b600080610630610fe4565b905061063d818585610fec565b600191505092915050565b600a81565b6000600254905090565b61065f6111b5565b82600060081b6007600083815260200190815260200160002060000160009054906101000a900460081b60ff1916036106cd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106c49061243b565b60405180910390fd5b83338073ffffffffffffffffffffffffffffffffffffffff166007600084815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610773576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161076a906124a7565b60405180910390fd5b853373ffffffffffffffffffffffffffffffffffffffff167fa3cd7d021dc9794ae8a4520e68440669e45a8758c6feac5a46db4c6953d35d2587876040516107bc9291906124f4565b60405180910390a3505050505050565b6000806107d7610fe4565b90506107e48582856111ff565b6107ef85858561128b565b60019150509392505050565b611c2081565b60006012905090565b61271081565b60008061081b610fe4565b905061083c81858561082d8589610eda565b6108379190612547565b610fec565b600191505092915050565b600a612710610856919061257b565b81565b610861611501565b61086961157f565b565b610873611501565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108a5906125fb565b60405180910390fd5b6108bf6108b9610fe4565b826115e2565b50565b6000600560009054906101000a900460ff16905090565b600680546108e6906123be565b80601f0160208091040260200160405190810160405280929190818152602001828054610912906123be565b801561095f5780601f106109345761010080835404028352916020019161095f565b820191906000526020600020905b81548152906001019060200180831161094257829003601f168201915b505050505081565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6109b7611501565b6109c160006117af565b565b6109d5826109cf610fe4565b836111ff565b6109df82826115e2565b5050565b6109eb611501565b6109f3611875565b565b6000600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060048054610a2e906123be565b80601f0160208091040260200160405190810160405280929190818152602001828054610a5a906123be565b8015610aa75780601f10610a7c57610100808354040283529160200191610aa7565b820191906000526020600020905b815481529060010190602001808311610a8a57829003601f168201915b5050505050905090565b600080610abc610fe4565b90506000610aca8286610eda565b905083811015610b0f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b069061268d565b60405180910390fd5b610b1c8286868403610fec565b60019250505092915050565b610b30611501565b610b386111b5565b82600060081b6007600083815260200190815260200160002060000160009054906101000a900460081b60ff191603610ba6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b9d9061243b565b60405180910390fd5b834260076000838152602001908152602001600020600201541015610c00576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bf7906126f9565b60405180910390fd5b846007600087815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f220f931a071dfcd35fda9f25680cb03785508840415a802de6e99230f889862b8686604051610c7f9291906124f4565b60405180910390a35050505050565b600080610c99610fe4565b9050610ca681858561128b565b600191505092915050565b610cb9611501565b8060069081610cc891906128c5565b5050565b610cd4611501565b610cdc6111b5565b80600060081b6007600083815260200190815260200160002060000160009054906101000a900460081b60ff191603610d4a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d419061243b565b60405180910390fd5b60006007600084815260200190815260200160002060030154905060006007600085815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060076000858152602001908152602001600020600080820160006101000a8154907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff02191690556001820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055600282016000905560038201600090555050610e5d81610e58612710610e4a600a612710610e3b919061257b565b876118d890919063ffffffff16565b6118ee90919063ffffffff16565b611904565b50505050565b610e6b6111b5565b600080610e7a33868686611a5a565b91509150813373ffffffffffffffffffffffffffffffffffffffff167f45fa4b26a755f4cc5780432570badb0410d1ed0c688479aa9e708761ffb82ec287848888604051610ecb9493929190612997565b60405180910390a35050505050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b610f69611501565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610fd8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fcf90612a49565b60405180910390fd5b610fe1816117af565b50565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361105b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161105290612adb565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036110ca576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110c190612b6d565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516111a89190611eae565b60405180910390a3505050565b6111bd6108c2565b156111fd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111f490612bd9565b60405180910390fd5b565b600061120b8484610eda565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146112855781811015611277576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161126e90612c45565b60405180910390fd5b6112848484848403610fec565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036112fa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112f190612cd7565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611369576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161136090612d69565b60405180910390fd5b611374838383611c15565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050818110156113fa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113f190612dfb565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516114e89190611eae565b60405180910390a36114fb848484611c2d565b50505050565b611509610fe4565b73ffffffffffffffffffffffffffffffffffffffff166115276109f5565b73ffffffffffffffffffffffffffffffffffffffff161461157d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161157490612e67565b60405180910390fd5b565b611587611c32565b6000600560006101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6115cb610fe4565b6040516115d8919061212e565b60405180910390a1565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611651576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161164890612ef9565b60405180910390fd5b61165d82600083611c15565b60008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050818110156116e3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116da90612f8b565b60405180910390fd5b8181036000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081600260008282540392505081905550600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516117969190611eae565b60405180910390a36117aa83600084611c2d565b505050565b6000600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b61187d6111b5565b6001600560006101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586118c1610fe4565b6040516118ce919061212e565b60405180910390a1565b600081836118e69190612fab565b905092915050565b600081836118fc919061301c565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611973576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161196a90613099565b60405180910390fd5b61197f60008383611c15565b80600260008282546119919190612547565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051611a429190611eae565b60405180910390a3611a5660008383611c2d565b5050565b60008085858585604051602001611a749493929190613152565b604051602081830303815290604052805190602001209150600060081b6007600084815260200190815260200160002060000160009054906101000a900460081b60ff191614611af9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611af0906131ff565b60405180910390fd5b611b0e611c2042611c7b90919063ffffffff16565b90506000611b1e86868685611c91565b905060405180608001604052808260ff191681526020018873ffffffffffffffffffffffffffffffffffffffff168152602001838152602001878152506007600085815260200190815260200160002060008201518160000160006101000a8154817effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff021916908360081c021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020155606082015181600301559050505094509492505050565b611c1d6111b5565b611c28838383611cca565b505050565b505050565b611c3a6108c2565b611c79576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c709061326b565b60405180910390fd5b565b60008183611c899190612547565b905092915050565b600084848484604051602001611caa949392919061328b565b604051602081830303815290604052805190602001209050949350505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611d09578082015181840152602081019050611cee565b60008484015250505050565b6000601f19601f8301169050919050565b6000611d3182611ccf565b611d3b8185611cda565b9350611d4b818560208601611ceb565b611d5481611d15565b840191505092915050565b60006020820190508181036000830152611d798184611d26565b905092915050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611dc082611d95565b9050919050565b611dd081611db5565b8114611ddb57600080fd5b50565b600081359050611ded81611dc7565b92915050565b6000819050919050565b611e0681611df3565b8114611e1157600080fd5b50565b600081359050611e2381611dfd565b92915050565b60008060408385031215611e4057611e3f611d8b565b5b6000611e4e85828601611dde565b9250506020611e5f85828601611e14565b9150509250929050565b60008115159050919050565b611e7e81611e69565b82525050565b6000602082019050611e996000830184611e75565b92915050565b611ea881611df3565b82525050565b6000602082019050611ec36000830184611e9f565b92915050565b6000819050919050565b611edc81611ec9565b8114611ee757600080fd5b50565b600081359050611ef981611ed3565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f840112611f2457611f23611eff565b5b8235905067ffffffffffffffff811115611f4157611f40611f04565b5b602083019150836001820283011115611f5d57611f5c611f09565b5b9250929050565b600080600060408486031215611f7d57611f7c611d8b565b5b6000611f8b86828701611eea565b935050602084013567ffffffffffffffff811115611fac57611fab611d90565b5b611fb886828701611f0e565b92509250509250925092565b600080600060608486031215611fdd57611fdc611d8b565b5b6000611feb86828701611dde565b9350506020611ffc86828701611dde565b925050604061200d86828701611e14565b9150509250925092565b600060ff82169050919050565b61202d81612017565b82525050565b60006020820190506120486000830184612024565b92915050565b60006020828403121561206457612063611d8b565b5b600061207284828501611e14565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60006120a28261207b565b6120ac8185612086565b93506120bc818560208601611ceb565b6120c581611d15565b840191505092915050565b600060208201905081810360008301526120ea8184612097565b905092915050565b60006020828403121561210857612107611d8b565b5b600061211684828501611dde565b91505092915050565b61212881611db5565b82525050565b6000602082019050612143600083018461211f565b92915050565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61218682611d15565b810181811067ffffffffffffffff821117156121a5576121a461214e565b5b80604052505050565b60006121b8611d81565b90506121c4828261217d565b919050565b600067ffffffffffffffff8211156121e4576121e361214e565b5b6121ed82611d15565b9050602081019050919050565b82818337600083830152505050565b600061221c612217846121c9565b6121ae565b90508281526020810184848401111561223857612237612149565b5b6122438482856121fa565b509392505050565b600082601f8301126122605761225f611eff565b5b8135612270848260208601612209565b91505092915050565b60006020828403121561228f5761228e611d8b565b5b600082013567ffffffffffffffff8111156122ad576122ac611d90565b5b6122b98482850161224b565b91505092915050565b6000602082840312156122d8576122d7611d8b565b5b60006122e684828501611eea565b91505092915050565b60008060006040848603121561230857612307611d8b565b5b600061231686828701611e14565b935050602084013567ffffffffffffffff81111561233757612336611d90565b5b61234386828701611f0e565b92509250509250925092565b6000806040838503121561236657612365611d8b565b5b600061237485828601611dde565b925050602061238585828601611dde565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806123d657607f821691505b6020821081036123e9576123e861238f565b5b50919050565b7f4d757374206861766520612076616c6964207265717565737449640000000000600082015250565b6000612425601b83611cda565b9150612430826123ef565b602082019050919050565b6000602082019050818103600083015261245481612418565b9050919050565b7f52657175657374657220646f6573206e6f74206d617463680000000000000000600082015250565b6000612491601883611cda565b915061249c8261245b565b602082019050919050565b600060208201905081810360008301526124c081612484565b9050919050565b60006124d38385612086565b93506124e08385846121fa565b6124e983611d15565b840190509392505050565b6000602082019050818103600083015261250f8184866124c7565b90509392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061255282611df3565b915061255d83611df3565b925082820190508082111561257557612574612518565b5b92915050565b600061258682611df3565b915061259183611df3565b92508282039050818111156125a9576125a8612518565b5b92915050565b7f596f752063616e6e6f74206d696e74206469726563746c790000000000000000600082015250565b60006125e5601883611cda565b91506125f0826125af565b602082019050919050565b60006020820190508181036000830152612614816125d8565b9050919050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b6000612677602583611cda565b91506126828261261b565b604082019050919050565b600060208201905081810360008301526126a68161266a565b9050919050565b7f5265717565737420697320657870697265640000000000000000000000000000600082015250565b60006126e3601283611cda565b91506126ee826126ad565b602082019050919050565b60006020820190508181036000830152612712816126d6565b9050919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b60006008830261277b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261273e565b612785868361273e565b95508019841693508086168417925050509392505050565b6000819050919050565b60006127c26127bd6127b884611df3565b61279d565b611df3565b9050919050565b6000819050919050565b6127dc836127a7565b6127f06127e8826127c9565b84845461274b565b825550505050565b600090565b6128056127f8565b6128108184846127d3565b505050565b5b81811015612834576128296000826127fd565b600181019050612816565b5050565b601f8211156128795761284a81612719565b6128538461272e565b81016020851015612862578190505b61287661286e8561272e565b830182612815565b50505b505050565b600082821c905092915050565b600061289c6000198460080261287e565b1980831691505092915050565b60006128b5838361288b565b9150826002028217905092915050565b6128ce8261207b565b67ffffffffffffffff8111156128e7576128e661214e565b5b6128f182546123be565b6128fc828285612838565b600060209050601f83116001811461292f576000841561291d578287015190505b61292785826128a9565b86555061298f565b601f19841661293d86612719565b60005b8281101561296557848901518255600182019150602085019450602081019050612940565b86831015612982578489015161297e601f89168261288b565b8355505b6001600288020188555050505b505050505050565b60006060820190506129ac6000830187611e9f565b6129b96020830186611e9f565b81810360408301526129cc8184866124c7565b905095945050505050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000612a33602683611cda565b9150612a3e826129d7565b604082019050919050565b60006020820190508181036000830152612a6281612a26565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000612ac5602483611cda565b9150612ad082612a69565b604082019050919050565b60006020820190508181036000830152612af481612ab8565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b6000612b57602283611cda565b9150612b6282612afb565b604082019050919050565b60006020820190508181036000830152612b8681612b4a565b9050919050565b7f5061757361626c653a2070617573656400000000000000000000000000000000600082015250565b6000612bc3601083611cda565b9150612bce82612b8d565b602082019050919050565b60006020820190508181036000830152612bf281612bb6565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b6000612c2f601d83611cda565b9150612c3a82612bf9565b602082019050919050565b60006020820190508181036000830152612c5e81612c22565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b6000612cc1602583611cda565b9150612ccc82612c65565b604082019050919050565b60006020820190508181036000830152612cf081612cb4565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b6000612d53602383611cda565b9150612d5e82612cf7565b604082019050919050565b60006020820190508181036000830152612d8281612d46565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b6000612de5602683611cda565b9150612df082612d89565b604082019050919050565b60006020820190508181036000830152612e1481612dd8565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000612e51602083611cda565b9150612e5c82612e1b565b602082019050919050565b60006020820190508181036000830152612e8081612e44565b9050919050565b7f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360008201527f7300000000000000000000000000000000000000000000000000000000000000602082015250565b6000612ee3602183611cda565b9150612eee82612e87565b604082019050919050565b60006020820190508181036000830152612f1281612ed6565b9050919050565b7f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60008201527f6365000000000000000000000000000000000000000000000000000000000000602082015250565b6000612f75602283611cda565b9150612f8082612f19565b604082019050919050565b60006020820190508181036000830152612fa481612f68565b9050919050565b6000612fb682611df3565b9150612fc183611df3565b9250828202612fcf81611df3565b91508282048414831517612fe657612fe5612518565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061302782611df3565b915061303283611df3565b92508261304257613041612fed565b5b828204905092915050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b6000613083601f83611cda565b915061308e8261304d565b602082019050919050565b600060208201905081810360008301526130b281613076565b9050919050565b60008160601b9050919050565b60006130d1826130b9565b9050919050565b60006130e3826130c6565b9050919050565b6130fb6130f682611db5565b6130d8565b82525050565b6000819050919050565b61311c61311782611df3565b613101565b82525050565b600081905092915050565b60006131398385613122565b93506131468385846121fa565b82840190509392505050565b600061315e82876130ea565b60148201915061316e828661310b565b60208201915061317f82848661312d565b915081905095945050505050565b7f52657175657374206170706561727320746f2062652061206475706c6963617460008201527f6500000000000000000000000000000000000000000000000000000000000000602082015250565b60006131e9602183611cda565b91506131f48261318d565b604082019050919050565b60006020820190508181036000830152613218816131dc565b9050919050565b7f5061757361626c653a206e6f7420706175736564000000000000000000000000600082015250565b6000613255601483611cda565b91506132608261321f565b602082019050919050565b6000602082019050818103600083015261328481613248565b9050919050565b6000613297828761310b565b6020820191506132a882858761312d565b91506132b4828461310b565b6020820191508190509594505050505056fea26469706673582212207126450d60b0357e4501223560873a904b4004e5fee1e84467d96e2f88c4d25564736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x6 SWAP1 DUP2 PUSH3 0x24 SWAP2 SWAP1 PUSH3 0x486 JUMP JUMPDEST POP CALLVALUE DUP1 ISZERO PUSH3 0x32 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x3C6C CODESIZE SUB DUP1 PUSH3 0x3C6C DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x58 SWAP2 SWAP1 PUSH3 0x6D1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xC DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x50726F7661626C65204742500000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5047425000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH3 0xD5 SWAP2 SWAP1 PUSH3 0x787 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH3 0xE7 SWAP2 SWAP1 PUSH3 0x787 JUMP JUMPDEST POP POP POP PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH3 0x125 PUSH3 0x119 PUSH3 0x13E PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x146 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP1 PUSH1 0x6 SWAP1 DUP2 PUSH3 0x136 SWAP2 SWAP1 PUSH3 0x879 JUMP JUMPDEST POP POP PUSH3 0x960 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x28E JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x2A4 JUMPI PUSH3 0x2A3 PUSH3 0x246 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x30E PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x2CF JUMP JUMPDEST PUSH3 0x31A DUP7 DUP4 PUSH3 0x2CF JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x367 PUSH3 0x361 PUSH3 0x35B DUP5 PUSH3 0x332 JUMP JUMPDEST PUSH3 0x33C JUMP JUMPDEST PUSH3 0x332 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x383 DUP4 PUSH3 0x346 JUMP JUMPDEST PUSH3 0x39B PUSH3 0x392 DUP3 PUSH3 0x36E JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x2DC JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x3B2 PUSH3 0x3A3 JUMP JUMPDEST PUSH3 0x3BF DUP2 DUP5 DUP5 PUSH3 0x378 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x3E7 JUMPI PUSH3 0x3DB PUSH1 0x0 DUP3 PUSH3 0x3A8 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x3C5 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x436 JUMPI PUSH3 0x400 DUP2 PUSH3 0x2AA JUMP JUMPDEST PUSH3 0x40B DUP5 PUSH3 0x2BF JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x41B JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x433 PUSH3 0x42A DUP6 PUSH3 0x2BF JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x3C4 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x45B PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x43B JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x476 DUP4 DUP4 PUSH3 0x448 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x491 DUP3 PUSH3 0x20C JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x4AD JUMPI PUSH3 0x4AC PUSH3 0x217 JUMP JUMPDEST JUMPDEST PUSH3 0x4B9 DUP3 SLOAD PUSH3 0x275 JUMP JUMPDEST PUSH3 0x4C6 DUP3 DUP3 DUP6 PUSH3 0x3EB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x4FE JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x4E9 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x4F5 DUP6 DUP3 PUSH3 0x468 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x565 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x50E DUP7 PUSH3 0x2AA JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x538 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x511 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x558 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x554 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x448 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x5A7 DUP3 PUSH3 0x58B JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x5C9 JUMPI PUSH3 0x5C8 PUSH3 0x217 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x5DE PUSH3 0x56D JUMP JUMPDEST SWAP1 POP PUSH3 0x5EC DUP3 DUP3 PUSH3 0x59C JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x60F JUMPI PUSH3 0x60E PUSH3 0x217 JUMP JUMPDEST JUMPDEST PUSH3 0x61A DUP3 PUSH3 0x58B JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x647 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x62A JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x66A PUSH3 0x664 DUP5 PUSH3 0x5F1 JUMP JUMPDEST PUSH3 0x5D2 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x689 JUMPI PUSH3 0x688 PUSH3 0x586 JUMP JUMPDEST JUMPDEST PUSH3 0x696 DUP5 DUP3 DUP6 PUSH3 0x627 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x6B6 JUMPI PUSH3 0x6B5 PUSH3 0x581 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x6C8 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x653 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x6EA JUMPI PUSH3 0x6E9 PUSH3 0x577 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x70B JUMPI PUSH3 0x70A PUSH3 0x57C JUMP JUMPDEST JUMPDEST PUSH3 0x719 DUP5 DUP3 DUP6 ADD PUSH3 0x69E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x782 JUMPI PUSH3 0x74C DUP2 PUSH3 0x722 JUMP JUMPDEST PUSH3 0x757 DUP5 PUSH3 0x2BF JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x767 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x77F PUSH3 0x776 DUP6 PUSH3 0x2BF JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x3C4 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH3 0x792 DUP3 PUSH3 0x20C JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x7AE JUMPI PUSH3 0x7AD PUSH3 0x217 JUMP JUMPDEST JUMPDEST PUSH3 0x7BA DUP3 SLOAD PUSH3 0x275 JUMP JUMPDEST PUSH3 0x7C7 DUP3 DUP3 DUP6 PUSH3 0x737 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x7FF JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x7EA JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x7F6 DUP6 DUP3 PUSH3 0x468 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x866 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x80F DUP7 PUSH3 0x722 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x839 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x812 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x859 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x855 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x448 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x884 DUP3 PUSH3 0x86E JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x8A0 JUMPI PUSH3 0x89F PUSH3 0x217 JUMP JUMPDEST JUMPDEST PUSH3 0x8AC DUP3 SLOAD PUSH3 0x275 JUMP JUMPDEST PUSH3 0x8B9 DUP3 DUP3 DUP6 PUSH3 0x3EB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x8F1 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x8DC JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x8E8 DUP6 DUP3 PUSH3 0x468 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x958 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x901 DUP7 PUSH3 0x2AA JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x92B JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x904 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x94B JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x947 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x448 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x32FC DUP1 PUSH3 0x970 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1DA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x63FFAB31 GT PUSH2 0x104 JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xAC5B756D GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xAC5B756D EQ PUSH2 0x50F JUMPI DUP1 PUSH4 0xCDC1F6D4 EQ PUSH2 0x52B JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x547 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x577 JUMPI PUSH2 0x1DA JUMP JUMPDEST DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x477 JUMPI DUP1 PUSH4 0xA4629533 EQ PUSH2 0x4A7 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x4C3 JUMPI DUP1 PUSH4 0xA91D58B4 EQ PUSH2 0x4F3 JUMPI PUSH2 0x1DA JUMP JUMPDEST DUP1 PUSH4 0x79CC6790 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x415 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x431 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x43B JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x459 JUMPI PUSH2 0x1DA JUMP JUMPDEST DUP1 PUSH4 0x63FFAB31 EQ PUSH2 0x3BD JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x3DB JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x40B JUMPI PUSH2 0x1DA JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0x17C JUMPI DUP1 PUSH4 0x3F4BA83A GT PUSH2 0x14B JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x35D JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x367 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x383 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x39F JUMPI PUSH2 0x1DA JUMP JUMPDEST DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2D3 JUMPI DUP1 PUSH4 0x34913F28 EQ PUSH2 0x2F1 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x30F JUMPI DUP1 PUSH4 0x3ADDB12C EQ PUSH2 0x33F JUMPI PUSH2 0x1DA JUMP JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0x1B8 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x24B JUMPI DUP1 PUSH4 0x21A7E7E9 EQ PUSH2 0x269 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x285 JUMPI DUP1 PUSH4 0x25CB5BC0 EQ PUSH2 0x2B5 JUMPI PUSH2 0x1DA JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1DF JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1FD JUMPI DUP1 PUSH4 0x1285CC2A EQ PUSH2 0x22D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1E7 PUSH2 0x593 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F4 SWAP2 SWAP1 PUSH2 0x1D5F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x217 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x212 SWAP2 SWAP1 PUSH2 0x1E29 JUMP JUMPDEST PUSH2 0x625 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x224 SWAP2 SWAP1 PUSH2 0x1E84 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x235 PUSH2 0x648 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x242 SWAP2 SWAP1 PUSH2 0x1EAE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x253 PUSH2 0x64D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x260 SWAP2 SWAP1 PUSH2 0x1EAE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x283 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x27E SWAP2 SWAP1 PUSH2 0x1F64 JUMP JUMPDEST PUSH2 0x657 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x29F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29A SWAP2 SWAP1 PUSH2 0x1FC4 JUMP JUMPDEST PUSH2 0x7CC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AC SWAP2 SWAP1 PUSH2 0x1E84 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BD PUSH2 0x7FB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2CA SWAP2 SWAP1 PUSH2 0x1EAE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2DB PUSH2 0x801 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E8 SWAP2 SWAP1 PUSH2 0x2033 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F9 PUSH2 0x80A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x306 SWAP2 SWAP1 PUSH2 0x1EAE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x329 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x324 SWAP2 SWAP1 PUSH2 0x1E29 JUMP JUMPDEST PUSH2 0x810 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x336 SWAP2 SWAP1 PUSH2 0x1E84 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x347 PUSH2 0x847 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x354 SWAP2 SWAP1 PUSH2 0x1EAE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x365 PUSH2 0x859 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x381 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x37C SWAP2 SWAP1 PUSH2 0x1E29 JUMP JUMPDEST PUSH2 0x86B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x39D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x398 SWAP2 SWAP1 PUSH2 0x204E JUMP JUMPDEST PUSH2 0x8AE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3A7 PUSH2 0x8C2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B4 SWAP2 SWAP1 PUSH2 0x1E84 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3C5 PUSH2 0x8D9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3D2 SWAP2 SWAP1 PUSH2 0x20D0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3F5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3F0 SWAP2 SWAP1 PUSH2 0x20F2 JUMP JUMPDEST PUSH2 0x967 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x402 SWAP2 SWAP1 PUSH2 0x1EAE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x413 PUSH2 0x9AF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x42F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x42A SWAP2 SWAP1 PUSH2 0x1E29 JUMP JUMPDEST PUSH2 0x9C3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x439 PUSH2 0x9E3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x443 PUSH2 0x9F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x450 SWAP2 SWAP1 PUSH2 0x212E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x461 PUSH2 0xA1F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x46E SWAP2 SWAP1 PUSH2 0x1D5F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x491 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x48C SWAP2 SWAP1 PUSH2 0x1E29 JUMP JUMPDEST PUSH2 0xAB1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x49E SWAP2 SWAP1 PUSH2 0x1E84 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4C1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4BC SWAP2 SWAP1 PUSH2 0x1F64 JUMP JUMPDEST PUSH2 0xB28 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4DD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4D8 SWAP2 SWAP1 PUSH2 0x1E29 JUMP JUMPDEST PUSH2 0xC8E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4EA SWAP2 SWAP1 PUSH2 0x1E84 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x50D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x508 SWAP2 SWAP1 PUSH2 0x2279 JUMP JUMPDEST PUSH2 0xCB1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x529 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x524 SWAP2 SWAP1 PUSH2 0x22C2 JUMP JUMPDEST PUSH2 0xCCC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x545 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x540 SWAP2 SWAP1 PUSH2 0x22EF JUMP JUMPDEST PUSH2 0xE63 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x561 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x55C SWAP2 SWAP1 PUSH2 0x234F JUMP JUMPDEST PUSH2 0xEDA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x56E SWAP2 SWAP1 PUSH2 0x1EAE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x591 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x58C SWAP2 SWAP1 PUSH2 0x20F2 JUMP JUMPDEST PUSH2 0xF61 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x5A2 SWAP1 PUSH2 0x23BE JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x5CE SWAP1 PUSH2 0x23BE JUMP JUMPDEST DUP1 ISZERO PUSH2 0x61B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5F0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x61B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5FE JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x630 PUSH2 0xFE4 JUMP JUMPDEST SWAP1 POP PUSH2 0x63D DUP2 DUP6 DUP6 PUSH2 0xFEC JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xA DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x65F PUSH2 0x11B5 JUMP JUMPDEST DUP3 PUSH1 0x0 PUSH1 0x8 SHL PUSH1 0x7 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x8 SHL PUSH1 0xFF NOT AND SUB PUSH2 0x6CD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6C4 SWAP1 PUSH2 0x243B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 CALLER DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x7 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x773 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x76A SWAP1 PUSH2 0x24A7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP6 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xA3CD7D021DC9794AE8A4520E68440669E45A8758C6FEAC5A46DB4C6953D35D25 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x7BC SWAP3 SWAP2 SWAP1 PUSH2 0x24F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x7D7 PUSH2 0xFE4 JUMP JUMPDEST SWAP1 POP PUSH2 0x7E4 DUP6 DUP3 DUP6 PUSH2 0x11FF JUMP JUMPDEST PUSH2 0x7EF DUP6 DUP6 DUP6 PUSH2 0x128B JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1C20 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x2710 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x81B PUSH2 0xFE4 JUMP JUMPDEST SWAP1 POP PUSH2 0x83C DUP2 DUP6 DUP6 PUSH2 0x82D DUP6 DUP10 PUSH2 0xEDA JUMP JUMPDEST PUSH2 0x837 SWAP2 SWAP1 PUSH2 0x2547 JUMP JUMPDEST PUSH2 0xFEC JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xA PUSH2 0x2710 PUSH2 0x856 SWAP2 SWAP1 PUSH2 0x257B JUMP JUMPDEST DUP2 JUMP JUMPDEST PUSH2 0x861 PUSH2 0x1501 JUMP JUMPDEST PUSH2 0x869 PUSH2 0x157F JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x873 PUSH2 0x1501 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8A5 SWAP1 PUSH2 0x25FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8BF PUSH2 0x8B9 PUSH2 0xFE4 JUMP JUMPDEST DUP3 PUSH2 0x15E2 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH2 0x8E6 SWAP1 PUSH2 0x23BE JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x912 SWAP1 PUSH2 0x23BE JUMP JUMPDEST DUP1 ISZERO PUSH2 0x95F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x934 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x95F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x942 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9B7 PUSH2 0x1501 JUMP JUMPDEST PUSH2 0x9C1 PUSH1 0x0 PUSH2 0x17AF JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x9D5 DUP3 PUSH2 0x9CF PUSH2 0xFE4 JUMP JUMPDEST DUP4 PUSH2 0x11FF JUMP JUMPDEST PUSH2 0x9DF DUP3 DUP3 PUSH2 0x15E2 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x9EB PUSH2 0x1501 JUMP JUMPDEST PUSH2 0x9F3 PUSH2 0x1875 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0xA2E SWAP1 PUSH2 0x23BE JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xA5A SWAP1 PUSH2 0x23BE JUMP JUMPDEST DUP1 ISZERO PUSH2 0xAA7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xA7C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xAA7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA8A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xABC PUSH2 0xFE4 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xACA DUP3 DUP7 PUSH2 0xEDA JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0xB0F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB06 SWAP1 PUSH2 0x268D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB1C DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0xFEC JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xB30 PUSH2 0x1501 JUMP JUMPDEST PUSH2 0xB38 PUSH2 0x11B5 JUMP JUMPDEST DUP3 PUSH1 0x0 PUSH1 0x8 SHL PUSH1 0x7 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x8 SHL PUSH1 0xFF NOT AND SUB PUSH2 0xBA6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB9D SWAP1 PUSH2 0x243B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 TIMESTAMP PUSH1 0x7 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD LT ISZERO PUSH2 0xC00 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBF7 SWAP1 PUSH2 0x26F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 PUSH1 0x7 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x220F931A071DFCD35FDA9F25680CB03785508840415A802DE6E99230F889862B DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0xC7F SWAP3 SWAP2 SWAP1 PUSH2 0x24F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xC99 PUSH2 0xFE4 JUMP JUMPDEST SWAP1 POP PUSH2 0xCA6 DUP2 DUP6 DUP6 PUSH2 0x128B JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xCB9 PUSH2 0x1501 JUMP JUMPDEST DUP1 PUSH1 0x6 SWAP1 DUP2 PUSH2 0xCC8 SWAP2 SWAP1 PUSH2 0x28C5 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xCD4 PUSH2 0x1501 JUMP JUMPDEST PUSH2 0xCDC PUSH2 0x11B5 JUMP JUMPDEST DUP1 PUSH1 0x0 PUSH1 0x8 SHL PUSH1 0x7 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x8 SHL PUSH1 0xFF NOT AND SUB PUSH2 0xD4A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD41 SWAP1 PUSH2 0x243B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x7 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x3 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE POP POP PUSH2 0xE5D DUP2 PUSH2 0xE58 PUSH2 0x2710 PUSH2 0xE4A PUSH1 0xA PUSH2 0x2710 PUSH2 0xE3B SWAP2 SWAP1 PUSH2 0x257B JUMP JUMPDEST DUP8 PUSH2 0x18D8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x18EE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1904 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0xE6B PUSH2 0x11B5 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xE7A CALLER DUP7 DUP7 DUP7 PUSH2 0x1A5A JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP2 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x45FA4B26A755F4CC5780432570BADB0410D1ED0C688479AA9E708761FFB82EC2 DUP8 DUP5 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH2 0xECB SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2997 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xF69 PUSH2 0x1501 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xFD8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFCF SWAP1 PUSH2 0x2A49 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xFE1 DUP2 PUSH2 0x17AF JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x105B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1052 SWAP1 PUSH2 0x2ADB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x10CA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10C1 SWAP1 PUSH2 0x2B6D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x11A8 SWAP2 SWAP1 PUSH2 0x1EAE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x11BD PUSH2 0x8C2 JUMP JUMPDEST ISZERO PUSH2 0x11FD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11F4 SWAP1 PUSH2 0x2BD9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x120B DUP5 DUP5 PUSH2 0xEDA JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x1285 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x1277 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x126E SWAP1 PUSH2 0x2C45 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1284 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0xFEC JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x12FA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12F1 SWAP1 PUSH2 0x2CD7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1369 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1360 SWAP1 PUSH2 0x2D69 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1374 DUP4 DUP4 DUP4 PUSH2 0x1C15 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x13FA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13F1 SWAP1 PUSH2 0x2DFB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x14E8 SWAP2 SWAP1 PUSH2 0x1EAE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x14FB DUP5 DUP5 DUP5 PUSH2 0x1C2D JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x1509 PUSH2 0xFE4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1527 PUSH2 0x9F5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x157D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1574 SWAP1 PUSH2 0x2E67 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x1587 PUSH2 0x1C32 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0x15CB PUSH2 0xFE4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15D8 SWAP2 SWAP1 PUSH2 0x212E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1651 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1648 SWAP1 PUSH2 0x2EF9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x165D DUP3 PUSH1 0x0 DUP4 PUSH2 0x1C15 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x16E3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16DA SWAP1 PUSH2 0x2F8B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x1796 SWAP2 SWAP1 PUSH2 0x1EAE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x17AA DUP4 PUSH1 0x0 DUP5 PUSH2 0x1C2D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x187D PUSH2 0x11B5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x18C1 PUSH2 0xFE4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18CE SWAP2 SWAP1 PUSH2 0x212E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x18E6 SWAP2 SWAP1 PUSH2 0x2FAB JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x18FC SWAP2 SWAP1 PUSH2 0x301C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1973 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x196A SWAP1 PUSH2 0x3099 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x197F PUSH1 0x0 DUP4 DUP4 PUSH2 0x1C15 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1991 SWAP2 SWAP1 PUSH2 0x2547 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1A42 SWAP2 SWAP1 PUSH2 0x1EAE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x1A56 PUSH1 0x0 DUP4 DUP4 PUSH2 0x1C2D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1A74 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3152 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP2 POP PUSH1 0x0 PUSH1 0x8 SHL PUSH1 0x7 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x8 SHL PUSH1 0xFF NOT AND EQ PUSH2 0x1AF9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AF0 SWAP1 PUSH2 0x31FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1B0E PUSH2 0x1C20 TIMESTAMP PUSH2 0x1C7B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1B1E DUP7 DUP7 DUP7 DUP6 PUSH2 0x1C91 JUMP JUMPDEST SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 DUP3 PUSH1 0xFF NOT AND DUP2 MSTORE PUSH1 0x20 ADD DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE POP PUSH1 0x7 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH1 0x8 SHR MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE SWAP1 POP POP POP SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1C1D PUSH2 0x11B5 JUMP JUMPDEST PUSH2 0x1C28 DUP4 DUP4 DUP4 PUSH2 0x1CCA JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1C3A PUSH2 0x8C2 JUMP JUMPDEST PUSH2 0x1C79 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C70 SWAP1 PUSH2 0x326B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1C89 SWAP2 SWAP1 PUSH2 0x2547 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1CAA SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x328B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1D09 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1CEE JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D31 DUP3 PUSH2 0x1CCF JUMP JUMPDEST PUSH2 0x1D3B DUP2 DUP6 PUSH2 0x1CDA JUMP JUMPDEST SWAP4 POP PUSH2 0x1D4B DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1CEB JUMP JUMPDEST PUSH2 0x1D54 DUP2 PUSH2 0x1D15 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D79 DUP2 DUP5 PUSH2 0x1D26 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DC0 DUP3 PUSH2 0x1D95 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1DD0 DUP2 PUSH2 0x1DB5 JUMP JUMPDEST DUP2 EQ PUSH2 0x1DDB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1DED DUP2 PUSH2 0x1DC7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E06 DUP2 PUSH2 0x1DF3 JUMP JUMPDEST DUP2 EQ PUSH2 0x1E11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1E23 DUP2 PUSH2 0x1DFD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1E40 JUMPI PUSH2 0x1E3F PUSH2 0x1D8B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1E4E DUP6 DUP3 DUP7 ADD PUSH2 0x1DDE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1E5F DUP6 DUP3 DUP7 ADD PUSH2 0x1E14 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E7E DUP2 PUSH2 0x1E69 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1E99 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1E75 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1EA8 DUP2 PUSH2 0x1DF3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1EC3 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1E9F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1EDC DUP2 PUSH2 0x1EC9 JUMP JUMPDEST DUP2 EQ PUSH2 0x1EE7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1EF9 DUP2 PUSH2 0x1ED3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x1F24 JUMPI PUSH2 0x1F23 PUSH2 0x1EFF JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F41 JUMPI PUSH2 0x1F40 PUSH2 0x1F04 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x1F5D JUMPI PUSH2 0x1F5C PUSH2 0x1F09 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1F7D JUMPI PUSH2 0x1F7C PUSH2 0x1D8B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1F8B DUP7 DUP3 DUP8 ADD PUSH2 0x1EEA JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1FAC JUMPI PUSH2 0x1FAB PUSH2 0x1D90 JUMP JUMPDEST JUMPDEST PUSH2 0x1FB8 DUP7 DUP3 DUP8 ADD PUSH2 0x1F0E JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1FDD JUMPI PUSH2 0x1FDC PUSH2 0x1D8B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1FEB DUP7 DUP3 DUP8 ADD PUSH2 0x1DDE JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1FFC DUP7 DUP3 DUP8 ADD PUSH2 0x1DDE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x200D DUP7 DUP3 DUP8 ADD PUSH2 0x1E14 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x202D DUP2 PUSH2 0x2017 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2048 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2024 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2064 JUMPI PUSH2 0x2063 PUSH2 0x1D8B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2072 DUP5 DUP3 DUP6 ADD PUSH2 0x1E14 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20A2 DUP3 PUSH2 0x207B JUMP JUMPDEST PUSH2 0x20AC DUP2 DUP6 PUSH2 0x2086 JUMP JUMPDEST SWAP4 POP PUSH2 0x20BC DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1CEB JUMP JUMPDEST PUSH2 0x20C5 DUP2 PUSH2 0x1D15 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x20EA DUP2 DUP5 PUSH2 0x2097 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2108 JUMPI PUSH2 0x2107 PUSH2 0x1D8B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2116 DUP5 DUP3 DUP6 ADD PUSH2 0x1DDE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2128 DUP2 PUSH2 0x1DB5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2143 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x211F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x2186 DUP3 PUSH2 0x1D15 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x21A5 JUMPI PUSH2 0x21A4 PUSH2 0x214E JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21B8 PUSH2 0x1D81 JUMP JUMPDEST SWAP1 POP PUSH2 0x21C4 DUP3 DUP3 PUSH2 0x217D JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x21E4 JUMPI PUSH2 0x21E3 PUSH2 0x214E JUMP JUMPDEST JUMPDEST PUSH2 0x21ED DUP3 PUSH2 0x1D15 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x221C PUSH2 0x2217 DUP5 PUSH2 0x21C9 JUMP JUMPDEST PUSH2 0x21AE JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2238 JUMPI PUSH2 0x2237 PUSH2 0x2149 JUMP JUMPDEST JUMPDEST PUSH2 0x2243 DUP5 DUP3 DUP6 PUSH2 0x21FA JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2260 JUMPI PUSH2 0x225F PUSH2 0x1EFF JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2270 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2209 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x228F JUMPI PUSH2 0x228E PUSH2 0x1D8B JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x22AD JUMPI PUSH2 0x22AC PUSH2 0x1D90 JUMP JUMPDEST JUMPDEST PUSH2 0x22B9 DUP5 DUP3 DUP6 ADD PUSH2 0x224B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x22D8 JUMPI PUSH2 0x22D7 PUSH2 0x1D8B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x22E6 DUP5 DUP3 DUP6 ADD PUSH2 0x1EEA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2308 JUMPI PUSH2 0x2307 PUSH2 0x1D8B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2316 DUP7 DUP3 DUP8 ADD PUSH2 0x1E14 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2337 JUMPI PUSH2 0x2336 PUSH2 0x1D90 JUMP JUMPDEST JUMPDEST PUSH2 0x2343 DUP7 DUP3 DUP8 ADD PUSH2 0x1F0E JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2366 JUMPI PUSH2 0x2365 PUSH2 0x1D8B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2374 DUP6 DUP3 DUP7 ADD PUSH2 0x1DDE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2385 DUP6 DUP3 DUP7 ADD PUSH2 0x1DDE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x23D6 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x23E9 JUMPI PUSH2 0x23E8 PUSH2 0x238F JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4D757374206861766520612076616C6964207265717565737449640000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2425 PUSH1 0x1B DUP4 PUSH2 0x1CDA JUMP JUMPDEST SWAP2 POP PUSH2 0x2430 DUP3 PUSH2 0x23EF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2454 DUP2 PUSH2 0x2418 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x52657175657374657220646F6573206E6F74206D617463680000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2491 PUSH1 0x18 DUP4 PUSH2 0x1CDA JUMP JUMPDEST SWAP2 POP PUSH2 0x249C DUP3 PUSH2 0x245B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x24C0 DUP2 PUSH2 0x2484 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24D3 DUP4 DUP6 PUSH2 0x2086 JUMP JUMPDEST SWAP4 POP PUSH2 0x24E0 DUP4 DUP6 DUP5 PUSH2 0x21FA JUMP JUMPDEST PUSH2 0x24E9 DUP4 PUSH2 0x1D15 JUMP JUMPDEST DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x250F DUP2 DUP5 DUP7 PUSH2 0x24C7 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2552 DUP3 PUSH2 0x1DF3 JUMP JUMPDEST SWAP2 POP PUSH2 0x255D DUP4 PUSH2 0x1DF3 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2575 JUMPI PUSH2 0x2574 PUSH2 0x2518 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2586 DUP3 PUSH2 0x1DF3 JUMP JUMPDEST SWAP2 POP PUSH2 0x2591 DUP4 PUSH2 0x1DF3 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x25A9 JUMPI PUSH2 0x25A8 PUSH2 0x2518 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x596F752063616E6E6F74206D696E74206469726563746C790000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x25E5 PUSH1 0x18 DUP4 PUSH2 0x1CDA JUMP JUMPDEST SWAP2 POP PUSH2 0x25F0 DUP3 PUSH2 0x25AF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2614 DUP2 PUSH2 0x25D8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2677 PUSH1 0x25 DUP4 PUSH2 0x1CDA JUMP JUMPDEST SWAP2 POP PUSH2 0x2682 DUP3 PUSH2 0x261B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x26A6 DUP2 PUSH2 0x266A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5265717565737420697320657870697265640000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26E3 PUSH1 0x12 DUP4 PUSH2 0x1CDA JUMP JUMPDEST SWAP2 POP PUSH2 0x26EE DUP3 PUSH2 0x26AD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2712 DUP2 PUSH2 0x26D6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x277B PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x273E JUMP JUMPDEST PUSH2 0x2785 DUP7 DUP4 PUSH2 0x273E JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27C2 PUSH2 0x27BD PUSH2 0x27B8 DUP5 PUSH2 0x1DF3 JUMP JUMPDEST PUSH2 0x279D JUMP JUMPDEST PUSH2 0x1DF3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x27DC DUP4 PUSH2 0x27A7 JUMP JUMPDEST PUSH2 0x27F0 PUSH2 0x27E8 DUP3 PUSH2 0x27C9 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x274B JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x2805 PUSH2 0x27F8 JUMP JUMPDEST PUSH2 0x2810 DUP2 DUP5 DUP5 PUSH2 0x27D3 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2834 JUMPI PUSH2 0x2829 PUSH1 0x0 DUP3 PUSH2 0x27FD JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2816 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x2879 JUMPI PUSH2 0x284A DUP2 PUSH2 0x2719 JUMP JUMPDEST PUSH2 0x2853 DUP5 PUSH2 0x272E JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x2862 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x2876 PUSH2 0x286E DUP6 PUSH2 0x272E JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x2815 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x289C PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x287E JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x28B5 DUP4 DUP4 PUSH2 0x288B JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x28CE DUP3 PUSH2 0x207B JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x28E7 JUMPI PUSH2 0x28E6 PUSH2 0x214E JUMP JUMPDEST JUMPDEST PUSH2 0x28F1 DUP3 SLOAD PUSH2 0x23BE JUMP JUMPDEST PUSH2 0x28FC DUP3 DUP3 DUP6 PUSH2 0x2838 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x292F JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x291D JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x2927 DUP6 DUP3 PUSH2 0x28A9 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x298F JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x293D DUP7 PUSH2 0x2719 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2965 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2940 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x2982 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x297E PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x288B JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x29AC PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1E9F JUMP JUMPDEST PUSH2 0x29B9 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1E9F JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x29CC DUP2 DUP5 DUP7 PUSH2 0x24C7 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A33 PUSH1 0x26 DUP4 PUSH2 0x1CDA JUMP JUMPDEST SWAP2 POP PUSH2 0x2A3E DUP3 PUSH2 0x29D7 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2A62 DUP2 PUSH2 0x2A26 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2AC5 PUSH1 0x24 DUP4 PUSH2 0x1CDA JUMP JUMPDEST SWAP2 POP PUSH2 0x2AD0 DUP3 PUSH2 0x2A69 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2AF4 DUP2 PUSH2 0x2AB8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B57 PUSH1 0x22 DUP4 PUSH2 0x1CDA JUMP JUMPDEST SWAP2 POP PUSH2 0x2B62 DUP3 PUSH2 0x2AFB JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2B86 DUP2 PUSH2 0x2B4A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5061757361626C653A2070617573656400000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BC3 PUSH1 0x10 DUP4 PUSH2 0x1CDA JUMP JUMPDEST SWAP2 POP PUSH2 0x2BCE DUP3 PUSH2 0x2B8D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2BF2 DUP2 PUSH2 0x2BB6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C2F PUSH1 0x1D DUP4 PUSH2 0x1CDA JUMP JUMPDEST SWAP2 POP PUSH2 0x2C3A DUP3 PUSH2 0x2BF9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2C5E DUP2 PUSH2 0x2C22 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2CC1 PUSH1 0x25 DUP4 PUSH2 0x1CDA JUMP JUMPDEST SWAP2 POP PUSH2 0x2CCC DUP3 PUSH2 0x2C65 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2CF0 DUP2 PUSH2 0x2CB4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D53 PUSH1 0x23 DUP4 PUSH2 0x1CDA JUMP JUMPDEST SWAP2 POP PUSH2 0x2D5E DUP3 PUSH2 0x2CF7 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2D82 DUP2 PUSH2 0x2D46 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2DE5 PUSH1 0x26 DUP4 PUSH2 0x1CDA JUMP JUMPDEST SWAP2 POP PUSH2 0x2DF0 DUP3 PUSH2 0x2D89 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2E14 DUP2 PUSH2 0x2DD8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E51 PUSH1 0x20 DUP4 PUSH2 0x1CDA JUMP JUMPDEST SWAP2 POP PUSH2 0x2E5C DUP3 PUSH2 0x2E1B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2E80 DUP2 PUSH2 0x2E44 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7300000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2EE3 PUSH1 0x21 DUP4 PUSH2 0x1CDA JUMP JUMPDEST SWAP2 POP PUSH2 0x2EEE DUP3 PUSH2 0x2E87 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2F12 DUP2 PUSH2 0x2ED6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6365000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F75 PUSH1 0x22 DUP4 PUSH2 0x1CDA JUMP JUMPDEST SWAP2 POP PUSH2 0x2F80 DUP3 PUSH2 0x2F19 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2FA4 DUP2 PUSH2 0x2F68 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2FB6 DUP3 PUSH2 0x1DF3 JUMP JUMPDEST SWAP2 POP PUSH2 0x2FC1 DUP4 PUSH2 0x1DF3 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x2FCF DUP2 PUSH2 0x1DF3 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x2FE6 JUMPI PUSH2 0x2FE5 PUSH2 0x2518 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3027 DUP3 PUSH2 0x1DF3 JUMP JUMPDEST SWAP2 POP PUSH2 0x3032 DUP4 PUSH2 0x1DF3 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x3042 JUMPI PUSH2 0x3041 PUSH2 0x2FED JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3083 PUSH1 0x1F DUP4 PUSH2 0x1CDA JUMP JUMPDEST SWAP2 POP PUSH2 0x308E DUP3 PUSH2 0x304D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x30B2 DUP2 PUSH2 0x3076 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x60 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x30D1 DUP3 PUSH2 0x30B9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x30E3 DUP3 PUSH2 0x30C6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x30FB PUSH2 0x30F6 DUP3 PUSH2 0x1DB5 JUMP JUMPDEST PUSH2 0x30D8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x311C PUSH2 0x3117 DUP3 PUSH2 0x1DF3 JUMP JUMPDEST PUSH2 0x3101 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3139 DUP4 DUP6 PUSH2 0x3122 JUMP JUMPDEST SWAP4 POP PUSH2 0x3146 DUP4 DUP6 DUP5 PUSH2 0x21FA JUMP JUMPDEST DUP3 DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x315E DUP3 DUP8 PUSH2 0x30EA JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP PUSH2 0x316E DUP3 DUP7 PUSH2 0x310B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH2 0x317F DUP3 DUP5 DUP7 PUSH2 0x312D JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x52657175657374206170706561727320746F2062652061206475706C69636174 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6500000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x31E9 PUSH1 0x21 DUP4 PUSH2 0x1CDA JUMP JUMPDEST SWAP2 POP PUSH2 0x31F4 DUP3 PUSH2 0x318D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3218 DUP2 PUSH2 0x31DC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5061757361626C653A206E6F7420706175736564000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3255 PUSH1 0x14 DUP4 PUSH2 0x1CDA JUMP JUMPDEST SWAP2 POP PUSH2 0x3260 DUP3 PUSH2 0x321F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3284 DUP2 PUSH2 0x3248 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3297 DUP3 DUP8 PUSH2 0x310B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH2 0x32A8 DUP3 DUP6 DUP8 PUSH2 0x312D JUMP JUMPDEST SWAP2 POP PUSH2 0x32B4 DUP3 DUP5 PUSH2 0x310B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH18 0x26450D60B0357E4501223560873A904B4004 0xE5 INVALID 0xE1 0xE8 DIFFICULTY PUSH8 0xD96E2F88C4D25564 PUSH20 0x6F6C634300081100330000000000000000000000 ","sourceMap":"356:6978:8:-:0;;;941:27;;;;;;;;;;;;;;;;;;;:::i;:::-;;1208:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1976:113:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2050:5;2042;:13;;;;;;:::i;:::-;;2075:7;2065;:17;;;;;;:::i;:::-;;1976:113;;1006:5:1;996:7;;:15;;;;;;;;;;;;;;;;;;936:32:0;955:12;:10;;;:12;;:::i;:::-;936:18;;;:32;;:::i;:::-;1297:10:8::1;1285:9;:22;;;;;;:::i;:::-;;1208:106:::0;356:6978;;640:96:6;693:7;719:10;712:17;;640:96;:::o;2433:187:0:-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;7:99:9:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:180::-;160:77;157:1;150:88;257:4;254:1;247:15;281:4;278:1;271:15;298:180;346:77;343:1;336:88;443:4;440:1;433:15;467:4;464:1;457:15;484:320;528:6;565:1;559:4;555:12;545:22;;612:1;606:4;602:12;633:18;623:81;;689:4;681:6;677:17;667:27;;623:81;751:2;743:6;740:14;720:18;717:38;714:84;;770:18;;:::i;:::-;714:84;535:269;484:320;;;:::o;810:140::-;858:4;881:3;873:11;;904:3;901:1;894:14;938:4;935:1;925:18;917:26;;810:140;;;:::o;956:93::-;993:6;1040:2;1035;1028:5;1024:14;1020:23;1010:33;;956:93;;;:::o;1055:107::-;1099:8;1149:5;1143:4;1139:16;1118:37;;1055:107;;;;:::o;1168:393::-;1237:6;1287:1;1275:10;1271:18;1310:97;1340:66;1329:9;1310:97;:::i;:::-;1428:39;1458:8;1447:9;1428:39;:::i;:::-;1416:51;;1500:4;1496:9;1489:5;1485:21;1476:30;;1549:4;1539:8;1535:19;1528:5;1525:30;1515:40;;1244:317;;1168:393;;;;;:::o;1567:77::-;1604:7;1633:5;1622:16;;1567:77;;;:::o;1650:60::-;1678:3;1699:5;1692:12;;1650:60;;;:::o;1716:142::-;1766:9;1799:53;1817:34;1826:24;1844:5;1826:24;:::i;:::-;1817:34;:::i;:::-;1799:53;:::i;:::-;1786:66;;1716:142;;;:::o;1864:75::-;1907:3;1928:5;1921:12;;1864:75;;;:::o;1945:269::-;2055:39;2086:7;2055:39;:::i;:::-;2116:91;2165:41;2189:16;2165:41;:::i;:::-;2157:6;2150:4;2144:11;2116:91;:::i;:::-;2110:4;2103:105;2021:193;1945:269;;;:::o;2220:73::-;2265:3;2220:73;:::o;2299:189::-;2376:32;;:::i;:::-;2417:65;2475:6;2467;2461:4;2417:65;:::i;:::-;2352:136;2299:189;;:::o;2494:186::-;2554:120;2571:3;2564:5;2561:14;2554:120;;;2625:39;2662:1;2655:5;2625:39;:::i;:::-;2598:1;2591:5;2587:13;2578:22;;2554:120;;;2494:186;;:::o;2686:541::-;2786:2;2781:3;2778:11;2775:445;;;2820:37;2851:5;2820:37;:::i;:::-;2903:29;2921:10;2903:29;:::i;:::-;2893:8;2889:44;3086:2;3074:10;3071:18;3068:49;;;3107:8;3092:23;;3068:49;3130:80;3186:22;3204:3;3186:22;:::i;:::-;3176:8;3172:37;3159:11;3130:80;:::i;:::-;2790:430;;2775:445;2686:541;;;:::o;3233:117::-;3287:8;3337:5;3331:4;3327:16;3306:37;;3233:117;;;;:::o;3356:169::-;3400:6;3433:51;3481:1;3477:6;3469:5;3466:1;3462:13;3433:51;:::i;:::-;3429:56;3514:4;3508;3504:15;3494:25;;3407:118;3356:169;;;;:::o;3530:295::-;3606:4;3752:29;3777:3;3771:4;3752:29;:::i;:::-;3744:37;;3814:3;3811:1;3807:11;3801:4;3798:21;3790:29;;3530:295;;;;:::o;3830:1392::-;3946:37;3979:3;3946:37;:::i;:::-;4048:18;4040:6;4037:30;4034:56;;;4070:18;;:::i;:::-;4034:56;4114:38;4146:4;4140:11;4114:38;:::i;:::-;4199:66;4258:6;4250;4244:4;4199:66;:::i;:::-;4292:1;4316:4;4303:17;;4348:2;4340:6;4337:14;4365:1;4360:617;;;;5021:1;5038:6;5035:77;;;5087:9;5082:3;5078:19;5072:26;5063:35;;5035:77;5138:67;5198:6;5191:5;5138:67;:::i;:::-;5132:4;5125:81;4994:222;4330:886;;4360:617;4412:4;4408:9;4400:6;4396:22;4446:36;4477:4;4446:36;:::i;:::-;4504:1;4518:208;4532:7;4529:1;4526:14;4518:208;;;4611:9;4606:3;4602:19;4596:26;4588:6;4581:42;4662:1;4654:6;4650:14;4640:24;;4709:2;4698:9;4694:18;4681:31;;4555:4;4552:1;4548:12;4543:17;;4518:208;;;4754:6;4745:7;4742:19;4739:179;;;4812:9;4807:3;4803:19;4797:26;4855:48;4897:4;4889:6;4885:17;4874:9;4855:48;:::i;:::-;4847:6;4840:64;4762:156;4739:179;4964:1;4960;4952:6;4948:14;4944:22;4938:4;4931:36;4367:610;;;4330:886;;3921:1301;;;3830:1392;;:::o;5228:75::-;5261:6;5294:2;5288:9;5278:19;;5228:75;:::o;5309:117::-;5418:1;5415;5408:12;5432:117;5541:1;5538;5531:12;5555:117;5664:1;5661;5654:12;5678:117;5787:1;5784;5777:12;5801:102;5842:6;5893:2;5889:7;5884:2;5877:5;5873:14;5869:28;5859:38;;5801:102;;;:::o;5909:281::-;5992:27;6014:4;5992:27;:::i;:::-;5984:6;5980:40;6122:6;6110:10;6107:22;6086:18;6074:10;6071:34;6068:62;6065:88;;;6133:18;;:::i;:::-;6065:88;6173:10;6169:2;6162:22;5952:238;5909:281;;:::o;6196:129::-;6230:6;6257:20;;:::i;:::-;6247:30;;6286:33;6314:4;6306:6;6286:33;:::i;:::-;6196:129;;;:::o;6331:307::-;6392:4;6482:18;6474:6;6471:30;6468:56;;;6504:18;;:::i;:::-;6468:56;6542:29;6564:6;6542:29;:::i;:::-;6534:37;;6626:4;6620;6616:15;6608:23;;6331:307;;;:::o;6644:246::-;6725:1;6735:113;6749:6;6746:1;6743:13;6735:113;;;6834:1;6829:3;6825:11;6819:18;6815:1;6810:3;6806:11;6799:39;6771:2;6768:1;6764:10;6759:15;;6735:113;;;6882:1;6873:6;6868:3;6864:16;6857:27;6706:184;6644:246;;;:::o;6896:432::-;6984:5;7009:65;7025:48;7066:6;7025:48;:::i;:::-;7009:65;:::i;:::-;7000:74;;7097:6;7090:5;7083:21;7135:4;7128:5;7124:16;7173:3;7164:6;7159:3;7155:16;7152:25;7149:112;;;7180:79;;:::i;:::-;7149:112;7270:52;7315:6;7310:3;7305;7270:52;:::i;:::-;6990:338;6896:432;;;;;:::o;7347:353::-;7413:5;7462:3;7455:4;7447:6;7443:17;7439:27;7429:122;;7470:79;;:::i;:::-;7429:122;7580:6;7574:13;7605:89;7690:3;7682:6;7675:4;7667:6;7663:17;7605:89;:::i;:::-;7596:98;;7419:281;7347:353;;;;:::o;7706:522::-;7785:6;7834:2;7822:9;7813:7;7809:23;7805:32;7802:119;;;7840:79;;:::i;:::-;7802:119;7981:1;7970:9;7966:17;7960:24;8011:18;8003:6;8000:30;7997:117;;;8033:79;;:::i;:::-;7997:117;8138:73;8203:7;8194:6;8183:9;8179:22;8138:73;:::i;:::-;8128:83;;7931:290;7706:522;;;;:::o;8234:141::-;8283:4;8306:3;8298:11;;8329:3;8326:1;8319:14;8363:4;8360:1;8350:18;8342:26;;8234:141;;;:::o;8381:543::-;8482:2;8477:3;8474:11;8471:446;;;8516:38;8548:5;8516:38;:::i;:::-;8600:29;8618:10;8600:29;:::i;:::-;8590:8;8586:44;8783:2;8771:10;8768:18;8765:49;;;8804:8;8789:23;;8765:49;8827:80;8883:22;8901:3;8883:22;:::i;:::-;8873:8;8869:37;8856:11;8827:80;:::i;:::-;8486:431;;8471:446;8381:543;;;:::o;8930:1395::-;9047:37;9080:3;9047:37;:::i;:::-;9149:18;9141:6;9138:30;9135:56;;;9171:18;;:::i;:::-;9135:56;9215:38;9247:4;9241:11;9215:38;:::i;:::-;9300:67;9360:6;9352;9346:4;9300:67;:::i;:::-;9394:1;9418:4;9405:17;;9450:2;9442:6;9439:14;9467:1;9462:618;;;;10124:1;10141:6;10138:77;;;10190:9;10185:3;10181:19;10175:26;10166:35;;10138:77;10241:67;10301:6;10294:5;10241:67;:::i;:::-;10235:4;10228:81;10097:222;9432:887;;9462:618;9514:4;9510:9;9502:6;9498:22;9548:37;9580:4;9548:37;:::i;:::-;9607:1;9621:208;9635:7;9632:1;9629:14;9621:208;;;9714:9;9709:3;9705:19;9699:26;9691:6;9684:42;9765:1;9757:6;9753:14;9743:24;;9812:2;9801:9;9797:18;9784:31;;9658:4;9655:1;9651:12;9646:17;;9621:208;;;9857:6;9848:7;9845:19;9842:179;;;9915:9;9910:3;9906:19;9900:26;9958:48;10000:4;9992:6;9988:17;9977:9;9958:48;:::i;:::-;9950:6;9943:64;9865:156;9842:179;10067:1;10063;10055:6;10051:14;10047:22;10041:4;10034:36;9469:611;;;9432:887;;9022:1303;;;8930:1395;;:::o;10331:98::-;10382:6;10416:5;10410:12;10400:22;;10331:98;;;:::o;10435:1390::-;10550:36;10582:3;10550:36;:::i;:::-;10651:18;10643:6;10640:30;10637:56;;;10673:18;;:::i;:::-;10637:56;10717:38;10749:4;10743:11;10717:38;:::i;:::-;10802:66;10861:6;10853;10847:4;10802:66;:::i;:::-;10895:1;10919:4;10906:17;;10951:2;10943:6;10940:14;10968:1;10963:617;;;;11624:1;11641:6;11638:77;;;11690:9;11685:3;11681:19;11675:26;11666:35;;11638:77;11741:67;11801:6;11794:5;11741:67;:::i;:::-;11735:4;11728:81;11597:222;10933:886;;10963:617;11015:4;11011:9;11003:6;10999:22;11049:36;11080:4;11049:36;:::i;:::-;11107:1;11121:208;11135:7;11132:1;11129:14;11121:208;;;11214:9;11209:3;11205:19;11199:26;11191:6;11184:42;11265:1;11257:6;11253:14;11243:24;;11312:2;11301:9;11297:18;11284:31;;11158:4;11155:1;11151:12;11146:17;;11121:208;;;11357:6;11348:7;11345:19;11342:179;;;11415:9;11410:3;11406:19;11400:26;11458:48;11500:4;11492:6;11488:17;11477:9;11458:48;:::i;:::-;11450:6;11443:64;11365:156;11342:179;11567:1;11563;11555:6;11551:14;11547:22;11541:4;11534:36;10970:610;;;10933:886;;10525:1300;;;10435:1390;;:::o;356:6978:8:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_afterTokenTransfer_806":{"entryPoint":7213,"id":806,"parameterSlots":3,"returnSlots":0},"@_approve_741":{"entryPoint":4076,"id":741,"parameterSlots":3,"returnSlots":0},"@_beforeTokenTransfer_1445":{"entryPoint":7189,"id":1445,"parameterSlots":3,"returnSlots":0},"@_beforeTokenTransfer_795":{"entryPoint":7370,"id":795,"parameterSlots":3,"returnSlots":0},"@_buildParamsHash_1665":{"entryPoint":7313,"id":1665,"parameterSlots":4,"returnSlots":1},"@_burn_696":{"entryPoint":5602,"id":696,"parameterSlots":2,"returnSlots":0},"@_checkOwner_54":{"entryPoint":5377,"id":54,"parameterSlots":0,"returnSlots":0},"@_mint_624":{"entryPoint":6404,"id":624,"parameterSlots":2,"returnSlots":0},"@_msgSender_966":{"entryPoint":4068,"id":966,"parameterSlots":0,"returnSlots":1},"@_pause_203":{"entryPoint":6261,"id":203,"parameterSlots":0,"returnSlots":0},"@_processMintRequest_1640":{"entryPoint":6746,"id":1640,"parameterSlots":4,"returnSlots":2},"@_requireNotPaused_176":{"entryPoint":4533,"id":176,"parameterSlots":0,"returnSlots":0},"@_requirePaused_187":{"entryPoint":7218,"id":187,"parameterSlots":0,"returnSlots":0},"@_spendAllowance_784":{"entryPoint":4607,"id":784,"parameterSlots":3,"returnSlots":0},"@_transferOwnership_111":{"entryPoint":6063,"id":111,"parameterSlots":1,"returnSlots":0},"@_transfer_567":{"entryPoint":4747,"id":567,"parameterSlots":3,"returnSlots":0},"@_unpause_219":{"entryPoint":5503,"id":219,"parameterSlots":0,"returnSlots":0},"@actualMintedPercentage_1320":{"entryPoint":2119,"id":1320,"parameterSlots":0,"returnSlots":0},"@add_1152":{"entryPoint":7291,"id":1152,"parameterSlots":2,"returnSlots":1},"@allowance_362":{"entryPoint":3802,"id":362,"parameterSlots":2,"returnSlots":1},"@approve_387":{"entryPoint":1573,"id":387,"parameterSlots":2,"returnSlots":1},"@authGranted_1530":{"entryPoint":1623,"id":1530,"parameterSlots":3,"returnSlots":0},"@authRequest_1504":{"entryPoint":2856,"id":1504,"parameterSlots":3,"returnSlots":0},"@balanceOf_319":{"entryPoint":2407,"id":319,"parameterSlots":1,"returnSlots":1},"@burnFrom_928":{"entryPoint":2499,"id":928,"parameterSlots":2,"returnSlots":0},"@burn_907":{"entryPoint":2222,"id":907,"parameterSlots":1,"returnSlots":0},"@decimals_295":{"entryPoint":2049,"id":295,"parameterSlots":0,"returnSlots":1},"@decreaseAllowance_490":{"entryPoint":2737,"id":490,"parameterSlots":2,"returnSlots":1},"@div_1197":{"entryPoint":6382,"id":1197,"parameterSlots":2,"returnSlots":1},"@getExpiryTime_1309":{"entryPoint":2043,"id":1309,"parameterSlots":0,"returnSlots":0},"@increaseAllowance_449":{"entryPoint":2064,"id":449,"parameterSlots":2,"returnSlots":1},"@mintRequest_1476":{"entryPoint":3683,"id":1476,"parameterSlots":3,"returnSlots":0},"@mint_1424":{"entryPoint":2155,"id":1424,"parameterSlots":2,"returnSlots":0},"@mul_1182":{"entryPoint":6360,"id":1182,"parameterSlots":2,"returnSlots":1},"@name_275":{"entryPoint":1427,"id":275,"parameterSlots":0,"returnSlots":1},"@oneHundredPercent_1315":{"entryPoint":2058,"id":1315,"parameterSlots":0,"returnSlots":0},"@owner_40":{"entryPoint":2549,"id":40,"parameterSlots":0,"returnSlots":1},"@pause_1388":{"entryPoint":2531,"id":1388,"parameterSlots":0,"returnSlots":0},"@paused_164":{"entryPoint":2242,"id":164,"parameterSlots":0,"returnSlots":1},"@paymentComplete_1574":{"entryPoint":3276,"id":1574,"parameterSlots":1,"returnSlots":0},"@publicKey_1323":{"entryPoint":2265,"id":1323,"parameterSlots":0,"returnSlots":0},"@renounceOwnership_68":{"entryPoint":2479,"id":68,"parameterSlots":0,"returnSlots":0},"@seignorageFee_1312":{"entryPoint":1608,"id":1312,"parameterSlots":0,"returnSlots":0},"@setPublicKey_1409":{"entryPoint":3249,"id":1409,"parameterSlots":1,"returnSlots":0},"@symbol_285":{"entryPoint":2591,"id":285,"parameterSlots":0,"returnSlots":1},"@totalSupply_305":{"entryPoint":1613,"id":305,"parameterSlots":0,"returnSlots":1},"@transferFrom_420":{"entryPoint":1996,"id":420,"parameterSlots":3,"returnSlots":1},"@transferOwnership_91":{"entryPoint":3937,"id":91,"parameterSlots":1,"returnSlots":0},"@transfer_344":{"entryPoint":3214,"id":344,"parameterSlots":2,"returnSlots":1},"@unpause_1397":{"entryPoint":2137,"id":1397,"parameterSlots":0,"returnSlots":0},"abi_decode_available_length_t_bytes_memory_ptr":{"entryPoint":8713,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":7646,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32":{"entryPoint":7914,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_calldata_ptr":{"entryPoint":7950,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_t_bytes_memory_ptr":{"entryPoint":8779,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":7700,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":8434,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":9039,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":8132,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":7721,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes32":{"entryPoint":8898,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32t_bytes_calldata_ptr":{"entryPoint":8036,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_bytes_memory_ptr":{"entryPoint":8825,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":8270,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_bytes_calldata_ptr":{"entryPoint":8943,"id":null,"parameterSlots":2,"returnSlots":3},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":8479,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack":{"entryPoint":12522,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":7797,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack":{"entryPoint":9415,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":12589,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack":{"entryPoint":8343,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":7462,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_03ea8cfeff0459e125641b51ffaeaacb881b172abb4a1cae381360ba7e33f193_to_t_string_memory_ptr_fromStack":{"entryPoint":9240,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack":{"entryPoint":11590,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack":{"entryPoint":12872,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd_to_t_string_memory_ptr_fromStack":{"entryPoint":12136,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_178737e5f8d3bb08805c837a16fa9250a9a3808ba7fad1041b7fb05f30c86cda_to_t_string_memory_ptr_fromStack":{"entryPoint":9942,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack":{"entryPoint":10790,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack":{"entryPoint":11082,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_3171005413b2d9c41f1a7950fecbe6684be54180b50a3918c59874ae6ee26d66_to_t_string_memory_ptr_fromStack":{"entryPoint":9348,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack":{"entryPoint":11298,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack":{"entryPoint":11736,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack":{"entryPoint":11190,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_6e0ba3ea59b30a840c0b797c7d04b6c612b68aaacf304abeb8524b82759a6e30_to_t_string_memory_ptr_fromStack":{"entryPoint":9688,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_955d5c03ae98365b3505eba00b7e6d4dd87685869b10aacdc7b60c110ca7e23f_to_t_string_memory_ptr_fromStack":{"entryPoint":12764,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack":{"entryPoint":11844,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f_to_t_string_memory_ptr_fromStack":{"entryPoint":11990,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack":{"entryPoint":11444,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack":{"entryPoint":10936,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack":{"entryPoint":9834,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack":{"entryPoint":12406,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":7839,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack":{"entryPoint":12555,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint8_to_t_uint8_fromStack":{"entryPoint":8228,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_address_t_uint256_t_bytes_calldata_ptr__to_t_address_t_uint256_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":12626,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_packed_t_uint256_t_bytes_calldata_ptr_t_uint256__to_t_uint256_t_bytes_memory_ptr_t_uint256__nonPadded_inplace_fromStack_reversed":{"entryPoint":12939,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":8494,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":7812,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":9460,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":8400,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7519,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_03ea8cfeff0459e125641b51ffaeaacb881b172abb4a1cae381360ba7e33f193__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":9275,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":11625,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":12907,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":12171,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_178737e5f8d3bb08805c837a16fa9250a9a3808ba7fad1041b7fb05f30c86cda__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":9977,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":10825,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":11117,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3171005413b2d9c41f1a7950fecbe6684be54180b50a3918c59874ae6ee26d66__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":9383,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":11333,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":11771,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":11225,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_6e0ba3ea59b30a840c0b797c7d04b6c612b68aaacf304abeb8524b82759a6e30__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":9723,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_955d5c03ae98365b3505eba00b7e6d4dd87685869b10aacdc7b60c110ca7e23f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":12799,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":11879,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":12025,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":11479,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":10971,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":9869,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":12441,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":7854,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256_t_bytes_calldata_ptr__to_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":10647,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":8243,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":8622,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":7553,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_bytes_memory_ptr":{"entryPoint":8649,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_bytes_storage":{"entryPoint":10009,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":8315,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":7375,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack":{"entryPoint":8326,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":12578,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":7386,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":9543,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":12316,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":12203,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":9595,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_t_bytes_storage":{"entryPoint":10296,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_address":{"entryPoint":7605,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":7785,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":7881,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":7573,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":7667,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":8215,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":10261,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_uint256_to_t_uint256":{"entryPoint":10151,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_bytes_memory_ptr_to_t_bytes_storage":{"entryPoint":10437,"id":null,"parameterSlots":2,"returnSlots":0},"copy_calldata_to_memory_with_cleanup":{"entryPoint":8698,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":7403,"id":null,"parameterSlots":3,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":10030,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":9150,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":10409,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":8573,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":10141,"id":null,"parameterSlots":1,"returnSlots":1},"leftAlign_t_address":{"entryPoint":12504,"id":null,"parameterSlots":1,"returnSlots":1},"leftAlign_t_uint160":{"entryPoint":12486,"id":null,"parameterSlots":1,"returnSlots":1},"leftAlign_t_uint256":{"entryPoint":12545,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":10379,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":9496,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":12269,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":9103,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":8526,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":10185,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490":{"entryPoint":7940,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":7935,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":7945,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":8521,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":7568,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":7563,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":7445,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_96":{"entryPoint":12473,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":10046,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":10366,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":10237,"id":null,"parameterSlots":2,"returnSlots":0},"store_literal_in_memory_03ea8cfeff0459e125641b51ffaeaacb881b172abb4a1cae381360ba7e33f193":{"entryPoint":9199,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f":{"entryPoint":11511,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a":{"entryPoint":12831,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd":{"entryPoint":12057,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_178737e5f8d3bb08805c837a16fa9250a9a3808ba7fad1041b7fb05f30c86cda":{"entryPoint":9901,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe":{"entryPoint":10711,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029":{"entryPoint":11003,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_3171005413b2d9c41f1a7950fecbe6684be54180b50a3918c59874ae6ee26d66":{"entryPoint":9307,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe":{"entryPoint":11257,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6":{"entryPoint":11657,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a":{"entryPoint":11149,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_6e0ba3ea59b30a840c0b797c7d04b6c612b68aaacf304abeb8524b82759a6e30":{"entryPoint":9647,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_955d5c03ae98365b3505eba00b7e6d4dd87685869b10aacdc7b60c110ca7e23f":{"entryPoint":12685,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe":{"entryPoint":11803,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f":{"entryPoint":11911,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea":{"entryPoint":11365,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208":{"entryPoint":10857,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8":{"entryPoint":9755,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e":{"entryPoint":12365,"id":null,"parameterSlots":1,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":10059,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":10195,"id":null,"parameterSlots":3,"returnSlots":0},"validator_revert_t_address":{"entryPoint":7623,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes32":{"entryPoint":7891,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":7677,"id":null,"parameterSlots":1,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":10232,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:41695:9","statements":[{"body":{"nodeType":"YulBlock","src":"66:40:9","statements":[{"nodeType":"YulAssignment","src":"77:22:9","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"93:5:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"87:5:9"},"nodeType":"YulFunctionCall","src":"87:12:9"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"77:6:9"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"49:5:9","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"59:6:9","type":""}],"src":"7:99:9"},{"body":{"nodeType":"YulBlock","src":"208:73:9","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"225:3:9"},{"name":"length","nodeType":"YulIdentifier","src":"230:6:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"218:6:9"},"nodeType":"YulFunctionCall","src":"218:19:9"},"nodeType":"YulExpressionStatement","src":"218:19:9"},{"nodeType":"YulAssignment","src":"246:29:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"265:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"270:4:9","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"261:3:9"},"nodeType":"YulFunctionCall","src":"261:14:9"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"246:11:9"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"180:3:9","type":""},{"name":"length","nodeType":"YulTypedName","src":"185:6:9","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"196:11:9","type":""}],"src":"112:169:9"},{"body":{"nodeType":"YulBlock","src":"349:184:9","statements":[{"nodeType":"YulVariableDeclaration","src":"359:10:9","value":{"kind":"number","nodeType":"YulLiteral","src":"368:1:9","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"363:1:9","type":""}]},{"body":{"nodeType":"YulBlock","src":"428:63:9","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"453:3:9"},{"name":"i","nodeType":"YulIdentifier","src":"458:1:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"449:3:9"},"nodeType":"YulFunctionCall","src":"449:11:9"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"472:3:9"},{"name":"i","nodeType":"YulIdentifier","src":"477:1:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"468:3:9"},"nodeType":"YulFunctionCall","src":"468:11:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"462:5:9"},"nodeType":"YulFunctionCall","src":"462:18:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"442:6:9"},"nodeType":"YulFunctionCall","src":"442:39:9"},"nodeType":"YulExpressionStatement","src":"442:39:9"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"389:1:9"},{"name":"length","nodeType":"YulIdentifier","src":"392:6:9"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"386:2:9"},"nodeType":"YulFunctionCall","src":"386:13:9"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"400:19:9","statements":[{"nodeType":"YulAssignment","src":"402:15:9","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"411:1:9"},{"kind":"number","nodeType":"YulLiteral","src":"414:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"407:3:9"},"nodeType":"YulFunctionCall","src":"407:10:9"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"402:1:9"}]}]},"pre":{"nodeType":"YulBlock","src":"382:3:9","statements":[]},"src":"378:113:9"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"511:3:9"},{"name":"length","nodeType":"YulIdentifier","src":"516:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"507:3:9"},"nodeType":"YulFunctionCall","src":"507:16:9"},{"kind":"number","nodeType":"YulLiteral","src":"525:1:9","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"500:6:9"},"nodeType":"YulFunctionCall","src":"500:27:9"},"nodeType":"YulExpressionStatement","src":"500:27:9"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"331:3:9","type":""},{"name":"dst","nodeType":"YulTypedName","src":"336:3:9","type":""},{"name":"length","nodeType":"YulTypedName","src":"341:6:9","type":""}],"src":"287:246:9"},{"body":{"nodeType":"YulBlock","src":"587:54:9","statements":[{"nodeType":"YulAssignment","src":"597:38:9","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"615:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"622:2:9","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"611:3:9"},"nodeType":"YulFunctionCall","src":"611:14:9"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"631:2:9","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"627:3:9"},"nodeType":"YulFunctionCall","src":"627:7:9"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"607:3:9"},"nodeType":"YulFunctionCall","src":"607:28:9"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"597:6:9"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"570:5:9","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"580:6:9","type":""}],"src":"539:102:9"},{"body":{"nodeType":"YulBlock","src":"739:285:9","statements":[{"nodeType":"YulVariableDeclaration","src":"749:53:9","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"796:5:9"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"763:32:9"},"nodeType":"YulFunctionCall","src":"763:39:9"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"753:6:9","type":""}]},{"nodeType":"YulAssignment","src":"811:78:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"877:3:9"},{"name":"length","nodeType":"YulIdentifier","src":"882:6:9"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"818:58:9"},"nodeType":"YulFunctionCall","src":"818:71:9"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"811:3:9"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"937:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"944:4:9","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"933:3:9"},"nodeType":"YulFunctionCall","src":"933:16:9"},{"name":"pos","nodeType":"YulIdentifier","src":"951:3:9"},{"name":"length","nodeType":"YulIdentifier","src":"956:6:9"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"898:34:9"},"nodeType":"YulFunctionCall","src":"898:65:9"},"nodeType":"YulExpressionStatement","src":"898:65:9"},{"nodeType":"YulAssignment","src":"972:46:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"983:3:9"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1010:6:9"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"988:21:9"},"nodeType":"YulFunctionCall","src":"988:29:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"979:3:9"},"nodeType":"YulFunctionCall","src":"979:39:9"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"972:3:9"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"720:5:9","type":""},{"name":"pos","nodeType":"YulTypedName","src":"727:3:9","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"735:3:9","type":""}],"src":"647:377:9"},{"body":{"nodeType":"YulBlock","src":"1148:195:9","statements":[{"nodeType":"YulAssignment","src":"1158:26:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1170:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"1181:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1166:3:9"},"nodeType":"YulFunctionCall","src":"1166:18:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1158:4:9"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1205:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"1216:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1201:3:9"},"nodeType":"YulFunctionCall","src":"1201:17:9"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"1224:4:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"1230:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1220:3:9"},"nodeType":"YulFunctionCall","src":"1220:20:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1194:6:9"},"nodeType":"YulFunctionCall","src":"1194:47:9"},"nodeType":"YulExpressionStatement","src":"1194:47:9"},{"nodeType":"YulAssignment","src":"1250:86:9","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1322:6:9"},{"name":"tail","nodeType":"YulIdentifier","src":"1331:4:9"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"1258:63:9"},"nodeType":"YulFunctionCall","src":"1258:78:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1250:4:9"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1120:9:9","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1132:6:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1143:4:9","type":""}],"src":"1030:313:9"},{"body":{"nodeType":"YulBlock","src":"1389:35:9","statements":[{"nodeType":"YulAssignment","src":"1399:19:9","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1415:2:9","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1409:5:9"},"nodeType":"YulFunctionCall","src":"1409:9:9"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1399:6:9"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1382:6:9","type":""}],"src":"1349:75:9"},{"body":{"nodeType":"YulBlock","src":"1519:28:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1536:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1539:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1529:6:9"},"nodeType":"YulFunctionCall","src":"1529:12:9"},"nodeType":"YulExpressionStatement","src":"1529:12:9"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"1430:117:9"},{"body":{"nodeType":"YulBlock","src":"1642:28:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1659:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1662:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1652:6:9"},"nodeType":"YulFunctionCall","src":"1652:12:9"},"nodeType":"YulExpressionStatement","src":"1652:12:9"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"1553:117:9"},{"body":{"nodeType":"YulBlock","src":"1721:81:9","statements":[{"nodeType":"YulAssignment","src":"1731:65:9","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1746:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"1753:42:9","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1742:3:9"},"nodeType":"YulFunctionCall","src":"1742:54:9"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1731:7:9"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1703:5:9","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1713:7:9","type":""}],"src":"1676:126:9"},{"body":{"nodeType":"YulBlock","src":"1853:51:9","statements":[{"nodeType":"YulAssignment","src":"1863:35:9","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1892:5:9"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"1874:17:9"},"nodeType":"YulFunctionCall","src":"1874:24:9"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1863:7:9"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1835:5:9","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1845:7:9","type":""}],"src":"1808:96:9"},{"body":{"nodeType":"YulBlock","src":"1953:79:9","statements":[{"body":{"nodeType":"YulBlock","src":"2010:16:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2019:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2022:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2012:6:9"},"nodeType":"YulFunctionCall","src":"2012:12:9"},"nodeType":"YulExpressionStatement","src":"2012:12:9"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1976:5:9"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2001:5:9"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"1983:17:9"},"nodeType":"YulFunctionCall","src":"1983:24:9"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1973:2:9"},"nodeType":"YulFunctionCall","src":"1973:35:9"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1966:6:9"},"nodeType":"YulFunctionCall","src":"1966:43:9"},"nodeType":"YulIf","src":"1963:63:9"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1946:5:9","type":""}],"src":"1910:122:9"},{"body":{"nodeType":"YulBlock","src":"2090:87:9","statements":[{"nodeType":"YulAssignment","src":"2100:29:9","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2122:6:9"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2109:12:9"},"nodeType":"YulFunctionCall","src":"2109:20:9"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2100:5:9"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2165:5:9"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"2138:26:9"},"nodeType":"YulFunctionCall","src":"2138:33:9"},"nodeType":"YulExpressionStatement","src":"2138:33:9"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2068:6:9","type":""},{"name":"end","nodeType":"YulTypedName","src":"2076:3:9","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2084:5:9","type":""}],"src":"2038:139:9"},{"body":{"nodeType":"YulBlock","src":"2228:32:9","statements":[{"nodeType":"YulAssignment","src":"2238:16:9","value":{"name":"value","nodeType":"YulIdentifier","src":"2249:5:9"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2238:7:9"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2210:5:9","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2220:7:9","type":""}],"src":"2183:77:9"},{"body":{"nodeType":"YulBlock","src":"2309:79:9","statements":[{"body":{"nodeType":"YulBlock","src":"2366:16:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2375:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2378:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2368:6:9"},"nodeType":"YulFunctionCall","src":"2368:12:9"},"nodeType":"YulExpressionStatement","src":"2368:12:9"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2332:5:9"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2357:5:9"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"2339:17:9"},"nodeType":"YulFunctionCall","src":"2339:24:9"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2329:2:9"},"nodeType":"YulFunctionCall","src":"2329:35:9"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2322:6:9"},"nodeType":"YulFunctionCall","src":"2322:43:9"},"nodeType":"YulIf","src":"2319:63:9"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2302:5:9","type":""}],"src":"2266:122:9"},{"body":{"nodeType":"YulBlock","src":"2446:87:9","statements":[{"nodeType":"YulAssignment","src":"2456:29:9","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2478:6:9"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2465:12:9"},"nodeType":"YulFunctionCall","src":"2465:20:9"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2456:5:9"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2521:5:9"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"2494:26:9"},"nodeType":"YulFunctionCall","src":"2494:33:9"},"nodeType":"YulExpressionStatement","src":"2494:33:9"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2424:6:9","type":""},{"name":"end","nodeType":"YulTypedName","src":"2432:3:9","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2440:5:9","type":""}],"src":"2394:139:9"},{"body":{"nodeType":"YulBlock","src":"2622:391:9","statements":[{"body":{"nodeType":"YulBlock","src":"2668:83:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2670:77:9"},"nodeType":"YulFunctionCall","src":"2670:79:9"},"nodeType":"YulExpressionStatement","src":"2670:79:9"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2643:7:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"2652:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2639:3:9"},"nodeType":"YulFunctionCall","src":"2639:23:9"},{"kind":"number","nodeType":"YulLiteral","src":"2664:2:9","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2635:3:9"},"nodeType":"YulFunctionCall","src":"2635:32:9"},"nodeType":"YulIf","src":"2632:119:9"},{"nodeType":"YulBlock","src":"2761:117:9","statements":[{"nodeType":"YulVariableDeclaration","src":"2776:15:9","value":{"kind":"number","nodeType":"YulLiteral","src":"2790:1:9","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2780:6:9","type":""}]},{"nodeType":"YulAssignment","src":"2805:63:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2840:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"2851:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2836:3:9"},"nodeType":"YulFunctionCall","src":"2836:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2860:7:9"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2815:20:9"},"nodeType":"YulFunctionCall","src":"2815:53:9"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2805:6:9"}]}]},{"nodeType":"YulBlock","src":"2888:118:9","statements":[{"nodeType":"YulVariableDeclaration","src":"2903:16:9","value":{"kind":"number","nodeType":"YulLiteral","src":"2917:2:9","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2907:6:9","type":""}]},{"nodeType":"YulAssignment","src":"2933:63:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2968:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"2979:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2964:3:9"},"nodeType":"YulFunctionCall","src":"2964:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2988:7:9"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"2943:20:9"},"nodeType":"YulFunctionCall","src":"2943:53:9"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2933:6:9"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2584:9:9","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2595:7:9","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2607:6:9","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2615:6:9","type":""}],"src":"2539:474:9"},{"body":{"nodeType":"YulBlock","src":"3061:48:9","statements":[{"nodeType":"YulAssignment","src":"3071:32:9","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3096:5:9"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3089:6:9"},"nodeType":"YulFunctionCall","src":"3089:13:9"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3082:6:9"},"nodeType":"YulFunctionCall","src":"3082:21:9"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3071:7:9"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3043:5:9","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3053:7:9","type":""}],"src":"3019:90:9"},{"body":{"nodeType":"YulBlock","src":"3174:50:9","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3191:3:9"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3211:5:9"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"3196:14:9"},"nodeType":"YulFunctionCall","src":"3196:21:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3184:6:9"},"nodeType":"YulFunctionCall","src":"3184:34:9"},"nodeType":"YulExpressionStatement","src":"3184:34:9"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3162:5:9","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3169:3:9","type":""}],"src":"3115:109:9"},{"body":{"nodeType":"YulBlock","src":"3322:118:9","statements":[{"nodeType":"YulAssignment","src":"3332:26:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3344:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"3355:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3340:3:9"},"nodeType":"YulFunctionCall","src":"3340:18:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3332:4:9"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3406:6:9"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3419:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"3430:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3415:3:9"},"nodeType":"YulFunctionCall","src":"3415:17:9"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"3368:37:9"},"nodeType":"YulFunctionCall","src":"3368:65:9"},"nodeType":"YulExpressionStatement","src":"3368:65:9"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3294:9:9","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3306:6:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3317:4:9","type":""}],"src":"3230:210:9"},{"body":{"nodeType":"YulBlock","src":"3511:53:9","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3528:3:9"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3551:5:9"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3533:17:9"},"nodeType":"YulFunctionCall","src":"3533:24:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3521:6:9"},"nodeType":"YulFunctionCall","src":"3521:37:9"},"nodeType":"YulExpressionStatement","src":"3521:37:9"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3499:5:9","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3506:3:9","type":""}],"src":"3446:118:9"},{"body":{"nodeType":"YulBlock","src":"3668:124:9","statements":[{"nodeType":"YulAssignment","src":"3678:26:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3690:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"3701:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3686:3:9"},"nodeType":"YulFunctionCall","src":"3686:18:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3678:4:9"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3758:6:9"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3771:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"3782:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3767:3:9"},"nodeType":"YulFunctionCall","src":"3767:17:9"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"3714:43:9"},"nodeType":"YulFunctionCall","src":"3714:71:9"},"nodeType":"YulExpressionStatement","src":"3714:71:9"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3640:9:9","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3652:6:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3663:4:9","type":""}],"src":"3570:222:9"},{"body":{"nodeType":"YulBlock","src":"3843:32:9","statements":[{"nodeType":"YulAssignment","src":"3853:16:9","value":{"name":"value","nodeType":"YulIdentifier","src":"3864:5:9"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3853:7:9"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3825:5:9","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3835:7:9","type":""}],"src":"3798:77:9"},{"body":{"nodeType":"YulBlock","src":"3924:79:9","statements":[{"body":{"nodeType":"YulBlock","src":"3981:16:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3990:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3993:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3983:6:9"},"nodeType":"YulFunctionCall","src":"3983:12:9"},"nodeType":"YulExpressionStatement","src":"3983:12:9"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3947:5:9"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3972:5:9"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"3954:17:9"},"nodeType":"YulFunctionCall","src":"3954:24:9"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3944:2:9"},"nodeType":"YulFunctionCall","src":"3944:35:9"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3937:6:9"},"nodeType":"YulFunctionCall","src":"3937:43:9"},"nodeType":"YulIf","src":"3934:63:9"}]},"name":"validator_revert_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3917:5:9","type":""}],"src":"3881:122:9"},{"body":{"nodeType":"YulBlock","src":"4061:87:9","statements":[{"nodeType":"YulAssignment","src":"4071:29:9","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4093:6:9"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4080:12:9"},"nodeType":"YulFunctionCall","src":"4080:20:9"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"4071:5:9"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4136:5:9"}],"functionName":{"name":"validator_revert_t_bytes32","nodeType":"YulIdentifier","src":"4109:26:9"},"nodeType":"YulFunctionCall","src":"4109:33:9"},"nodeType":"YulExpressionStatement","src":"4109:33:9"}]},"name":"abi_decode_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"4039:6:9","type":""},{"name":"end","nodeType":"YulTypedName","src":"4047:3:9","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"4055:5:9","type":""}],"src":"4009:139:9"},{"body":{"nodeType":"YulBlock","src":"4243:28:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4260:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4263:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4253:6:9"},"nodeType":"YulFunctionCall","src":"4253:12:9"},"nodeType":"YulExpressionStatement","src":"4253:12:9"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"4154:117:9"},{"body":{"nodeType":"YulBlock","src":"4366:28:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4383:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4386:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4376:6:9"},"nodeType":"YulFunctionCall","src":"4376:12:9"},"nodeType":"YulExpressionStatement","src":"4376:12:9"}]},"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulFunctionDefinition","src":"4277:117:9"},{"body":{"nodeType":"YulBlock","src":"4489:28:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4506:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4509:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4499:6:9"},"nodeType":"YulFunctionCall","src":"4499:12:9"},"nodeType":"YulExpressionStatement","src":"4499:12:9"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulFunctionDefinition","src":"4400:117:9"},{"body":{"nodeType":"YulBlock","src":"4610:478:9","statements":[{"body":{"nodeType":"YulBlock","src":"4659:83:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"4661:77:9"},"nodeType":"YulFunctionCall","src":"4661:79:9"},"nodeType":"YulExpressionStatement","src":"4661:79:9"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4638:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"4646:4:9","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4634:3:9"},"nodeType":"YulFunctionCall","src":"4634:17:9"},{"name":"end","nodeType":"YulIdentifier","src":"4653:3:9"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4630:3:9"},"nodeType":"YulFunctionCall","src":"4630:27:9"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4623:6:9"},"nodeType":"YulFunctionCall","src":"4623:35:9"},"nodeType":"YulIf","src":"4620:122:9"},{"nodeType":"YulAssignment","src":"4751:30:9","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4774:6:9"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4761:12:9"},"nodeType":"YulFunctionCall","src":"4761:20:9"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"4751:6:9"}]},{"body":{"nodeType":"YulBlock","src":"4824:83:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulIdentifier","src":"4826:77:9"},"nodeType":"YulFunctionCall","src":"4826:79:9"},"nodeType":"YulExpressionStatement","src":"4826:79:9"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4796:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"4804:18:9","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4793:2:9"},"nodeType":"YulFunctionCall","src":"4793:30:9"},"nodeType":"YulIf","src":"4790:117:9"},{"nodeType":"YulAssignment","src":"4916:29:9","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4932:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"4940:4:9","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4928:3:9"},"nodeType":"YulFunctionCall","src":"4928:17:9"},"variableNames":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"4916:8:9"}]},{"body":{"nodeType":"YulBlock","src":"4999:83:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"5001:77:9"},"nodeType":"YulFunctionCall","src":"5001:79:9"},"nodeType":"YulExpressionStatement","src":"5001:79:9"}]},"condition":{"arguments":[{"arguments":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"4964:8:9"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4978:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"4986:4:9","type":"","value":"0x01"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"4974:3:9"},"nodeType":"YulFunctionCall","src":"4974:17:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4960:3:9"},"nodeType":"YulFunctionCall","src":"4960:32:9"},{"name":"end","nodeType":"YulIdentifier","src":"4994:3:9"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4957:2:9"},"nodeType":"YulFunctionCall","src":"4957:41:9"},"nodeType":"YulIf","src":"4954:128:9"}]},"name":"abi_decode_t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"4577:6:9","type":""},{"name":"end","nodeType":"YulTypedName","src":"4585:3:9","type":""}],"returnVariables":[{"name":"arrayPos","nodeType":"YulTypedName","src":"4593:8:9","type":""},{"name":"length","nodeType":"YulTypedName","src":"4603:6:9","type":""}],"src":"4536:552:9"},{"body":{"nodeType":"YulBlock","src":"5196:570:9","statements":[{"body":{"nodeType":"YulBlock","src":"5242:83:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5244:77:9"},"nodeType":"YulFunctionCall","src":"5244:79:9"},"nodeType":"YulExpressionStatement","src":"5244:79:9"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5217:7:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"5226:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5213:3:9"},"nodeType":"YulFunctionCall","src":"5213:23:9"},{"kind":"number","nodeType":"YulLiteral","src":"5238:2:9","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5209:3:9"},"nodeType":"YulFunctionCall","src":"5209:32:9"},"nodeType":"YulIf","src":"5206:119:9"},{"nodeType":"YulBlock","src":"5335:117:9","statements":[{"nodeType":"YulVariableDeclaration","src":"5350:15:9","value":{"kind":"number","nodeType":"YulLiteral","src":"5364:1:9","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5354:6:9","type":""}]},{"nodeType":"YulAssignment","src":"5379:63:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5414:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"5425:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5410:3:9"},"nodeType":"YulFunctionCall","src":"5410:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5434:7:9"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"5389:20:9"},"nodeType":"YulFunctionCall","src":"5389:53:9"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5379:6:9"}]}]},{"nodeType":"YulBlock","src":"5462:297:9","statements":[{"nodeType":"YulVariableDeclaration","src":"5477:46:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5508:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"5519:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5504:3:9"},"nodeType":"YulFunctionCall","src":"5504:18:9"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5491:12:9"},"nodeType":"YulFunctionCall","src":"5491:32:9"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5481:6:9","type":""}]},{"body":{"nodeType":"YulBlock","src":"5570:83:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"5572:77:9"},"nodeType":"YulFunctionCall","src":"5572:79:9"},"nodeType":"YulExpressionStatement","src":"5572:79:9"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5542:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"5550:18:9","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5539:2:9"},"nodeType":"YulFunctionCall","src":"5539:30:9"},"nodeType":"YulIf","src":"5536:117:9"},{"nodeType":"YulAssignment","src":"5667:82:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5721:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"5732:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5717:3:9"},"nodeType":"YulFunctionCall","src":"5717:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5741:7:9"}],"functionName":{"name":"abi_decode_t_bytes_calldata_ptr","nodeType":"YulIdentifier","src":"5685:31:9"},"nodeType":"YulFunctionCall","src":"5685:64:9"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5667:6:9"},{"name":"value2","nodeType":"YulIdentifier","src":"5675:6:9"}]}]}]},"name":"abi_decode_tuple_t_bytes32t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5150:9:9","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5161:7:9","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5173:6:9","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5181:6:9","type":""},{"name":"value2","nodeType":"YulTypedName","src":"5189:6:9","type":""}],"src":"5094:672:9"},{"body":{"nodeType":"YulBlock","src":"5872:519:9","statements":[{"body":{"nodeType":"YulBlock","src":"5918:83:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5920:77:9"},"nodeType":"YulFunctionCall","src":"5920:79:9"},"nodeType":"YulExpressionStatement","src":"5920:79:9"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5893:7:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"5902:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5889:3:9"},"nodeType":"YulFunctionCall","src":"5889:23:9"},{"kind":"number","nodeType":"YulLiteral","src":"5914:2:9","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5885:3:9"},"nodeType":"YulFunctionCall","src":"5885:32:9"},"nodeType":"YulIf","src":"5882:119:9"},{"nodeType":"YulBlock","src":"6011:117:9","statements":[{"nodeType":"YulVariableDeclaration","src":"6026:15:9","value":{"kind":"number","nodeType":"YulLiteral","src":"6040:1:9","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6030:6:9","type":""}]},{"nodeType":"YulAssignment","src":"6055:63:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6090:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"6101:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6086:3:9"},"nodeType":"YulFunctionCall","src":"6086:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6110:7:9"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"6065:20:9"},"nodeType":"YulFunctionCall","src":"6065:53:9"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6055:6:9"}]}]},{"nodeType":"YulBlock","src":"6138:118:9","statements":[{"nodeType":"YulVariableDeclaration","src":"6153:16:9","value":{"kind":"number","nodeType":"YulLiteral","src":"6167:2:9","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6157:6:9","type":""}]},{"nodeType":"YulAssignment","src":"6183:63:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6218:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"6229:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6214:3:9"},"nodeType":"YulFunctionCall","src":"6214:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6238:7:9"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"6193:20:9"},"nodeType":"YulFunctionCall","src":"6193:53:9"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"6183:6:9"}]}]},{"nodeType":"YulBlock","src":"6266:118:9","statements":[{"nodeType":"YulVariableDeclaration","src":"6281:16:9","value":{"kind":"number","nodeType":"YulLiteral","src":"6295:2:9","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6285:6:9","type":""}]},{"nodeType":"YulAssignment","src":"6311:63:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6346:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"6357:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6342:3:9"},"nodeType":"YulFunctionCall","src":"6342:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6366:7:9"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"6321:20:9"},"nodeType":"YulFunctionCall","src":"6321:53:9"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"6311:6:9"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5826:9:9","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5837:7:9","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5849:6:9","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5857:6:9","type":""},{"name":"value2","nodeType":"YulTypedName","src":"5865:6:9","type":""}],"src":"5772:619:9"},{"body":{"nodeType":"YulBlock","src":"6440:43:9","statements":[{"nodeType":"YulAssignment","src":"6450:27:9","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6465:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"6472:4:9","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6461:3:9"},"nodeType":"YulFunctionCall","src":"6461:16:9"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"6450:7:9"}]}]},"name":"cleanup_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6422:5:9","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"6432:7:9","type":""}],"src":"6397:86:9"},{"body":{"nodeType":"YulBlock","src":"6550:51:9","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6567:3:9"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6588:5:9"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"6572:15:9"},"nodeType":"YulFunctionCall","src":"6572:22:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6560:6:9"},"nodeType":"YulFunctionCall","src":"6560:35:9"},"nodeType":"YulExpressionStatement","src":"6560:35:9"}]},"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6538:5:9","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6545:3:9","type":""}],"src":"6489:112:9"},{"body":{"nodeType":"YulBlock","src":"6701:120:9","statements":[{"nodeType":"YulAssignment","src":"6711:26:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6723:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"6734:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6719:3:9"},"nodeType":"YulFunctionCall","src":"6719:18:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6711:4:9"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6787:6:9"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6800:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"6811:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6796:3:9"},"nodeType":"YulFunctionCall","src":"6796:17:9"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"6747:39:9"},"nodeType":"YulFunctionCall","src":"6747:67:9"},"nodeType":"YulExpressionStatement","src":"6747:67:9"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6673:9:9","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6685:6:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6696:4:9","type":""}],"src":"6607:214:9"},{"body":{"nodeType":"YulBlock","src":"6893:263:9","statements":[{"body":{"nodeType":"YulBlock","src":"6939:83:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"6941:77:9"},"nodeType":"YulFunctionCall","src":"6941:79:9"},"nodeType":"YulExpressionStatement","src":"6941:79:9"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6914:7:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"6923:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6910:3:9"},"nodeType":"YulFunctionCall","src":"6910:23:9"},{"kind":"number","nodeType":"YulLiteral","src":"6935:2:9","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6906:3:9"},"nodeType":"YulFunctionCall","src":"6906:32:9"},"nodeType":"YulIf","src":"6903:119:9"},{"nodeType":"YulBlock","src":"7032:117:9","statements":[{"nodeType":"YulVariableDeclaration","src":"7047:15:9","value":{"kind":"number","nodeType":"YulLiteral","src":"7061:1:9","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7051:6:9","type":""}]},{"nodeType":"YulAssignment","src":"7076:63:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7111:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"7122:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7107:3:9"},"nodeType":"YulFunctionCall","src":"7107:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7131:7:9"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"7086:20:9"},"nodeType":"YulFunctionCall","src":"7086:53:9"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7076:6:9"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6863:9:9","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6874:7:9","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6886:6:9","type":""}],"src":"6827:329:9"},{"body":{"nodeType":"YulBlock","src":"7220:40:9","statements":[{"nodeType":"YulAssignment","src":"7231:22:9","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7247:5:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7241:5:9"},"nodeType":"YulFunctionCall","src":"7241:12:9"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"7231:6:9"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7203:5:9","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"7213:6:9","type":""}],"src":"7162:98:9"},{"body":{"nodeType":"YulBlock","src":"7361:73:9","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7378:3:9"},{"name":"length","nodeType":"YulIdentifier","src":"7383:6:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7371:6:9"},"nodeType":"YulFunctionCall","src":"7371:19:9"},"nodeType":"YulExpressionStatement","src":"7371:19:9"},{"nodeType":"YulAssignment","src":"7399:29:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7418:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"7423:4:9","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7414:3:9"},"nodeType":"YulFunctionCall","src":"7414:14:9"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"7399:11:9"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"7333:3:9","type":""},{"name":"length","nodeType":"YulTypedName","src":"7338:6:9","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"7349:11:9","type":""}],"src":"7266:168:9"},{"body":{"nodeType":"YulBlock","src":"7530:283:9","statements":[{"nodeType":"YulVariableDeclaration","src":"7540:52:9","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7586:5:9"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"7554:31:9"},"nodeType":"YulFunctionCall","src":"7554:38:9"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"7544:6:9","type":""}]},{"nodeType":"YulAssignment","src":"7601:77:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7666:3:9"},{"name":"length","nodeType":"YulIdentifier","src":"7671:6:9"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7608:57:9"},"nodeType":"YulFunctionCall","src":"7608:70:9"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7601:3:9"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7726:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"7733:4:9","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7722:3:9"},"nodeType":"YulFunctionCall","src":"7722:16:9"},{"name":"pos","nodeType":"YulIdentifier","src":"7740:3:9"},{"name":"length","nodeType":"YulIdentifier","src":"7745:6:9"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"7687:34:9"},"nodeType":"YulFunctionCall","src":"7687:65:9"},"nodeType":"YulExpressionStatement","src":"7687:65:9"},{"nodeType":"YulAssignment","src":"7761:46:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7772:3:9"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7799:6:9"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"7777:21:9"},"nodeType":"YulFunctionCall","src":"7777:29:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7768:3:9"},"nodeType":"YulFunctionCall","src":"7768:39:9"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7761:3:9"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7511:5:9","type":""},{"name":"pos","nodeType":"YulTypedName","src":"7518:3:9","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7526:3:9","type":""}],"src":"7440:373:9"},{"body":{"nodeType":"YulBlock","src":"7935:193:9","statements":[{"nodeType":"YulAssignment","src":"7945:26:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7957:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"7968:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7953:3:9"},"nodeType":"YulFunctionCall","src":"7953:18:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7945:4:9"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7992:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"8003:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7988:3:9"},"nodeType":"YulFunctionCall","src":"7988:17:9"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8011:4:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"8017:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8007:3:9"},"nodeType":"YulFunctionCall","src":"8007:20:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7981:6:9"},"nodeType":"YulFunctionCall","src":"7981:47:9"},"nodeType":"YulExpressionStatement","src":"7981:47:9"},{"nodeType":"YulAssignment","src":"8037:84:9","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8107:6:9"},{"name":"tail","nodeType":"YulIdentifier","src":"8116:4:9"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8045:61:9"},"nodeType":"YulFunctionCall","src":"8045:76:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8037:4:9"}]}]},"name":"abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7907:9:9","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7919:6:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7930:4:9","type":""}],"src":"7819:309:9"},{"body":{"nodeType":"YulBlock","src":"8200:263:9","statements":[{"body":{"nodeType":"YulBlock","src":"8246:83:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"8248:77:9"},"nodeType":"YulFunctionCall","src":"8248:79:9"},"nodeType":"YulExpressionStatement","src":"8248:79:9"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"8221:7:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"8230:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8217:3:9"},"nodeType":"YulFunctionCall","src":"8217:23:9"},{"kind":"number","nodeType":"YulLiteral","src":"8242:2:9","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8213:3:9"},"nodeType":"YulFunctionCall","src":"8213:32:9"},"nodeType":"YulIf","src":"8210:119:9"},{"nodeType":"YulBlock","src":"8339:117:9","statements":[{"nodeType":"YulVariableDeclaration","src":"8354:15:9","value":{"kind":"number","nodeType":"YulLiteral","src":"8368:1:9","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8358:6:9","type":""}]},{"nodeType":"YulAssignment","src":"8383:63:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8418:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"8429:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8414:3:9"},"nodeType":"YulFunctionCall","src":"8414:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8438:7:9"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"8393:20:9"},"nodeType":"YulFunctionCall","src":"8393:53:9"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"8383:6:9"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8170:9:9","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"8181:7:9","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"8193:6:9","type":""}],"src":"8134:329:9"},{"body":{"nodeType":"YulBlock","src":"8534:53:9","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8551:3:9"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8574:5:9"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"8556:17:9"},"nodeType":"YulFunctionCall","src":"8556:24:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8544:6:9"},"nodeType":"YulFunctionCall","src":"8544:37:9"},"nodeType":"YulExpressionStatement","src":"8544:37:9"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8522:5:9","type":""},{"name":"pos","nodeType":"YulTypedName","src":"8529:3:9","type":""}],"src":"8469:118:9"},{"body":{"nodeType":"YulBlock","src":"8691:124:9","statements":[{"nodeType":"YulAssignment","src":"8701:26:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8713:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"8724:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8709:3:9"},"nodeType":"YulFunctionCall","src":"8709:18:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8701:4:9"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8781:6:9"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8794:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"8805:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8790:3:9"},"nodeType":"YulFunctionCall","src":"8790:17:9"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"8737:43:9"},"nodeType":"YulFunctionCall","src":"8737:71:9"},"nodeType":"YulExpressionStatement","src":"8737:71:9"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8663:9:9","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8675:6:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8686:4:9","type":""}],"src":"8593:222:9"},{"body":{"nodeType":"YulBlock","src":"8910:28:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8927:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8930:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8920:6:9"},"nodeType":"YulFunctionCall","src":"8920:12:9"},"nodeType":"YulExpressionStatement","src":"8920:12:9"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"8821:117:9"},{"body":{"nodeType":"YulBlock","src":"8972:152:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8989:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8992:77:9","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8982:6:9"},"nodeType":"YulFunctionCall","src":"8982:88:9"},"nodeType":"YulExpressionStatement","src":"8982:88:9"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9086:1:9","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"9089:4:9","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9079:6:9"},"nodeType":"YulFunctionCall","src":"9079:15:9"},"nodeType":"YulExpressionStatement","src":"9079:15:9"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9110:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9113:4:9","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9103:6:9"},"nodeType":"YulFunctionCall","src":"9103:15:9"},"nodeType":"YulExpressionStatement","src":"9103:15:9"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"8944:180:9"},{"body":{"nodeType":"YulBlock","src":"9173:238:9","statements":[{"nodeType":"YulVariableDeclaration","src":"9183:58:9","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"9205:6:9"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"9235:4:9"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"9213:21:9"},"nodeType":"YulFunctionCall","src":"9213:27:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9201:3:9"},"nodeType":"YulFunctionCall","src":"9201:40:9"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"9187:10:9","type":""}]},{"body":{"nodeType":"YulBlock","src":"9352:22:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"9354:16:9"},"nodeType":"YulFunctionCall","src":"9354:18:9"},"nodeType":"YulExpressionStatement","src":"9354:18:9"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"9295:10:9"},{"kind":"number","nodeType":"YulLiteral","src":"9307:18:9","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9292:2:9"},"nodeType":"YulFunctionCall","src":"9292:34:9"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"9331:10:9"},{"name":"memPtr","nodeType":"YulIdentifier","src":"9343:6:9"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"9328:2:9"},"nodeType":"YulFunctionCall","src":"9328:22:9"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"9289:2:9"},"nodeType":"YulFunctionCall","src":"9289:62:9"},"nodeType":"YulIf","src":"9286:88:9"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9390:2:9","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"9394:10:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9383:6:9"},"nodeType":"YulFunctionCall","src":"9383:22:9"},"nodeType":"YulExpressionStatement","src":"9383:22:9"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"9159:6:9","type":""},{"name":"size","nodeType":"YulTypedName","src":"9167:4:9","type":""}],"src":"9130:281:9"},{"body":{"nodeType":"YulBlock","src":"9458:88:9","statements":[{"nodeType":"YulAssignment","src":"9468:30:9","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"9478:18:9"},"nodeType":"YulFunctionCall","src":"9478:20:9"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"9468:6:9"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"9527:6:9"},{"name":"size","nodeType":"YulIdentifier","src":"9535:4:9"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"9507:19:9"},"nodeType":"YulFunctionCall","src":"9507:33:9"},"nodeType":"YulExpressionStatement","src":"9507:33:9"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"9442:4:9","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"9451:6:9","type":""}],"src":"9417:129:9"},{"body":{"nodeType":"YulBlock","src":"9618:241:9","statements":[{"body":{"nodeType":"YulBlock","src":"9723:22:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"9725:16:9"},"nodeType":"YulFunctionCall","src":"9725:18:9"},"nodeType":"YulExpressionStatement","src":"9725:18:9"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"9695:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"9703:18:9","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9692:2:9"},"nodeType":"YulFunctionCall","src":"9692:30:9"},"nodeType":"YulIf","src":"9689:56:9"},{"nodeType":"YulAssignment","src":"9755:37:9","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"9785:6:9"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"9763:21:9"},"nodeType":"YulFunctionCall","src":"9763:29:9"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"9755:4:9"}]},{"nodeType":"YulAssignment","src":"9829:23:9","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"9841:4:9"},{"kind":"number","nodeType":"YulLiteral","src":"9847:4:9","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9837:3:9"},"nodeType":"YulFunctionCall","src":"9837:15:9"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"9829:4:9"}]}]},"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"9602:6:9","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"9613:4:9","type":""}],"src":"9552:307:9"},{"body":{"nodeType":"YulBlock","src":"9929:82:9","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"9952:3:9"},{"name":"src","nodeType":"YulIdentifier","src":"9957:3:9"},{"name":"length","nodeType":"YulIdentifier","src":"9962:6:9"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"9939:12:9"},"nodeType":"YulFunctionCall","src":"9939:30:9"},"nodeType":"YulExpressionStatement","src":"9939:30:9"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"9989:3:9"},{"name":"length","nodeType":"YulIdentifier","src":"9994:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9985:3:9"},"nodeType":"YulFunctionCall","src":"9985:16:9"},{"kind":"number","nodeType":"YulLiteral","src":"10003:1:9","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9978:6:9"},"nodeType":"YulFunctionCall","src":"9978:27:9"},"nodeType":"YulExpressionStatement","src":"9978:27:9"}]},"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"9911:3:9","type":""},{"name":"dst","nodeType":"YulTypedName","src":"9916:3:9","type":""},{"name":"length","nodeType":"YulTypedName","src":"9921:6:9","type":""}],"src":"9865:146:9"},{"body":{"nodeType":"YulBlock","src":"10100:340:9","statements":[{"nodeType":"YulAssignment","src":"10110:74:9","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"10176:6:9"}],"functionName":{"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"10135:40:9"},"nodeType":"YulFunctionCall","src":"10135:48:9"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"10119:15:9"},"nodeType":"YulFunctionCall","src":"10119:65:9"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"10110:5:9"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"10200:5:9"},{"name":"length","nodeType":"YulIdentifier","src":"10207:6:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10193:6:9"},"nodeType":"YulFunctionCall","src":"10193:21:9"},"nodeType":"YulExpressionStatement","src":"10193:21:9"},{"nodeType":"YulVariableDeclaration","src":"10223:27:9","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"10238:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"10245:4:9","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10234:3:9"},"nodeType":"YulFunctionCall","src":"10234:16:9"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"10227:3:9","type":""}]},{"body":{"nodeType":"YulBlock","src":"10288:83:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"10290:77:9"},"nodeType":"YulFunctionCall","src":"10290:79:9"},"nodeType":"YulExpressionStatement","src":"10290:79:9"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"10269:3:9"},{"name":"length","nodeType":"YulIdentifier","src":"10274:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10265:3:9"},"nodeType":"YulFunctionCall","src":"10265:16:9"},{"name":"end","nodeType":"YulIdentifier","src":"10283:3:9"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10262:2:9"},"nodeType":"YulFunctionCall","src":"10262:25:9"},"nodeType":"YulIf","src":"10259:112:9"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"10417:3:9"},{"name":"dst","nodeType":"YulIdentifier","src":"10422:3:9"},{"name":"length","nodeType":"YulIdentifier","src":"10427:6:9"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"10380:36:9"},"nodeType":"YulFunctionCall","src":"10380:54:9"},"nodeType":"YulExpressionStatement","src":"10380:54:9"}]},"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"10073:3:9","type":""},{"name":"length","nodeType":"YulTypedName","src":"10078:6:9","type":""},{"name":"end","nodeType":"YulTypedName","src":"10086:3:9","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"10094:5:9","type":""}],"src":"10017:423:9"},{"body":{"nodeType":"YulBlock","src":"10520:277:9","statements":[{"body":{"nodeType":"YulBlock","src":"10569:83:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"10571:77:9"},"nodeType":"YulFunctionCall","src":"10571:79:9"},"nodeType":"YulExpressionStatement","src":"10571:79:9"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"10548:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"10556:4:9","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10544:3:9"},"nodeType":"YulFunctionCall","src":"10544:17:9"},{"name":"end","nodeType":"YulIdentifier","src":"10563:3:9"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"10540:3:9"},"nodeType":"YulFunctionCall","src":"10540:27:9"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"10533:6:9"},"nodeType":"YulFunctionCall","src":"10533:35:9"},"nodeType":"YulIf","src":"10530:122:9"},{"nodeType":"YulVariableDeclaration","src":"10661:34:9","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"10688:6:9"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"10675:12:9"},"nodeType":"YulFunctionCall","src":"10675:20:9"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"10665:6:9","type":""}]},{"nodeType":"YulAssignment","src":"10704:87:9","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"10764:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"10772:4:9","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10760:3:9"},"nodeType":"YulFunctionCall","src":"10760:17:9"},{"name":"length","nodeType":"YulIdentifier","src":"10779:6:9"},{"name":"end","nodeType":"YulIdentifier","src":"10787:3:9"}],"functionName":{"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"10713:46:9"},"nodeType":"YulFunctionCall","src":"10713:78:9"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"10704:5:9"}]}]},"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"10498:6:9","type":""},{"name":"end","nodeType":"YulTypedName","src":"10506:3:9","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"10514:5:9","type":""}],"src":"10459:338:9"},{"body":{"nodeType":"YulBlock","src":"10878:432:9","statements":[{"body":{"nodeType":"YulBlock","src":"10924:83:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"10926:77:9"},"nodeType":"YulFunctionCall","src":"10926:79:9"},"nodeType":"YulExpressionStatement","src":"10926:79:9"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"10899:7:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"10908:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10895:3:9"},"nodeType":"YulFunctionCall","src":"10895:23:9"},{"kind":"number","nodeType":"YulLiteral","src":"10920:2:9","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"10891:3:9"},"nodeType":"YulFunctionCall","src":"10891:32:9"},"nodeType":"YulIf","src":"10888:119:9"},{"nodeType":"YulBlock","src":"11017:286:9","statements":[{"nodeType":"YulVariableDeclaration","src":"11032:45:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11063:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"11074:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11059:3:9"},"nodeType":"YulFunctionCall","src":"11059:17:9"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"11046:12:9"},"nodeType":"YulFunctionCall","src":"11046:31:9"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11036:6:9","type":""}]},{"body":{"nodeType":"YulBlock","src":"11124:83:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"11126:77:9"},"nodeType":"YulFunctionCall","src":"11126:79:9"},"nodeType":"YulExpressionStatement","src":"11126:79:9"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"11096:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"11104:18:9","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"11093:2:9"},"nodeType":"YulFunctionCall","src":"11093:30:9"},"nodeType":"YulIf","src":"11090:117:9"},{"nodeType":"YulAssignment","src":"11221:72:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11265:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"11276:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11261:3:9"},"nodeType":"YulFunctionCall","src":"11261:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11285:7:9"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"11231:29:9"},"nodeType":"YulFunctionCall","src":"11231:62:9"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"11221:6:9"}]}]}]},"name":"abi_decode_tuple_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10848:9:9","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"10859:7:9","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"10871:6:9","type":""}],"src":"10803:507:9"},{"body":{"nodeType":"YulBlock","src":"11382:263:9","statements":[{"body":{"nodeType":"YulBlock","src":"11428:83:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"11430:77:9"},"nodeType":"YulFunctionCall","src":"11430:79:9"},"nodeType":"YulExpressionStatement","src":"11430:79:9"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"11403:7:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"11412:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11399:3:9"},"nodeType":"YulFunctionCall","src":"11399:23:9"},{"kind":"number","nodeType":"YulLiteral","src":"11424:2:9","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"11395:3:9"},"nodeType":"YulFunctionCall","src":"11395:32:9"},"nodeType":"YulIf","src":"11392:119:9"},{"nodeType":"YulBlock","src":"11521:117:9","statements":[{"nodeType":"YulVariableDeclaration","src":"11536:15:9","value":{"kind":"number","nodeType":"YulLiteral","src":"11550:1:9","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11540:6:9","type":""}]},{"nodeType":"YulAssignment","src":"11565:63:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11600:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"11611:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11596:3:9"},"nodeType":"YulFunctionCall","src":"11596:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11620:7:9"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"11575:20:9"},"nodeType":"YulFunctionCall","src":"11575:53:9"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"11565:6:9"}]}]}]},"name":"abi_decode_tuple_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11352:9:9","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"11363:7:9","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"11375:6:9","type":""}],"src":"11316:329:9"},{"body":{"nodeType":"YulBlock","src":"11753:570:9","statements":[{"body":{"nodeType":"YulBlock","src":"11799:83:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"11801:77:9"},"nodeType":"YulFunctionCall","src":"11801:79:9"},"nodeType":"YulExpressionStatement","src":"11801:79:9"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"11774:7:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"11783:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11770:3:9"},"nodeType":"YulFunctionCall","src":"11770:23:9"},{"kind":"number","nodeType":"YulLiteral","src":"11795:2:9","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"11766:3:9"},"nodeType":"YulFunctionCall","src":"11766:32:9"},"nodeType":"YulIf","src":"11763:119:9"},{"nodeType":"YulBlock","src":"11892:117:9","statements":[{"nodeType":"YulVariableDeclaration","src":"11907:15:9","value":{"kind":"number","nodeType":"YulLiteral","src":"11921:1:9","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11911:6:9","type":""}]},{"nodeType":"YulAssignment","src":"11936:63:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11971:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"11982:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11967:3:9"},"nodeType":"YulFunctionCall","src":"11967:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11991:7:9"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"11946:20:9"},"nodeType":"YulFunctionCall","src":"11946:53:9"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"11936:6:9"}]}]},{"nodeType":"YulBlock","src":"12019:297:9","statements":[{"nodeType":"YulVariableDeclaration","src":"12034:46:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12065:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"12076:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12061:3:9"},"nodeType":"YulFunctionCall","src":"12061:18:9"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"12048:12:9"},"nodeType":"YulFunctionCall","src":"12048:32:9"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12038:6:9","type":""}]},{"body":{"nodeType":"YulBlock","src":"12127:83:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"12129:77:9"},"nodeType":"YulFunctionCall","src":"12129:79:9"},"nodeType":"YulExpressionStatement","src":"12129:79:9"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"12099:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"12107:18:9","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"12096:2:9"},"nodeType":"YulFunctionCall","src":"12096:30:9"},"nodeType":"YulIf","src":"12093:117:9"},{"nodeType":"YulAssignment","src":"12224:82:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12278:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"12289:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12274:3:9"},"nodeType":"YulFunctionCall","src":"12274:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12298:7:9"}],"functionName":{"name":"abi_decode_t_bytes_calldata_ptr","nodeType":"YulIdentifier","src":"12242:31:9"},"nodeType":"YulFunctionCall","src":"12242:64:9"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"12224:6:9"},{"name":"value2","nodeType":"YulIdentifier","src":"12232:6:9"}]}]}]},"name":"abi_decode_tuple_t_uint256t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11707:9:9","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"11718:7:9","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"11730:6:9","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11738:6:9","type":""},{"name":"value2","nodeType":"YulTypedName","src":"11746:6:9","type":""}],"src":"11651:672:9"},{"body":{"nodeType":"YulBlock","src":"12412:391:9","statements":[{"body":{"nodeType":"YulBlock","src":"12458:83:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"12460:77:9"},"nodeType":"YulFunctionCall","src":"12460:79:9"},"nodeType":"YulExpressionStatement","src":"12460:79:9"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"12433:7:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"12442:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12429:3:9"},"nodeType":"YulFunctionCall","src":"12429:23:9"},{"kind":"number","nodeType":"YulLiteral","src":"12454:2:9","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"12425:3:9"},"nodeType":"YulFunctionCall","src":"12425:32:9"},"nodeType":"YulIf","src":"12422:119:9"},{"nodeType":"YulBlock","src":"12551:117:9","statements":[{"nodeType":"YulVariableDeclaration","src":"12566:15:9","value":{"kind":"number","nodeType":"YulLiteral","src":"12580:1:9","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12570:6:9","type":""}]},{"nodeType":"YulAssignment","src":"12595:63:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12630:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"12641:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12626:3:9"},"nodeType":"YulFunctionCall","src":"12626:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12650:7:9"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"12605:20:9"},"nodeType":"YulFunctionCall","src":"12605:53:9"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"12595:6:9"}]}]},{"nodeType":"YulBlock","src":"12678:118:9","statements":[{"nodeType":"YulVariableDeclaration","src":"12693:16:9","value":{"kind":"number","nodeType":"YulLiteral","src":"12707:2:9","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12697:6:9","type":""}]},{"nodeType":"YulAssignment","src":"12723:63:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12758:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"12769:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12754:3:9"},"nodeType":"YulFunctionCall","src":"12754:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12778:7:9"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"12733:20:9"},"nodeType":"YulFunctionCall","src":"12733:53:9"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"12723:6:9"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12374:9:9","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"12385:7:9","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"12397:6:9","type":""},{"name":"value1","nodeType":"YulTypedName","src":"12405:6:9","type":""}],"src":"12329:474:9"},{"body":{"nodeType":"YulBlock","src":"12837:152:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12854:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12857:77:9","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12847:6:9"},"nodeType":"YulFunctionCall","src":"12847:88:9"},"nodeType":"YulExpressionStatement","src":"12847:88:9"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12951:1:9","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"12954:4:9","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12944:6:9"},"nodeType":"YulFunctionCall","src":"12944:15:9"},"nodeType":"YulExpressionStatement","src":"12944:15:9"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12975:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12978:4:9","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12968:6:9"},"nodeType":"YulFunctionCall","src":"12968:15:9"},"nodeType":"YulExpressionStatement","src":"12968:15:9"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"12809:180:9"},{"body":{"nodeType":"YulBlock","src":"13046:269:9","statements":[{"nodeType":"YulAssignment","src":"13056:22:9","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"13070:4:9"},{"kind":"number","nodeType":"YulLiteral","src":"13076:1:9","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"13066:3:9"},"nodeType":"YulFunctionCall","src":"13066:12:9"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"13056:6:9"}]},{"nodeType":"YulVariableDeclaration","src":"13087:38:9","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"13117:4:9"},{"kind":"number","nodeType":"YulLiteral","src":"13123:1:9","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"13113:3:9"},"nodeType":"YulFunctionCall","src":"13113:12:9"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"13091:18:9","type":""}]},{"body":{"nodeType":"YulBlock","src":"13164:51:9","statements":[{"nodeType":"YulAssignment","src":"13178:27:9","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"13192:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"13200:4:9","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"13188:3:9"},"nodeType":"YulFunctionCall","src":"13188:17:9"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"13178:6:9"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"13144:18:9"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"13137:6:9"},"nodeType":"YulFunctionCall","src":"13137:26:9"},"nodeType":"YulIf","src":"13134:81:9"},{"body":{"nodeType":"YulBlock","src":"13267:42:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"13281:16:9"},"nodeType":"YulFunctionCall","src":"13281:18:9"},"nodeType":"YulExpressionStatement","src":"13281:18:9"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"13231:18:9"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"13254:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"13262:2:9","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"13251:2:9"},"nodeType":"YulFunctionCall","src":"13251:14:9"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"13228:2:9"},"nodeType":"YulFunctionCall","src":"13228:38:9"},"nodeType":"YulIf","src":"13225:84:9"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"13030:4:9","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"13039:6:9","type":""}],"src":"12995:320:9"},{"body":{"nodeType":"YulBlock","src":"13427:71:9","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"13449:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"13457:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13445:3:9"},"nodeType":"YulFunctionCall","src":"13445:14:9"},{"hexValue":"4d757374206861766520612076616c696420726571756573744964","kind":"string","nodeType":"YulLiteral","src":"13461:29:9","type":"","value":"Must have a valid requestId"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13438:6:9"},"nodeType":"YulFunctionCall","src":"13438:53:9"},"nodeType":"YulExpressionStatement","src":"13438:53:9"}]},"name":"store_literal_in_memory_03ea8cfeff0459e125641b51ffaeaacb881b172abb4a1cae381360ba7e33f193","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"13419:6:9","type":""}],"src":"13321:177:9"},{"body":{"nodeType":"YulBlock","src":"13650:220:9","statements":[{"nodeType":"YulAssignment","src":"13660:74:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13726:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"13731:2:9","type":"","value":"27"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13667:58:9"},"nodeType":"YulFunctionCall","src":"13667:67:9"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"13660:3:9"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13832:3:9"}],"functionName":{"name":"store_literal_in_memory_03ea8cfeff0459e125641b51ffaeaacb881b172abb4a1cae381360ba7e33f193","nodeType":"YulIdentifier","src":"13743:88:9"},"nodeType":"YulFunctionCall","src":"13743:93:9"},"nodeType":"YulExpressionStatement","src":"13743:93:9"},{"nodeType":"YulAssignment","src":"13845:19:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13856:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"13861:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13852:3:9"},"nodeType":"YulFunctionCall","src":"13852:12:9"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"13845:3:9"}]}]},"name":"abi_encode_t_stringliteral_03ea8cfeff0459e125641b51ffaeaacb881b172abb4a1cae381360ba7e33f193_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"13638:3:9","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"13646:3:9","type":""}],"src":"13504:366:9"},{"body":{"nodeType":"YulBlock","src":"14047:248:9","statements":[{"nodeType":"YulAssignment","src":"14057:26:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14069:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"14080:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14065:3:9"},"nodeType":"YulFunctionCall","src":"14065:18:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14057:4:9"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14104:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"14115:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14100:3:9"},"nodeType":"YulFunctionCall","src":"14100:17:9"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14123:4:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"14129:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14119:3:9"},"nodeType":"YulFunctionCall","src":"14119:20:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14093:6:9"},"nodeType":"YulFunctionCall","src":"14093:47:9"},"nodeType":"YulExpressionStatement","src":"14093:47:9"},{"nodeType":"YulAssignment","src":"14149:139:9","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14283:4:9"}],"functionName":{"name":"abi_encode_t_stringliteral_03ea8cfeff0459e125641b51ffaeaacb881b172abb4a1cae381360ba7e33f193_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14157:124:9"},"nodeType":"YulFunctionCall","src":"14157:131:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14149:4:9"}]}]},"name":"abi_encode_tuple_t_stringliteral_03ea8cfeff0459e125641b51ffaeaacb881b172abb4a1cae381360ba7e33f193__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14027:9:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14042:4:9","type":""}],"src":"13876:419:9"},{"body":{"nodeType":"YulBlock","src":"14407:68:9","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"14429:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"14437:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14425:3:9"},"nodeType":"YulFunctionCall","src":"14425:14:9"},{"hexValue":"52657175657374657220646f6573206e6f74206d61746368","kind":"string","nodeType":"YulLiteral","src":"14441:26:9","type":"","value":"Requester does not match"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14418:6:9"},"nodeType":"YulFunctionCall","src":"14418:50:9"},"nodeType":"YulExpressionStatement","src":"14418:50:9"}]},"name":"store_literal_in_memory_3171005413b2d9c41f1a7950fecbe6684be54180b50a3918c59874ae6ee26d66","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"14399:6:9","type":""}],"src":"14301:174:9"},{"body":{"nodeType":"YulBlock","src":"14627:220:9","statements":[{"nodeType":"YulAssignment","src":"14637:74:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14703:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"14708:2:9","type":"","value":"24"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14644:58:9"},"nodeType":"YulFunctionCall","src":"14644:67:9"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"14637:3:9"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14809:3:9"}],"functionName":{"name":"store_literal_in_memory_3171005413b2d9c41f1a7950fecbe6684be54180b50a3918c59874ae6ee26d66","nodeType":"YulIdentifier","src":"14720:88:9"},"nodeType":"YulFunctionCall","src":"14720:93:9"},"nodeType":"YulExpressionStatement","src":"14720:93:9"},{"nodeType":"YulAssignment","src":"14822:19:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14833:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"14838:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14829:3:9"},"nodeType":"YulFunctionCall","src":"14829:12:9"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"14822:3:9"}]}]},"name":"abi_encode_t_stringliteral_3171005413b2d9c41f1a7950fecbe6684be54180b50a3918c59874ae6ee26d66_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"14615:3:9","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"14623:3:9","type":""}],"src":"14481:366:9"},{"body":{"nodeType":"YulBlock","src":"15024:248:9","statements":[{"nodeType":"YulAssignment","src":"15034:26:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15046:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"15057:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15042:3:9"},"nodeType":"YulFunctionCall","src":"15042:18:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15034:4:9"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15081:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"15092:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15077:3:9"},"nodeType":"YulFunctionCall","src":"15077:17:9"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15100:4:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"15106:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15096:3:9"},"nodeType":"YulFunctionCall","src":"15096:20:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15070:6:9"},"nodeType":"YulFunctionCall","src":"15070:47:9"},"nodeType":"YulExpressionStatement","src":"15070:47:9"},{"nodeType":"YulAssignment","src":"15126:139:9","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15260:4:9"}],"functionName":{"name":"abi_encode_t_stringliteral_3171005413b2d9c41f1a7950fecbe6684be54180b50a3918c59874ae6ee26d66_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15134:124:9"},"nodeType":"YulFunctionCall","src":"15134:131:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15126:4:9"}]}]},"name":"abi_encode_tuple_t_stringliteral_3171005413b2d9c41f1a7950fecbe6684be54180b50a3918c59874ae6ee26d66__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15004:9:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15019:4:9","type":""}],"src":"14853:419:9"},{"body":{"nodeType":"YulBlock","src":"15400:214:9","statements":[{"nodeType":"YulAssignment","src":"15410:77:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15475:3:9"},{"name":"length","nodeType":"YulIdentifier","src":"15480:6:9"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15417:57:9"},"nodeType":"YulFunctionCall","src":"15417:70:9"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"15410:3:9"}]},{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"15534:5:9"},{"name":"pos","nodeType":"YulIdentifier","src":"15541:3:9"},{"name":"length","nodeType":"YulIdentifier","src":"15546:6:9"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"15497:36:9"},"nodeType":"YulFunctionCall","src":"15497:56:9"},"nodeType":"YulExpressionStatement","src":"15497:56:9"},{"nodeType":"YulAssignment","src":"15562:46:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15573:3:9"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"15600:6:9"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"15578:21:9"},"nodeType":"YulFunctionCall","src":"15578:29:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15569:3:9"},"nodeType":"YulFunctionCall","src":"15569:39:9"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"15562:3:9"}]}]},"name":"abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"15373:5:9","type":""},{"name":"length","nodeType":"YulTypedName","src":"15380:6:9","type":""},{"name":"pos","nodeType":"YulTypedName","src":"15388:3:9","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"15396:3:9","type":""}],"src":"15300:314:9"},{"body":{"nodeType":"YulBlock","src":"15746:203:9","statements":[{"nodeType":"YulAssignment","src":"15756:26:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15768:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"15779:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15764:3:9"},"nodeType":"YulFunctionCall","src":"15764:18:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15756:4:9"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15803:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"15814:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15799:3:9"},"nodeType":"YulFunctionCall","src":"15799:17:9"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15822:4:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"15828:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15818:3:9"},"nodeType":"YulFunctionCall","src":"15818:20:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15792:6:9"},"nodeType":"YulFunctionCall","src":"15792:47:9"},"nodeType":"YulExpressionStatement","src":"15792:47:9"},{"nodeType":"YulAssignment","src":"15848:94:9","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"15920:6:9"},{"name":"value1","nodeType":"YulIdentifier","src":"15928:6:9"},{"name":"tail","nodeType":"YulIdentifier","src":"15937:4:9"}],"functionName":{"name":"abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15856:63:9"},"nodeType":"YulFunctionCall","src":"15856:86:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15848:4:9"}]}]},"name":"abi_encode_tuple_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15710:9:9","type":""},{"name":"value1","nodeType":"YulTypedName","src":"15722:6:9","type":""},{"name":"value0","nodeType":"YulTypedName","src":"15730:6:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15741:4:9","type":""}],"src":"15620:329:9"},{"body":{"nodeType":"YulBlock","src":"15983:152:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16000:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"16003:77:9","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15993:6:9"},"nodeType":"YulFunctionCall","src":"15993:88:9"},"nodeType":"YulExpressionStatement","src":"15993:88:9"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16097:1:9","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"16100:4:9","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16090:6:9"},"nodeType":"YulFunctionCall","src":"16090:15:9"},"nodeType":"YulExpressionStatement","src":"16090:15:9"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16121:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"16124:4:9","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"16114:6:9"},"nodeType":"YulFunctionCall","src":"16114:15:9"},"nodeType":"YulExpressionStatement","src":"16114:15:9"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"15955:180:9"},{"body":{"nodeType":"YulBlock","src":"16185:147:9","statements":[{"nodeType":"YulAssignment","src":"16195:25:9","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"16218:1:9"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"16200:17:9"},"nodeType":"YulFunctionCall","src":"16200:20:9"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"16195:1:9"}]},{"nodeType":"YulAssignment","src":"16229:25:9","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"16252:1:9"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"16234:17:9"},"nodeType":"YulFunctionCall","src":"16234:20:9"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"16229:1:9"}]},{"nodeType":"YulAssignment","src":"16263:16:9","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"16274:1:9"},{"name":"y","nodeType":"YulIdentifier","src":"16277:1:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16270:3:9"},"nodeType":"YulFunctionCall","src":"16270:9:9"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"16263:3:9"}]},{"body":{"nodeType":"YulBlock","src":"16303:22:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"16305:16:9"},"nodeType":"YulFunctionCall","src":"16305:18:9"},"nodeType":"YulExpressionStatement","src":"16305:18:9"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"16295:1:9"},{"name":"sum","nodeType":"YulIdentifier","src":"16298:3:9"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"16292:2:9"},"nodeType":"YulFunctionCall","src":"16292:10:9"},"nodeType":"YulIf","src":"16289:36:9"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"16172:1:9","type":""},{"name":"y","nodeType":"YulTypedName","src":"16175:1:9","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"16181:3:9","type":""}],"src":"16141:191:9"},{"body":{"nodeType":"YulBlock","src":"16383:149:9","statements":[{"nodeType":"YulAssignment","src":"16393:25:9","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"16416:1:9"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"16398:17:9"},"nodeType":"YulFunctionCall","src":"16398:20:9"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"16393:1:9"}]},{"nodeType":"YulAssignment","src":"16427:25:9","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"16450:1:9"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"16432:17:9"},"nodeType":"YulFunctionCall","src":"16432:20:9"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"16427:1:9"}]},{"nodeType":"YulAssignment","src":"16461:17:9","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"16473:1:9"},{"name":"y","nodeType":"YulIdentifier","src":"16476:1:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16469:3:9"},"nodeType":"YulFunctionCall","src":"16469:9:9"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"16461:4:9"}]},{"body":{"nodeType":"YulBlock","src":"16503:22:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"16505:16:9"},"nodeType":"YulFunctionCall","src":"16505:18:9"},"nodeType":"YulExpressionStatement","src":"16505:18:9"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"16494:4:9"},{"name":"x","nodeType":"YulIdentifier","src":"16500:1:9"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"16491:2:9"},"nodeType":"YulFunctionCall","src":"16491:11:9"},"nodeType":"YulIf","src":"16488:37:9"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"16369:1:9","type":""},{"name":"y","nodeType":"YulTypedName","src":"16372:1:9","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"16378:4:9","type":""}],"src":"16338:194:9"},{"body":{"nodeType":"YulBlock","src":"16644:68:9","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"16666:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"16674:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16662:3:9"},"nodeType":"YulFunctionCall","src":"16662:14:9"},{"hexValue":"596f752063616e6e6f74206d696e74206469726563746c79","kind":"string","nodeType":"YulLiteral","src":"16678:26:9","type":"","value":"You cannot mint directly"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16655:6:9"},"nodeType":"YulFunctionCall","src":"16655:50:9"},"nodeType":"YulExpressionStatement","src":"16655:50:9"}]},"name":"store_literal_in_memory_6e0ba3ea59b30a840c0b797c7d04b6c612b68aaacf304abeb8524b82759a6e30","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"16636:6:9","type":""}],"src":"16538:174:9"},{"body":{"nodeType":"YulBlock","src":"16864:220:9","statements":[{"nodeType":"YulAssignment","src":"16874:74:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16940:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"16945:2:9","type":"","value":"24"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16881:58:9"},"nodeType":"YulFunctionCall","src":"16881:67:9"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"16874:3:9"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17046:3:9"}],"functionName":{"name":"store_literal_in_memory_6e0ba3ea59b30a840c0b797c7d04b6c612b68aaacf304abeb8524b82759a6e30","nodeType":"YulIdentifier","src":"16957:88:9"},"nodeType":"YulFunctionCall","src":"16957:93:9"},"nodeType":"YulExpressionStatement","src":"16957:93:9"},{"nodeType":"YulAssignment","src":"17059:19:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17070:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"17075:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17066:3:9"},"nodeType":"YulFunctionCall","src":"17066:12:9"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"17059:3:9"}]}]},"name":"abi_encode_t_stringliteral_6e0ba3ea59b30a840c0b797c7d04b6c612b68aaacf304abeb8524b82759a6e30_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"16852:3:9","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"16860:3:9","type":""}],"src":"16718:366:9"},{"body":{"nodeType":"YulBlock","src":"17261:248:9","statements":[{"nodeType":"YulAssignment","src":"17271:26:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17283:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"17294:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17279:3:9"},"nodeType":"YulFunctionCall","src":"17279:18:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17271:4:9"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17318:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"17329:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17314:3:9"},"nodeType":"YulFunctionCall","src":"17314:17:9"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17337:4:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"17343:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17333:3:9"},"nodeType":"YulFunctionCall","src":"17333:20:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17307:6:9"},"nodeType":"YulFunctionCall","src":"17307:47:9"},"nodeType":"YulExpressionStatement","src":"17307:47:9"},{"nodeType":"YulAssignment","src":"17363:139:9","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17497:4:9"}],"functionName":{"name":"abi_encode_t_stringliteral_6e0ba3ea59b30a840c0b797c7d04b6c612b68aaacf304abeb8524b82759a6e30_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17371:124:9"},"nodeType":"YulFunctionCall","src":"17371:131:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17363:4:9"}]}]},"name":"abi_encode_tuple_t_stringliteral_6e0ba3ea59b30a840c0b797c7d04b6c612b68aaacf304abeb8524b82759a6e30__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17241:9:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17256:4:9","type":""}],"src":"17090:419:9"},{"body":{"nodeType":"YulBlock","src":"17621:118:9","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"17643:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"17651:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17639:3:9"},"nodeType":"YulFunctionCall","src":"17639:14:9"},{"hexValue":"45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77","kind":"string","nodeType":"YulLiteral","src":"17655:34:9","type":"","value":"ERC20: decreased allowance below"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17632:6:9"},"nodeType":"YulFunctionCall","src":"17632:58:9"},"nodeType":"YulExpressionStatement","src":"17632:58:9"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"17711:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"17719:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17707:3:9"},"nodeType":"YulFunctionCall","src":"17707:15:9"},{"hexValue":"207a65726f","kind":"string","nodeType":"YulLiteral","src":"17724:7:9","type":"","value":" zero"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17700:6:9"},"nodeType":"YulFunctionCall","src":"17700:32:9"},"nodeType":"YulExpressionStatement","src":"17700:32:9"}]},"name":"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"17613:6:9","type":""}],"src":"17515:224:9"},{"body":{"nodeType":"YulBlock","src":"17891:220:9","statements":[{"nodeType":"YulAssignment","src":"17901:74:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17967:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"17972:2:9","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17908:58:9"},"nodeType":"YulFunctionCall","src":"17908:67:9"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"17901:3:9"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18073:3:9"}],"functionName":{"name":"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","nodeType":"YulIdentifier","src":"17984:88:9"},"nodeType":"YulFunctionCall","src":"17984:93:9"},"nodeType":"YulExpressionStatement","src":"17984:93:9"},{"nodeType":"YulAssignment","src":"18086:19:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18097:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"18102:2:9","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18093:3:9"},"nodeType":"YulFunctionCall","src":"18093:12:9"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"18086:3:9"}]}]},"name":"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"17879:3:9","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"17887:3:9","type":""}],"src":"17745:366:9"},{"body":{"nodeType":"YulBlock","src":"18288:248:9","statements":[{"nodeType":"YulAssignment","src":"18298:26:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18310:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"18321:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18306:3:9"},"nodeType":"YulFunctionCall","src":"18306:18:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18298:4:9"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18345:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"18356:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18341:3:9"},"nodeType":"YulFunctionCall","src":"18341:17:9"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"18364:4:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"18370:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"18360:3:9"},"nodeType":"YulFunctionCall","src":"18360:20:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18334:6:9"},"nodeType":"YulFunctionCall","src":"18334:47:9"},"nodeType":"YulExpressionStatement","src":"18334:47:9"},{"nodeType":"YulAssignment","src":"18390:139:9","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"18524:4:9"}],"functionName":{"name":"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"18398:124:9"},"nodeType":"YulFunctionCall","src":"18398:131:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18390:4:9"}]}]},"name":"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18268:9:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18283:4:9","type":""}],"src":"18117:419:9"},{"body":{"nodeType":"YulBlock","src":"18648:62:9","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"18670:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"18678:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18666:3:9"},"nodeType":"YulFunctionCall","src":"18666:14:9"},{"hexValue":"526571756573742069732065787069726564","kind":"string","nodeType":"YulLiteral","src":"18682:20:9","type":"","value":"Request is expired"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18659:6:9"},"nodeType":"YulFunctionCall","src":"18659:44:9"},"nodeType":"YulExpressionStatement","src":"18659:44:9"}]},"name":"store_literal_in_memory_178737e5f8d3bb08805c837a16fa9250a9a3808ba7fad1041b7fb05f30c86cda","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"18640:6:9","type":""}],"src":"18542:168:9"},{"body":{"nodeType":"YulBlock","src":"18862:220:9","statements":[{"nodeType":"YulAssignment","src":"18872:74:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18938:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"18943:2:9","type":"","value":"18"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"18879:58:9"},"nodeType":"YulFunctionCall","src":"18879:67:9"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"18872:3:9"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19044:3:9"}],"functionName":{"name":"store_literal_in_memory_178737e5f8d3bb08805c837a16fa9250a9a3808ba7fad1041b7fb05f30c86cda","nodeType":"YulIdentifier","src":"18955:88:9"},"nodeType":"YulFunctionCall","src":"18955:93:9"},"nodeType":"YulExpressionStatement","src":"18955:93:9"},{"nodeType":"YulAssignment","src":"19057:19:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19068:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"19073:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19064:3:9"},"nodeType":"YulFunctionCall","src":"19064:12:9"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"19057:3:9"}]}]},"name":"abi_encode_t_stringliteral_178737e5f8d3bb08805c837a16fa9250a9a3808ba7fad1041b7fb05f30c86cda_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"18850:3:9","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"18858:3:9","type":""}],"src":"18716:366:9"},{"body":{"nodeType":"YulBlock","src":"19259:248:9","statements":[{"nodeType":"YulAssignment","src":"19269:26:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19281:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"19292:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19277:3:9"},"nodeType":"YulFunctionCall","src":"19277:18:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19269:4:9"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19316:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"19327:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19312:3:9"},"nodeType":"YulFunctionCall","src":"19312:17:9"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"19335:4:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"19341:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19331:3:9"},"nodeType":"YulFunctionCall","src":"19331:20:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19305:6:9"},"nodeType":"YulFunctionCall","src":"19305:47:9"},"nodeType":"YulExpressionStatement","src":"19305:47:9"},{"nodeType":"YulAssignment","src":"19361:139:9","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"19495:4:9"}],"functionName":{"name":"abi_encode_t_stringliteral_178737e5f8d3bb08805c837a16fa9250a9a3808ba7fad1041b7fb05f30c86cda_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"19369:124:9"},"nodeType":"YulFunctionCall","src":"19369:131:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19361:4:9"}]}]},"name":"abi_encode_tuple_t_stringliteral_178737e5f8d3bb08805c837a16fa9250a9a3808ba7fad1041b7fb05f30c86cda__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19239:9:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19254:4:9","type":""}],"src":"19088:419:9"},{"body":{"nodeType":"YulBlock","src":"19566:87:9","statements":[{"nodeType":"YulAssignment","src":"19576:11:9","value":{"name":"ptr","nodeType":"YulIdentifier","src":"19584:3:9"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"19576:4:9"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19604:1:9","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"19607:3:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19597:6:9"},"nodeType":"YulFunctionCall","src":"19597:14:9"},"nodeType":"YulExpressionStatement","src":"19597:14:9"},{"nodeType":"YulAssignment","src":"19620:26:9","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19638:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"19641:4:9","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"19628:9:9"},"nodeType":"YulFunctionCall","src":"19628:18:9"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"19620:4:9"}]}]},"name":"array_dataslot_t_bytes_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"19553:3:9","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"19561:4:9","type":""}],"src":"19513:140:9"},{"body":{"nodeType":"YulBlock","src":"19703:49:9","statements":[{"nodeType":"YulAssignment","src":"19713:33:9","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19731:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"19738:2:9","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19727:3:9"},"nodeType":"YulFunctionCall","src":"19727:14:9"},{"kind":"number","nodeType":"YulLiteral","src":"19743:2:9","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"19723:3:9"},"nodeType":"YulFunctionCall","src":"19723:23:9"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"19713:6:9"}]}]},"name":"divide_by_32_ceil","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"19686:5:9","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"19696:6:9","type":""}],"src":"19659:93:9"},{"body":{"nodeType":"YulBlock","src":"19811:54:9","statements":[{"nodeType":"YulAssignment","src":"19821:37:9","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"19846:4:9"},{"name":"value","nodeType":"YulIdentifier","src":"19852:5:9"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"19842:3:9"},"nodeType":"YulFunctionCall","src":"19842:16:9"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"19821:8:9"}]}]},"name":"shift_left_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"19786:4:9","type":""},{"name":"value","nodeType":"YulTypedName","src":"19792:5:9","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"19802:8:9","type":""}],"src":"19758:107:9"},{"body":{"nodeType":"YulBlock","src":"19947:317:9","statements":[{"nodeType":"YulVariableDeclaration","src":"19957:35:9","value":{"arguments":[{"name":"shiftBytes","nodeType":"YulIdentifier","src":"19978:10:9"},{"kind":"number","nodeType":"YulLiteral","src":"19990:1:9","type":"","value":"8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"19974:3:9"},"nodeType":"YulFunctionCall","src":"19974:18:9"},"variables":[{"name":"shiftBits","nodeType":"YulTypedName","src":"19961:9:9","type":""}]},{"nodeType":"YulVariableDeclaration","src":"20001:109:9","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"20032:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"20043:66:9","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"20013:18:9"},"nodeType":"YulFunctionCall","src":"20013:97:9"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"20005:4:9","type":""}]},{"nodeType":"YulAssignment","src":"20119:51:9","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"20150:9:9"},{"name":"toInsert","nodeType":"YulIdentifier","src":"20161:8:9"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"20131:18:9"},"nodeType":"YulFunctionCall","src":"20131:39:9"},"variableNames":[{"name":"toInsert","nodeType":"YulIdentifier","src":"20119:8:9"}]},{"nodeType":"YulAssignment","src":"20179:30:9","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20192:5:9"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"20203:4:9"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"20199:3:9"},"nodeType":"YulFunctionCall","src":"20199:9:9"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"20188:3:9"},"nodeType":"YulFunctionCall","src":"20188:21:9"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"20179:5:9"}]},{"nodeType":"YulAssignment","src":"20218:40:9","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20231:5:9"},{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"20242:8:9"},{"name":"mask","nodeType":"YulIdentifier","src":"20252:4:9"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"20238:3:9"},"nodeType":"YulFunctionCall","src":"20238:19:9"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"20228:2:9"},"nodeType":"YulFunctionCall","src":"20228:30:9"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"20218:6:9"}]}]},"name":"update_byte_slice_dynamic32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"19908:5:9","type":""},{"name":"shiftBytes","nodeType":"YulTypedName","src":"19915:10:9","type":""},{"name":"toInsert","nodeType":"YulTypedName","src":"19927:8:9","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"19940:6:9","type":""}],"src":"19871:393:9"},{"body":{"nodeType":"YulBlock","src":"20302:28:9","statements":[{"nodeType":"YulAssignment","src":"20312:12:9","value":{"name":"value","nodeType":"YulIdentifier","src":"20319:5:9"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"20312:3:9"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"20288:5:9","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"20298:3:9","type":""}],"src":"20270:60:9"},{"body":{"nodeType":"YulBlock","src":"20396:82:9","statements":[{"nodeType":"YulAssignment","src":"20406:66:9","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20464:5:9"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"20446:17:9"},"nodeType":"YulFunctionCall","src":"20446:24:9"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"20437:8:9"},"nodeType":"YulFunctionCall","src":"20437:34:9"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"20419:17:9"},"nodeType":"YulFunctionCall","src":"20419:53:9"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"20406:9:9"}]}]},"name":"convert_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"20376:5:9","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"20386:9:9","type":""}],"src":"20336:142:9"},{"body":{"nodeType":"YulBlock","src":"20531:28:9","statements":[{"nodeType":"YulAssignment","src":"20541:12:9","value":{"name":"value","nodeType":"YulIdentifier","src":"20548:5:9"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"20541:3:9"}]}]},"name":"prepare_store_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"20517:5:9","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"20527:3:9","type":""}],"src":"20484:75:9"},{"body":{"nodeType":"YulBlock","src":"20641:193:9","statements":[{"nodeType":"YulVariableDeclaration","src":"20651:63:9","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"20706:7:9"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"20675:30:9"},"nodeType":"YulFunctionCall","src":"20675:39:9"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"20655:16:9","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"20730:4:9"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"20770:4:9"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"20764:5:9"},"nodeType":"YulFunctionCall","src":"20764:11:9"},{"name":"offset","nodeType":"YulIdentifier","src":"20777:6:9"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"20809:16:9"}],"functionName":{"name":"prepare_store_t_uint256","nodeType":"YulIdentifier","src":"20785:23:9"},"nodeType":"YulFunctionCall","src":"20785:41:9"}],"functionName":{"name":"update_byte_slice_dynamic32","nodeType":"YulIdentifier","src":"20736:27:9"},"nodeType":"YulFunctionCall","src":"20736:91:9"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"20723:6:9"},"nodeType":"YulFunctionCall","src":"20723:105:9"},"nodeType":"YulExpressionStatement","src":"20723:105:9"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"20618:4:9","type":""},{"name":"offset","nodeType":"YulTypedName","src":"20624:6:9","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"20632:7:9","type":""}],"src":"20565:269:9"},{"body":{"nodeType":"YulBlock","src":"20889:24:9","statements":[{"nodeType":"YulAssignment","src":"20899:8:9","value":{"kind":"number","nodeType":"YulLiteral","src":"20906:1:9","type":"","value":"0"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"20899:3:9"}]}]},"name":"zero_value_for_split_t_uint256","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"20885:3:9","type":""}],"src":"20840:73:9"},{"body":{"nodeType":"YulBlock","src":"20972:136:9","statements":[{"nodeType":"YulVariableDeclaration","src":"20982:46:9","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nodeType":"YulIdentifier","src":"20996:30:9"},"nodeType":"YulFunctionCall","src":"20996:32:9"},"variables":[{"name":"zero_0","nodeType":"YulTypedName","src":"20986:6:9","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"21081:4:9"},{"name":"offset","nodeType":"YulIdentifier","src":"21087:6:9"},{"name":"zero_0","nodeType":"YulIdentifier","src":"21095:6:9"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"21037:43:9"},"nodeType":"YulFunctionCall","src":"21037:65:9"},"nodeType":"YulExpressionStatement","src":"21037:65:9"}]},"name":"storage_set_to_zero_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"20958:4:9","type":""},{"name":"offset","nodeType":"YulTypedName","src":"20964:6:9","type":""}],"src":"20919:189:9"},{"body":{"nodeType":"YulBlock","src":"21164:136:9","statements":[{"body":{"nodeType":"YulBlock","src":"21231:63:9","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"21275:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"21282:1:9","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nodeType":"YulIdentifier","src":"21245:29:9"},"nodeType":"YulFunctionCall","src":"21245:39:9"},"nodeType":"YulExpressionStatement","src":"21245:39:9"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"21184:5:9"},{"name":"end","nodeType":"YulIdentifier","src":"21191:3:9"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"21181:2:9"},"nodeType":"YulFunctionCall","src":"21181:14:9"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"21196:26:9","statements":[{"nodeType":"YulAssignment","src":"21198:22:9","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"21211:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"21218:1:9","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21207:3:9"},"nodeType":"YulFunctionCall","src":"21207:13:9"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"21198:5:9"}]}]},"pre":{"nodeType":"YulBlock","src":"21178:2:9","statements":[]},"src":"21174:120:9"}]},"name":"clear_storage_range_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"21152:5:9","type":""},{"name":"end","nodeType":"YulTypedName","src":"21159:3:9","type":""}],"src":"21114:186:9"},{"body":{"nodeType":"YulBlock","src":"21384:463:9","statements":[{"body":{"nodeType":"YulBlock","src":"21410:430:9","statements":[{"nodeType":"YulVariableDeclaration","src":"21424:53:9","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"21471:5:9"}],"functionName":{"name":"array_dataslot_t_bytes_storage","nodeType":"YulIdentifier","src":"21440:30:9"},"nodeType":"YulFunctionCall","src":"21440:37:9"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"21428:8:9","type":""}]},{"nodeType":"YulVariableDeclaration","src":"21490:63:9","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"21513:8:9"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"21541:10:9"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"21523:17:9"},"nodeType":"YulFunctionCall","src":"21523:29:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21509:3:9"},"nodeType":"YulFunctionCall","src":"21509:44:9"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"21494:11:9","type":""}]},{"body":{"nodeType":"YulBlock","src":"21710:27:9","statements":[{"nodeType":"YulAssignment","src":"21712:23:9","value":{"name":"dataArea","nodeType":"YulIdentifier","src":"21727:8:9"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"21712:11:9"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"21694:10:9"},{"kind":"number","nodeType":"YulLiteral","src":"21706:2:9","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"21691:2:9"},"nodeType":"YulFunctionCall","src":"21691:18:9"},"nodeType":"YulIf","src":"21688:49:9"},{"expression":{"arguments":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"21779:11:9"},{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"21796:8:9"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"21824:3:9"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"21806:17:9"},"nodeType":"YulFunctionCall","src":"21806:22:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21792:3:9"},"nodeType":"YulFunctionCall","src":"21792:37:9"}],"functionName":{"name":"clear_storage_range_t_bytes1","nodeType":"YulIdentifier","src":"21750:28:9"},"nodeType":"YulFunctionCall","src":"21750:80:9"},"nodeType":"YulExpressionStatement","src":"21750:80:9"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"21401:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"21406:2:9","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"21398:2:9"},"nodeType":"YulFunctionCall","src":"21398:11:9"},"nodeType":"YulIf","src":"21395:445:9"}]},"name":"clean_up_bytearray_end_slots_t_bytes_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"21360:5:9","type":""},{"name":"len","nodeType":"YulTypedName","src":"21367:3:9","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"21372:10:9","type":""}],"src":"21306:541:9"},{"body":{"nodeType":"YulBlock","src":"21916:54:9","statements":[{"nodeType":"YulAssignment","src":"21926:37:9","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"21951:4:9"},{"name":"value","nodeType":"YulIdentifier","src":"21957:5:9"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"21947:3:9"},"nodeType":"YulFunctionCall","src":"21947:16:9"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"21926:8:9"}]}]},"name":"shift_right_unsigned_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"21891:4:9","type":""},{"name":"value","nodeType":"YulTypedName","src":"21897:5:9","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"21907:8:9","type":""}],"src":"21853:117:9"},{"body":{"nodeType":"YulBlock","src":"22027:118:9","statements":[{"nodeType":"YulVariableDeclaration","src":"22037:68:9","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22086:1:9","type":"","value":"8"},{"name":"bytes","nodeType":"YulIdentifier","src":"22089:5:9"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"22082:3:9"},"nodeType":"YulFunctionCall","src":"22082:13:9"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22101:1:9","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"22097:3:9"},"nodeType":"YulFunctionCall","src":"22097:6:9"}],"functionName":{"name":"shift_right_unsigned_dynamic","nodeType":"YulIdentifier","src":"22053:28:9"},"nodeType":"YulFunctionCall","src":"22053:51:9"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"22049:3:9"},"nodeType":"YulFunctionCall","src":"22049:56:9"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"22041:4:9","type":""}]},{"nodeType":"YulAssignment","src":"22114:25:9","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"22128:4:9"},{"name":"mask","nodeType":"YulIdentifier","src":"22134:4:9"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"22124:3:9"},"nodeType":"YulFunctionCall","src":"22124:15:9"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"22114:6:9"}]}]},"name":"mask_bytes_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"22004:4:9","type":""},{"name":"bytes","nodeType":"YulTypedName","src":"22010:5:9","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"22020:6:9","type":""}],"src":"21976:169:9"},{"body":{"nodeType":"YulBlock","src":"22231:214:9","statements":[{"nodeType":"YulAssignment","src":"22364:37:9","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"22391:4:9"},{"name":"len","nodeType":"YulIdentifier","src":"22397:3:9"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"22372:18:9"},"nodeType":"YulFunctionCall","src":"22372:29:9"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"22364:4:9"}]},{"nodeType":"YulAssignment","src":"22410:29:9","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"22421:4:9"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22431:1:9","type":"","value":"2"},{"name":"len","nodeType":"YulIdentifier","src":"22434:3:9"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"22427:3:9"},"nodeType":"YulFunctionCall","src":"22427:11:9"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"22418:2:9"},"nodeType":"YulFunctionCall","src":"22418:21:9"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"22410:4:9"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"22212:4:9","type":""},{"name":"len","nodeType":"YulTypedName","src":"22218:3:9","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"22226:4:9","type":""}],"src":"22150:295:9"},{"body":{"nodeType":"YulBlock","src":"22540:1300:9","statements":[{"nodeType":"YulVariableDeclaration","src":"22551:50:9","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"22597:3:9"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"22565:31:9"},"nodeType":"YulFunctionCall","src":"22565:36:9"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"22555:6:9","type":""}]},{"body":{"nodeType":"YulBlock","src":"22686:22:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"22688:16:9"},"nodeType":"YulFunctionCall","src":"22688:18:9"},"nodeType":"YulExpressionStatement","src":"22688:18:9"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"22658:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"22666:18:9","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"22655:2:9"},"nodeType":"YulFunctionCall","src":"22655:30:9"},"nodeType":"YulIf","src":"22652:56:9"},{"nodeType":"YulVariableDeclaration","src":"22718:52:9","value":{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"22764:4:9"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"22758:5:9"},"nodeType":"YulFunctionCall","src":"22758:11:9"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"22732:25:9"},"nodeType":"YulFunctionCall","src":"22732:38:9"},"variables":[{"name":"oldLen","nodeType":"YulTypedName","src":"22722:6:9","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"22862:4:9"},{"name":"oldLen","nodeType":"YulIdentifier","src":"22868:6:9"},{"name":"newLen","nodeType":"YulIdentifier","src":"22876:6:9"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_bytes_storage","nodeType":"YulIdentifier","src":"22817:44:9"},"nodeType":"YulFunctionCall","src":"22817:66:9"},"nodeType":"YulExpressionStatement","src":"22817:66:9"},{"nodeType":"YulVariableDeclaration","src":"22893:18:9","value":{"kind":"number","nodeType":"YulLiteral","src":"22910:1:9","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"22897:9:9","type":""}]},{"nodeType":"YulAssignment","src":"22921:17:9","value":{"kind":"number","nodeType":"YulLiteral","src":"22934:4:9","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"22921:9:9"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"22985:610:9","statements":[{"nodeType":"YulVariableDeclaration","src":"22999:37:9","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"23018:6:9"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23030:4:9","type":"","value":"0x1f"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"23026:3:9"},"nodeType":"YulFunctionCall","src":"23026:9:9"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"23014:3:9"},"nodeType":"YulFunctionCall","src":"23014:22:9"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"23003:7:9","type":""}]},{"nodeType":"YulVariableDeclaration","src":"23050:50:9","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"23095:4:9"}],"functionName":{"name":"array_dataslot_t_bytes_storage","nodeType":"YulIdentifier","src":"23064:30:9"},"nodeType":"YulFunctionCall","src":"23064:36:9"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"23054:6:9","type":""}]},{"nodeType":"YulVariableDeclaration","src":"23113:10:9","value":{"kind":"number","nodeType":"YulLiteral","src":"23122:1:9","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"23117:1:9","type":""}]},{"body":{"nodeType":"YulBlock","src":"23181:163:9","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"23206:6:9"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"23224:3:9"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"23229:9:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23220:3:9"},"nodeType":"YulFunctionCall","src":"23220:19:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"23214:5:9"},"nodeType":"YulFunctionCall","src":"23214:26:9"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"23199:6:9"},"nodeType":"YulFunctionCall","src":"23199:42:9"},"nodeType":"YulExpressionStatement","src":"23199:42:9"},{"nodeType":"YulAssignment","src":"23258:24:9","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"23272:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"23280:1:9","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23268:3:9"},"nodeType":"YulFunctionCall","src":"23268:14:9"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"23258:6:9"}]},{"nodeType":"YulAssignment","src":"23299:31:9","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"23316:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"23327:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23312:3:9"},"nodeType":"YulFunctionCall","src":"23312:18:9"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"23299:9:9"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"23147:1:9"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"23150:7:9"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"23144:2:9"},"nodeType":"YulFunctionCall","src":"23144:14:9"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"23159:21:9","statements":[{"nodeType":"YulAssignment","src":"23161:17:9","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"23170:1:9"},{"kind":"number","nodeType":"YulLiteral","src":"23173:4:9","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23166:3:9"},"nodeType":"YulFunctionCall","src":"23166:12:9"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"23161:1:9"}]}]},"pre":{"nodeType":"YulBlock","src":"23140:3:9","statements":[]},"src":"23136:208:9"},{"body":{"nodeType":"YulBlock","src":"23380:156:9","statements":[{"nodeType":"YulVariableDeclaration","src":"23398:43:9","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"23425:3:9"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"23430:9:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23421:3:9"},"nodeType":"YulFunctionCall","src":"23421:19:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"23415:5:9"},"nodeType":"YulFunctionCall","src":"23415:26:9"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"23402:9:9","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"23465:6:9"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"23492:9:9"},{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"23507:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"23515:4:9","type":"","value":"0x1f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"23503:3:9"},"nodeType":"YulFunctionCall","src":"23503:17:9"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"23473:18:9"},"nodeType":"YulFunctionCall","src":"23473:48:9"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"23458:6:9"},"nodeType":"YulFunctionCall","src":"23458:64:9"},"nodeType":"YulExpressionStatement","src":"23458:64:9"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"23363:7:9"},{"name":"newLen","nodeType":"YulIdentifier","src":"23372:6:9"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"23360:2:9"},"nodeType":"YulFunctionCall","src":"23360:19:9"},"nodeType":"YulIf","src":"23357:179:9"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"23556:4:9"},{"arguments":[{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"23570:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"23578:1:9","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"23566:3:9"},"nodeType":"YulFunctionCall","src":"23566:14:9"},{"kind":"number","nodeType":"YulLiteral","src":"23582:1:9","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23562:3:9"},"nodeType":"YulFunctionCall","src":"23562:22:9"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"23549:6:9"},"nodeType":"YulFunctionCall","src":"23549:36:9"},"nodeType":"YulExpressionStatement","src":"23549:36:9"}]},"nodeType":"YulCase","src":"22978:617:9","value":{"kind":"number","nodeType":"YulLiteral","src":"22983:1:9","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"23612:222:9","statements":[{"nodeType":"YulVariableDeclaration","src":"23626:14:9","value":{"kind":"number","nodeType":"YulLiteral","src":"23639:1:9","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"23630:5:9","type":""}]},{"body":{"nodeType":"YulBlock","src":"23663:67:9","statements":[{"nodeType":"YulAssignment","src":"23681:35:9","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"23700:3:9"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"23705:9:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23696:3:9"},"nodeType":"YulFunctionCall","src":"23696:19:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"23690:5:9"},"nodeType":"YulFunctionCall","src":"23690:26:9"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"23681:5:9"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"23656:6:9"},"nodeType":"YulIf","src":"23653:77:9"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"23750:4:9"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23809:5:9"},{"name":"newLen","nodeType":"YulIdentifier","src":"23816:6:9"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"23756:52:9"},"nodeType":"YulFunctionCall","src":"23756:67:9"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"23743:6:9"},"nodeType":"YulFunctionCall","src":"23743:81:9"},"nodeType":"YulExpressionStatement","src":"23743:81:9"}]},"nodeType":"YulCase","src":"23604:230:9","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"22958:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"22966:2:9","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"22955:2:9"},"nodeType":"YulFunctionCall","src":"22955:14:9"},"nodeType":"YulSwitch","src":"22948:886:9"}]},"name":"copy_byte_array_to_storage_from_t_bytes_memory_ptr_to_t_bytes_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"22529:4:9","type":""},{"name":"src","nodeType":"YulTypedName","src":"22535:3:9","type":""}],"src":"22450:1390:9"},{"body":{"nodeType":"YulBlock","src":"24028:367:9","statements":[{"nodeType":"YulAssignment","src":"24038:26:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24050:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"24061:2:9","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24046:3:9"},"nodeType":"YulFunctionCall","src":"24046:18:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24038:4:9"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"24118:6:9"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24131:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"24142:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24127:3:9"},"nodeType":"YulFunctionCall","src":"24127:17:9"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"24074:43:9"},"nodeType":"YulFunctionCall","src":"24074:71:9"},"nodeType":"YulExpressionStatement","src":"24074:71:9"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"24199:6:9"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24212:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"24223:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24208:3:9"},"nodeType":"YulFunctionCall","src":"24208:18:9"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"24155:43:9"},"nodeType":"YulFunctionCall","src":"24155:72:9"},"nodeType":"YulExpressionStatement","src":"24155:72:9"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24248:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"24259:2:9","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24244:3:9"},"nodeType":"YulFunctionCall","src":"24244:18:9"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"24268:4:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"24274:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"24264:3:9"},"nodeType":"YulFunctionCall","src":"24264:20:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24237:6:9"},"nodeType":"YulFunctionCall","src":"24237:48:9"},"nodeType":"YulExpressionStatement","src":"24237:48:9"},{"nodeType":"YulAssignment","src":"24294:94:9","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"24366:6:9"},{"name":"value3","nodeType":"YulIdentifier","src":"24374:6:9"},{"name":"tail","nodeType":"YulIdentifier","src":"24383:4:9"}],"functionName":{"name":"abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"24302:63:9"},"nodeType":"YulFunctionCall","src":"24302:86:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24294:4:9"}]}]},"name":"abi_encode_tuple_t_uint256_t_uint256_t_bytes_calldata_ptr__to_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"23976:9:9","type":""},{"name":"value3","nodeType":"YulTypedName","src":"23988:6:9","type":""},{"name":"value2","nodeType":"YulTypedName","src":"23996:6:9","type":""},{"name":"value1","nodeType":"YulTypedName","src":"24004:6:9","type":""},{"name":"value0","nodeType":"YulTypedName","src":"24012:6:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"24023:4:9","type":""}],"src":"23846:549:9"},{"body":{"nodeType":"YulBlock","src":"24507:119:9","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"24529:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"24537:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24525:3:9"},"nodeType":"YulFunctionCall","src":"24525:14:9"},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061","kind":"string","nodeType":"YulLiteral","src":"24541:34:9","type":"","value":"Ownable: new owner is the zero a"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24518:6:9"},"nodeType":"YulFunctionCall","src":"24518:58:9"},"nodeType":"YulExpressionStatement","src":"24518:58:9"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"24597:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"24605:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24593:3:9"},"nodeType":"YulFunctionCall","src":"24593:15:9"},{"hexValue":"646472657373","kind":"string","nodeType":"YulLiteral","src":"24610:8:9","type":"","value":"ddress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24586:6:9"},"nodeType":"YulFunctionCall","src":"24586:33:9"},"nodeType":"YulExpressionStatement","src":"24586:33:9"}]},"name":"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"24499:6:9","type":""}],"src":"24401:225:9"},{"body":{"nodeType":"YulBlock","src":"24778:220:9","statements":[{"nodeType":"YulAssignment","src":"24788:74:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24854:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"24859:2:9","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"24795:58:9"},"nodeType":"YulFunctionCall","src":"24795:67:9"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"24788:3:9"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24960:3:9"}],"functionName":{"name":"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","nodeType":"YulIdentifier","src":"24871:88:9"},"nodeType":"YulFunctionCall","src":"24871:93:9"},"nodeType":"YulExpressionStatement","src":"24871:93:9"},{"nodeType":"YulAssignment","src":"24973:19:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24984:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"24989:2:9","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24980:3:9"},"nodeType":"YulFunctionCall","src":"24980:12:9"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"24973:3:9"}]}]},"name":"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"24766:3:9","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"24774:3:9","type":""}],"src":"24632:366:9"},{"body":{"nodeType":"YulBlock","src":"25175:248:9","statements":[{"nodeType":"YulAssignment","src":"25185:26:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25197:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"25208:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25193:3:9"},"nodeType":"YulFunctionCall","src":"25193:18:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25185:4:9"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25232:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"25243:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25228:3:9"},"nodeType":"YulFunctionCall","src":"25228:17:9"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"25251:4:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"25257:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"25247:3:9"},"nodeType":"YulFunctionCall","src":"25247:20:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25221:6:9"},"nodeType":"YulFunctionCall","src":"25221:47:9"},"nodeType":"YulExpressionStatement","src":"25221:47:9"},{"nodeType":"YulAssignment","src":"25277:139:9","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"25411:4:9"}],"functionName":{"name":"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"25285:124:9"},"nodeType":"YulFunctionCall","src":"25285:131:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25277:4:9"}]}]},"name":"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"25155:9:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"25170:4:9","type":""}],"src":"25004:419:9"},{"body":{"nodeType":"YulBlock","src":"25535:117:9","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"25557:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"25565:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25553:3:9"},"nodeType":"YulFunctionCall","src":"25553:14:9"},{"hexValue":"45524332303a20617070726f76652066726f6d20746865207a65726f20616464","kind":"string","nodeType":"YulLiteral","src":"25569:34:9","type":"","value":"ERC20: approve from the zero add"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25546:6:9"},"nodeType":"YulFunctionCall","src":"25546:58:9"},"nodeType":"YulExpressionStatement","src":"25546:58:9"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"25625:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"25633:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25621:3:9"},"nodeType":"YulFunctionCall","src":"25621:15:9"},{"hexValue":"72657373","kind":"string","nodeType":"YulLiteral","src":"25638:6:9","type":"","value":"ress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25614:6:9"},"nodeType":"YulFunctionCall","src":"25614:31:9"},"nodeType":"YulExpressionStatement","src":"25614:31:9"}]},"name":"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"25527:6:9","type":""}],"src":"25429:223:9"},{"body":{"nodeType":"YulBlock","src":"25804:220:9","statements":[{"nodeType":"YulAssignment","src":"25814:74:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25880:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"25885:2:9","type":"","value":"36"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"25821:58:9"},"nodeType":"YulFunctionCall","src":"25821:67:9"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"25814:3:9"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25986:3:9"}],"functionName":{"name":"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","nodeType":"YulIdentifier","src":"25897:88:9"},"nodeType":"YulFunctionCall","src":"25897:93:9"},"nodeType":"YulExpressionStatement","src":"25897:93:9"},{"nodeType":"YulAssignment","src":"25999:19:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26010:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"26015:2:9","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26006:3:9"},"nodeType":"YulFunctionCall","src":"26006:12:9"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"25999:3:9"}]}]},"name":"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"25792:3:9","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"25800:3:9","type":""}],"src":"25658:366:9"},{"body":{"nodeType":"YulBlock","src":"26201:248:9","statements":[{"nodeType":"YulAssignment","src":"26211:26:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26223:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"26234:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26219:3:9"},"nodeType":"YulFunctionCall","src":"26219:18:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"26211:4:9"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26258:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"26269:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26254:3:9"},"nodeType":"YulFunctionCall","src":"26254:17:9"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"26277:4:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"26283:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"26273:3:9"},"nodeType":"YulFunctionCall","src":"26273:20:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26247:6:9"},"nodeType":"YulFunctionCall","src":"26247:47:9"},"nodeType":"YulExpressionStatement","src":"26247:47:9"},{"nodeType":"YulAssignment","src":"26303:139:9","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"26437:4:9"}],"functionName":{"name":"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"26311:124:9"},"nodeType":"YulFunctionCall","src":"26311:131:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"26303:4:9"}]}]},"name":"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"26181:9:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"26196:4:9","type":""}],"src":"26030:419:9"},{"body":{"nodeType":"YulBlock","src":"26561:115:9","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"26583:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"26591:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26579:3:9"},"nodeType":"YulFunctionCall","src":"26579:14:9"},{"hexValue":"45524332303a20617070726f766520746f20746865207a65726f206164647265","kind":"string","nodeType":"YulLiteral","src":"26595:34:9","type":"","value":"ERC20: approve to the zero addre"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26572:6:9"},"nodeType":"YulFunctionCall","src":"26572:58:9"},"nodeType":"YulExpressionStatement","src":"26572:58:9"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"26651:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"26659:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26647:3:9"},"nodeType":"YulFunctionCall","src":"26647:15:9"},{"hexValue":"7373","kind":"string","nodeType":"YulLiteral","src":"26664:4:9","type":"","value":"ss"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26640:6:9"},"nodeType":"YulFunctionCall","src":"26640:29:9"},"nodeType":"YulExpressionStatement","src":"26640:29:9"}]},"name":"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"26553:6:9","type":""}],"src":"26455:221:9"},{"body":{"nodeType":"YulBlock","src":"26828:220:9","statements":[{"nodeType":"YulAssignment","src":"26838:74:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26904:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"26909:2:9","type":"","value":"34"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"26845:58:9"},"nodeType":"YulFunctionCall","src":"26845:67:9"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"26838:3:9"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27010:3:9"}],"functionName":{"name":"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","nodeType":"YulIdentifier","src":"26921:88:9"},"nodeType":"YulFunctionCall","src":"26921:93:9"},"nodeType":"YulExpressionStatement","src":"26921:93:9"},{"nodeType":"YulAssignment","src":"27023:19:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27034:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"27039:2:9","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27030:3:9"},"nodeType":"YulFunctionCall","src":"27030:12:9"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"27023:3:9"}]}]},"name":"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"26816:3:9","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"26824:3:9","type":""}],"src":"26682:366:9"},{"body":{"nodeType":"YulBlock","src":"27225:248:9","statements":[{"nodeType":"YulAssignment","src":"27235:26:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27247:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"27258:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27243:3:9"},"nodeType":"YulFunctionCall","src":"27243:18:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27235:4:9"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27282:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"27293:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27278:3:9"},"nodeType":"YulFunctionCall","src":"27278:17:9"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"27301:4:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"27307:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"27297:3:9"},"nodeType":"YulFunctionCall","src":"27297:20:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27271:6:9"},"nodeType":"YulFunctionCall","src":"27271:47:9"},"nodeType":"YulExpressionStatement","src":"27271:47:9"},{"nodeType":"YulAssignment","src":"27327:139:9","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"27461:4:9"}],"functionName":{"name":"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"27335:124:9"},"nodeType":"YulFunctionCall","src":"27335:131:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27327:4:9"}]}]},"name":"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"27205:9:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"27220:4:9","type":""}],"src":"27054:419:9"},{"body":{"nodeType":"YulBlock","src":"27585:60:9","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"27607:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"27615:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27603:3:9"},"nodeType":"YulFunctionCall","src":"27603:14:9"},{"hexValue":"5061757361626c653a20706175736564","kind":"string","nodeType":"YulLiteral","src":"27619:18:9","type":"","value":"Pausable: paused"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27596:6:9"},"nodeType":"YulFunctionCall","src":"27596:42:9"},"nodeType":"YulExpressionStatement","src":"27596:42:9"}]},"name":"store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"27577:6:9","type":""}],"src":"27479:166:9"},{"body":{"nodeType":"YulBlock","src":"27797:220:9","statements":[{"nodeType":"YulAssignment","src":"27807:74:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27873:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"27878:2:9","type":"","value":"16"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"27814:58:9"},"nodeType":"YulFunctionCall","src":"27814:67:9"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"27807:3:9"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27979:3:9"}],"functionName":{"name":"store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a","nodeType":"YulIdentifier","src":"27890:88:9"},"nodeType":"YulFunctionCall","src":"27890:93:9"},"nodeType":"YulExpressionStatement","src":"27890:93:9"},{"nodeType":"YulAssignment","src":"27992:19:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28003:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"28008:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27999:3:9"},"nodeType":"YulFunctionCall","src":"27999:12:9"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"27992:3:9"}]}]},"name":"abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"27785:3:9","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"27793:3:9","type":""}],"src":"27651:366:9"},{"body":{"nodeType":"YulBlock","src":"28194:248:9","statements":[{"nodeType":"YulAssignment","src":"28204:26:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28216:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"28227:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28212:3:9"},"nodeType":"YulFunctionCall","src":"28212:18:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"28204:4:9"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28251:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"28262:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28247:3:9"},"nodeType":"YulFunctionCall","src":"28247:17:9"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"28270:4:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"28276:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"28266:3:9"},"nodeType":"YulFunctionCall","src":"28266:20:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28240:6:9"},"nodeType":"YulFunctionCall","src":"28240:47:9"},"nodeType":"YulExpressionStatement","src":"28240:47:9"},{"nodeType":"YulAssignment","src":"28296:139:9","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"28430:4:9"}],"functionName":{"name":"abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"28304:124:9"},"nodeType":"YulFunctionCall","src":"28304:131:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"28296:4:9"}]}]},"name":"abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"28174:9:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"28189:4:9","type":""}],"src":"28023:419:9"},{"body":{"nodeType":"YulBlock","src":"28554:73:9","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"28576:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"28584:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28572:3:9"},"nodeType":"YulFunctionCall","src":"28572:14:9"},{"hexValue":"45524332303a20696e73756666696369656e7420616c6c6f77616e6365","kind":"string","nodeType":"YulLiteral","src":"28588:31:9","type":"","value":"ERC20: insufficient allowance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28565:6:9"},"nodeType":"YulFunctionCall","src":"28565:55:9"},"nodeType":"YulExpressionStatement","src":"28565:55:9"}]},"name":"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"28546:6:9","type":""}],"src":"28448:179:9"},{"body":{"nodeType":"YulBlock","src":"28779:220:9","statements":[{"nodeType":"YulAssignment","src":"28789:74:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28855:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"28860:2:9","type":"","value":"29"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"28796:58:9"},"nodeType":"YulFunctionCall","src":"28796:67:9"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"28789:3:9"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28961:3:9"}],"functionName":{"name":"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","nodeType":"YulIdentifier","src":"28872:88:9"},"nodeType":"YulFunctionCall","src":"28872:93:9"},"nodeType":"YulExpressionStatement","src":"28872:93:9"},{"nodeType":"YulAssignment","src":"28974:19:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28985:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"28990:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28981:3:9"},"nodeType":"YulFunctionCall","src":"28981:12:9"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"28974:3:9"}]}]},"name":"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"28767:3:9","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"28775:3:9","type":""}],"src":"28633:366:9"},{"body":{"nodeType":"YulBlock","src":"29176:248:9","statements":[{"nodeType":"YulAssignment","src":"29186:26:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29198:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"29209:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29194:3:9"},"nodeType":"YulFunctionCall","src":"29194:18:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"29186:4:9"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29233:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"29244:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29229:3:9"},"nodeType":"YulFunctionCall","src":"29229:17:9"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"29252:4:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"29258:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"29248:3:9"},"nodeType":"YulFunctionCall","src":"29248:20:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29222:6:9"},"nodeType":"YulFunctionCall","src":"29222:47:9"},"nodeType":"YulExpressionStatement","src":"29222:47:9"},{"nodeType":"YulAssignment","src":"29278:139:9","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"29412:4:9"}],"functionName":{"name":"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"29286:124:9"},"nodeType":"YulFunctionCall","src":"29286:131:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"29278:4:9"}]}]},"name":"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"29156:9:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"29171:4:9","type":""}],"src":"29005:419:9"},{"body":{"nodeType":"YulBlock","src":"29536:118:9","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"29558:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"29566:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29554:3:9"},"nodeType":"YulFunctionCall","src":"29554:14:9"},{"hexValue":"45524332303a207472616e736665722066726f6d20746865207a65726f206164","kind":"string","nodeType":"YulLiteral","src":"29570:34:9","type":"","value":"ERC20: transfer from the zero ad"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29547:6:9"},"nodeType":"YulFunctionCall","src":"29547:58:9"},"nodeType":"YulExpressionStatement","src":"29547:58:9"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"29626:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"29634:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29622:3:9"},"nodeType":"YulFunctionCall","src":"29622:15:9"},{"hexValue":"6472657373","kind":"string","nodeType":"YulLiteral","src":"29639:7:9","type":"","value":"dress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29615:6:9"},"nodeType":"YulFunctionCall","src":"29615:32:9"},"nodeType":"YulExpressionStatement","src":"29615:32:9"}]},"name":"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"29528:6:9","type":""}],"src":"29430:224:9"},{"body":{"nodeType":"YulBlock","src":"29806:220:9","statements":[{"nodeType":"YulAssignment","src":"29816:74:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29882:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"29887:2:9","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"29823:58:9"},"nodeType":"YulFunctionCall","src":"29823:67:9"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"29816:3:9"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29988:3:9"}],"functionName":{"name":"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","nodeType":"YulIdentifier","src":"29899:88:9"},"nodeType":"YulFunctionCall","src":"29899:93:9"},"nodeType":"YulExpressionStatement","src":"29899:93:9"},{"nodeType":"YulAssignment","src":"30001:19:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30012:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"30017:2:9","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30008:3:9"},"nodeType":"YulFunctionCall","src":"30008:12:9"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"30001:3:9"}]}]},"name":"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"29794:3:9","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"29802:3:9","type":""}],"src":"29660:366:9"},{"body":{"nodeType":"YulBlock","src":"30203:248:9","statements":[{"nodeType":"YulAssignment","src":"30213:26:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30225:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"30236:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30221:3:9"},"nodeType":"YulFunctionCall","src":"30221:18:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"30213:4:9"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30260:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"30271:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30256:3:9"},"nodeType":"YulFunctionCall","src":"30256:17:9"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"30279:4:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"30285:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"30275:3:9"},"nodeType":"YulFunctionCall","src":"30275:20:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30249:6:9"},"nodeType":"YulFunctionCall","src":"30249:47:9"},"nodeType":"YulExpressionStatement","src":"30249:47:9"},{"nodeType":"YulAssignment","src":"30305:139:9","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"30439:4:9"}],"functionName":{"name":"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"30313:124:9"},"nodeType":"YulFunctionCall","src":"30313:131:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"30305:4:9"}]}]},"name":"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"30183:9:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"30198:4:9","type":""}],"src":"30032:419:9"},{"body":{"nodeType":"YulBlock","src":"30563:116:9","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"30585:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"30593:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30581:3:9"},"nodeType":"YulFunctionCall","src":"30581:14:9"},{"hexValue":"45524332303a207472616e7366657220746f20746865207a65726f2061646472","kind":"string","nodeType":"YulLiteral","src":"30597:34:9","type":"","value":"ERC20: transfer to the zero addr"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30574:6:9"},"nodeType":"YulFunctionCall","src":"30574:58:9"},"nodeType":"YulExpressionStatement","src":"30574:58:9"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"30653:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"30661:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30649:3:9"},"nodeType":"YulFunctionCall","src":"30649:15:9"},{"hexValue":"657373","kind":"string","nodeType":"YulLiteral","src":"30666:5:9","type":"","value":"ess"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30642:6:9"},"nodeType":"YulFunctionCall","src":"30642:30:9"},"nodeType":"YulExpressionStatement","src":"30642:30:9"}]},"name":"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"30555:6:9","type":""}],"src":"30457:222:9"},{"body":{"nodeType":"YulBlock","src":"30831:220:9","statements":[{"nodeType":"YulAssignment","src":"30841:74:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30907:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"30912:2:9","type":"","value":"35"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"30848:58:9"},"nodeType":"YulFunctionCall","src":"30848:67:9"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"30841:3:9"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"31013:3:9"}],"functionName":{"name":"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","nodeType":"YulIdentifier","src":"30924:88:9"},"nodeType":"YulFunctionCall","src":"30924:93:9"},"nodeType":"YulExpressionStatement","src":"30924:93:9"},{"nodeType":"YulAssignment","src":"31026:19:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"31037:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"31042:2:9","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31033:3:9"},"nodeType":"YulFunctionCall","src":"31033:12:9"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"31026:3:9"}]}]},"name":"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"30819:3:9","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"30827:3:9","type":""}],"src":"30685:366:9"},{"body":{"nodeType":"YulBlock","src":"31228:248:9","statements":[{"nodeType":"YulAssignment","src":"31238:26:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31250:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"31261:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31246:3:9"},"nodeType":"YulFunctionCall","src":"31246:18:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"31238:4:9"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31285:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"31296:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31281:3:9"},"nodeType":"YulFunctionCall","src":"31281:17:9"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"31304:4:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"31310:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"31300:3:9"},"nodeType":"YulFunctionCall","src":"31300:20:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31274:6:9"},"nodeType":"YulFunctionCall","src":"31274:47:9"},"nodeType":"YulExpressionStatement","src":"31274:47:9"},{"nodeType":"YulAssignment","src":"31330:139:9","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"31464:4:9"}],"functionName":{"name":"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"31338:124:9"},"nodeType":"YulFunctionCall","src":"31338:131:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"31330:4:9"}]}]},"name":"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"31208:9:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"31223:4:9","type":""}],"src":"31057:419:9"},{"body":{"nodeType":"YulBlock","src":"31588:119:9","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"31610:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"31618:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31606:3:9"},"nodeType":"YulFunctionCall","src":"31606:14:9"},{"hexValue":"45524332303a207472616e7366657220616d6f756e7420657863656564732062","kind":"string","nodeType":"YulLiteral","src":"31622:34:9","type":"","value":"ERC20: transfer amount exceeds b"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31599:6:9"},"nodeType":"YulFunctionCall","src":"31599:58:9"},"nodeType":"YulExpressionStatement","src":"31599:58:9"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"31678:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"31686:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31674:3:9"},"nodeType":"YulFunctionCall","src":"31674:15:9"},{"hexValue":"616c616e6365","kind":"string","nodeType":"YulLiteral","src":"31691:8:9","type":"","value":"alance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31667:6:9"},"nodeType":"YulFunctionCall","src":"31667:33:9"},"nodeType":"YulExpressionStatement","src":"31667:33:9"}]},"name":"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"31580:6:9","type":""}],"src":"31482:225:9"},{"body":{"nodeType":"YulBlock","src":"31859:220:9","statements":[{"nodeType":"YulAssignment","src":"31869:74:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"31935:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"31940:2:9","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"31876:58:9"},"nodeType":"YulFunctionCall","src":"31876:67:9"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"31869:3:9"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"32041:3:9"}],"functionName":{"name":"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","nodeType":"YulIdentifier","src":"31952:88:9"},"nodeType":"YulFunctionCall","src":"31952:93:9"},"nodeType":"YulExpressionStatement","src":"31952:93:9"},{"nodeType":"YulAssignment","src":"32054:19:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"32065:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"32070:2:9","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32061:3:9"},"nodeType":"YulFunctionCall","src":"32061:12:9"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"32054:3:9"}]}]},"name":"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"31847:3:9","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"31855:3:9","type":""}],"src":"31713:366:9"},{"body":{"nodeType":"YulBlock","src":"32256:248:9","statements":[{"nodeType":"YulAssignment","src":"32266:26:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32278:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"32289:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32274:3:9"},"nodeType":"YulFunctionCall","src":"32274:18:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"32266:4:9"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32313:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"32324:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32309:3:9"},"nodeType":"YulFunctionCall","src":"32309:17:9"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"32332:4:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"32338:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"32328:3:9"},"nodeType":"YulFunctionCall","src":"32328:20:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32302:6:9"},"nodeType":"YulFunctionCall","src":"32302:47:9"},"nodeType":"YulExpressionStatement","src":"32302:47:9"},{"nodeType":"YulAssignment","src":"32358:139:9","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"32492:4:9"}],"functionName":{"name":"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"32366:124:9"},"nodeType":"YulFunctionCall","src":"32366:131:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"32358:4:9"}]}]},"name":"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"32236:9:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"32251:4:9","type":""}],"src":"32085:419:9"},{"body":{"nodeType":"YulBlock","src":"32616:76:9","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"32638:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"32646:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32634:3:9"},"nodeType":"YulFunctionCall","src":"32634:14:9"},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","kind":"string","nodeType":"YulLiteral","src":"32650:34:9","type":"","value":"Ownable: caller is not the owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32627:6:9"},"nodeType":"YulFunctionCall","src":"32627:58:9"},"nodeType":"YulExpressionStatement","src":"32627:58:9"}]},"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"32608:6:9","type":""}],"src":"32510:182:9"},{"body":{"nodeType":"YulBlock","src":"32844:220:9","statements":[{"nodeType":"YulAssignment","src":"32854:74:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"32920:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"32925:2:9","type":"","value":"32"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"32861:58:9"},"nodeType":"YulFunctionCall","src":"32861:67:9"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"32854:3:9"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"33026:3:9"}],"functionName":{"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nodeType":"YulIdentifier","src":"32937:88:9"},"nodeType":"YulFunctionCall","src":"32937:93:9"},"nodeType":"YulExpressionStatement","src":"32937:93:9"},{"nodeType":"YulAssignment","src":"33039:19:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"33050:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"33055:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33046:3:9"},"nodeType":"YulFunctionCall","src":"33046:12:9"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"33039:3:9"}]}]},"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"32832:3:9","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"32840:3:9","type":""}],"src":"32698:366:9"},{"body":{"nodeType":"YulBlock","src":"33241:248:9","statements":[{"nodeType":"YulAssignment","src":"33251:26:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33263:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"33274:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33259:3:9"},"nodeType":"YulFunctionCall","src":"33259:18:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"33251:4:9"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33298:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"33309:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33294:3:9"},"nodeType":"YulFunctionCall","src":"33294:17:9"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"33317:4:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"33323:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"33313:3:9"},"nodeType":"YulFunctionCall","src":"33313:20:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33287:6:9"},"nodeType":"YulFunctionCall","src":"33287:47:9"},"nodeType":"YulExpressionStatement","src":"33287:47:9"},{"nodeType":"YulAssignment","src":"33343:139:9","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"33477:4:9"}],"functionName":{"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"33351:124:9"},"nodeType":"YulFunctionCall","src":"33351:131:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"33343:4:9"}]}]},"name":"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"33221:9:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"33236:4:9","type":""}],"src":"33070:419:9"},{"body":{"nodeType":"YulBlock","src":"33601:114:9","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"33623:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"33631:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33619:3:9"},"nodeType":"YulFunctionCall","src":"33619:14:9"},{"hexValue":"45524332303a206275726e2066726f6d20746865207a65726f20616464726573","kind":"string","nodeType":"YulLiteral","src":"33635:34:9","type":"","value":"ERC20: burn from the zero addres"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33612:6:9"},"nodeType":"YulFunctionCall","src":"33612:58:9"},"nodeType":"YulExpressionStatement","src":"33612:58:9"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"33691:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"33699:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33687:3:9"},"nodeType":"YulFunctionCall","src":"33687:15:9"},{"hexValue":"73","kind":"string","nodeType":"YulLiteral","src":"33704:3:9","type":"","value":"s"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33680:6:9"},"nodeType":"YulFunctionCall","src":"33680:28:9"},"nodeType":"YulExpressionStatement","src":"33680:28:9"}]},"name":"store_literal_in_memory_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"33593:6:9","type":""}],"src":"33495:220:9"},{"body":{"nodeType":"YulBlock","src":"33867:220:9","statements":[{"nodeType":"YulAssignment","src":"33877:74:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"33943:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"33948:2:9","type":"","value":"33"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"33884:58:9"},"nodeType":"YulFunctionCall","src":"33884:67:9"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"33877:3:9"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"34049:3:9"}],"functionName":{"name":"store_literal_in_memory_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f","nodeType":"YulIdentifier","src":"33960:88:9"},"nodeType":"YulFunctionCall","src":"33960:93:9"},"nodeType":"YulExpressionStatement","src":"33960:93:9"},{"nodeType":"YulAssignment","src":"34062:19:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"34073:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"34078:2:9","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34069:3:9"},"nodeType":"YulFunctionCall","src":"34069:12:9"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"34062:3:9"}]}]},"name":"abi_encode_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"33855:3:9","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"33863:3:9","type":""}],"src":"33721:366:9"},{"body":{"nodeType":"YulBlock","src":"34264:248:9","statements":[{"nodeType":"YulAssignment","src":"34274:26:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34286:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"34297:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34282:3:9"},"nodeType":"YulFunctionCall","src":"34282:18:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"34274:4:9"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34321:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"34332:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34317:3:9"},"nodeType":"YulFunctionCall","src":"34317:17:9"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"34340:4:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"34346:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"34336:3:9"},"nodeType":"YulFunctionCall","src":"34336:20:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34310:6:9"},"nodeType":"YulFunctionCall","src":"34310:47:9"},"nodeType":"YulExpressionStatement","src":"34310:47:9"},{"nodeType":"YulAssignment","src":"34366:139:9","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"34500:4:9"}],"functionName":{"name":"abi_encode_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"34374:124:9"},"nodeType":"YulFunctionCall","src":"34374:131:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"34366:4:9"}]}]},"name":"abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"34244:9:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"34259:4:9","type":""}],"src":"34093:419:9"},{"body":{"nodeType":"YulBlock","src":"34624:115:9","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"34646:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"34654:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34642:3:9"},"nodeType":"YulFunctionCall","src":"34642:14:9"},{"hexValue":"45524332303a206275726e20616d6f756e7420657863656564732062616c616e","kind":"string","nodeType":"YulLiteral","src":"34658:34:9","type":"","value":"ERC20: burn amount exceeds balan"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34635:6:9"},"nodeType":"YulFunctionCall","src":"34635:58:9"},"nodeType":"YulExpressionStatement","src":"34635:58:9"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"34714:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"34722:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34710:3:9"},"nodeType":"YulFunctionCall","src":"34710:15:9"},{"hexValue":"6365","kind":"string","nodeType":"YulLiteral","src":"34727:4:9","type":"","value":"ce"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34703:6:9"},"nodeType":"YulFunctionCall","src":"34703:29:9"},"nodeType":"YulExpressionStatement","src":"34703:29:9"}]},"name":"store_literal_in_memory_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"34616:6:9","type":""}],"src":"34518:221:9"},{"body":{"nodeType":"YulBlock","src":"34891:220:9","statements":[{"nodeType":"YulAssignment","src":"34901:74:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"34967:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"34972:2:9","type":"","value":"34"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"34908:58:9"},"nodeType":"YulFunctionCall","src":"34908:67:9"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"34901:3:9"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"35073:3:9"}],"functionName":{"name":"store_literal_in_memory_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd","nodeType":"YulIdentifier","src":"34984:88:9"},"nodeType":"YulFunctionCall","src":"34984:93:9"},"nodeType":"YulExpressionStatement","src":"34984:93:9"},{"nodeType":"YulAssignment","src":"35086:19:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"35097:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"35102:2:9","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35093:3:9"},"nodeType":"YulFunctionCall","src":"35093:12:9"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"35086:3:9"}]}]},"name":"abi_encode_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"34879:3:9","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"34887:3:9","type":""}],"src":"34745:366:9"},{"body":{"nodeType":"YulBlock","src":"35288:248:9","statements":[{"nodeType":"YulAssignment","src":"35298:26:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35310:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"35321:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35306:3:9"},"nodeType":"YulFunctionCall","src":"35306:18:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"35298:4:9"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35345:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"35356:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35341:3:9"},"nodeType":"YulFunctionCall","src":"35341:17:9"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"35364:4:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"35370:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"35360:3:9"},"nodeType":"YulFunctionCall","src":"35360:20:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35334:6:9"},"nodeType":"YulFunctionCall","src":"35334:47:9"},"nodeType":"YulExpressionStatement","src":"35334:47:9"},{"nodeType":"YulAssignment","src":"35390:139:9","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"35524:4:9"}],"functionName":{"name":"abi_encode_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"35398:124:9"},"nodeType":"YulFunctionCall","src":"35398:131:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"35390:4:9"}]}]},"name":"abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"35268:9:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"35283:4:9","type":""}],"src":"35117:419:9"},{"body":{"nodeType":"YulBlock","src":"35590:362:9","statements":[{"nodeType":"YulAssignment","src":"35600:25:9","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"35623:1:9"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"35605:17:9"},"nodeType":"YulFunctionCall","src":"35605:20:9"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"35600:1:9"}]},{"nodeType":"YulAssignment","src":"35634:25:9","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"35657:1:9"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"35639:17:9"},"nodeType":"YulFunctionCall","src":"35639:20:9"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"35634:1:9"}]},{"nodeType":"YulVariableDeclaration","src":"35668:28:9","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"35691:1:9"},{"name":"y","nodeType":"YulIdentifier","src":"35694:1:9"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"35687:3:9"},"nodeType":"YulFunctionCall","src":"35687:9:9"},"variables":[{"name":"product_raw","nodeType":"YulTypedName","src":"35672:11:9","type":""}]},{"nodeType":"YulAssignment","src":"35705:41:9","value":{"arguments":[{"name":"product_raw","nodeType":"YulIdentifier","src":"35734:11:9"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"35716:17:9"},"nodeType":"YulFunctionCall","src":"35716:30:9"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"35705:7:9"}]},{"body":{"nodeType":"YulBlock","src":"35923:22:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"35925:16:9"},"nodeType":"YulFunctionCall","src":"35925:18:9"},"nodeType":"YulExpressionStatement","src":"35925:18:9"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"35856:1:9"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"35849:6:9"},"nodeType":"YulFunctionCall","src":"35849:9:9"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"35879:1:9"},{"arguments":[{"name":"product","nodeType":"YulIdentifier","src":"35886:7:9"},{"name":"x","nodeType":"YulIdentifier","src":"35895:1:9"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"35882:3:9"},"nodeType":"YulFunctionCall","src":"35882:15:9"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"35876:2:9"},"nodeType":"YulFunctionCall","src":"35876:22:9"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"35829:2:9"},"nodeType":"YulFunctionCall","src":"35829:83:9"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"35809:6:9"},"nodeType":"YulFunctionCall","src":"35809:113:9"},"nodeType":"YulIf","src":"35806:139:9"}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"35573:1:9","type":""},{"name":"y","nodeType":"YulTypedName","src":"35576:1:9","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"35582:7:9","type":""}],"src":"35542:410:9"},{"body":{"nodeType":"YulBlock","src":"35986:152:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"36003:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"36006:77:9","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35996:6:9"},"nodeType":"YulFunctionCall","src":"35996:88:9"},"nodeType":"YulExpressionStatement","src":"35996:88:9"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"36100:1:9","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"36103:4:9","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"36093:6:9"},"nodeType":"YulFunctionCall","src":"36093:15:9"},"nodeType":"YulExpressionStatement","src":"36093:15:9"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"36124:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"36127:4:9","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"36117:6:9"},"nodeType":"YulFunctionCall","src":"36117:15:9"},"nodeType":"YulExpressionStatement","src":"36117:15:9"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"35958:180:9"},{"body":{"nodeType":"YulBlock","src":"36186:143:9","statements":[{"nodeType":"YulAssignment","src":"36196:25:9","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"36219:1:9"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"36201:17:9"},"nodeType":"YulFunctionCall","src":"36201:20:9"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"36196:1:9"}]},{"nodeType":"YulAssignment","src":"36230:25:9","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"36253:1:9"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"36235:17:9"},"nodeType":"YulFunctionCall","src":"36235:20:9"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"36230:1:9"}]},{"body":{"nodeType":"YulBlock","src":"36277:22:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"36279:16:9"},"nodeType":"YulFunctionCall","src":"36279:18:9"},"nodeType":"YulExpressionStatement","src":"36279:18:9"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"36274:1:9"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"36267:6:9"},"nodeType":"YulFunctionCall","src":"36267:9:9"},"nodeType":"YulIf","src":"36264:35:9"},{"nodeType":"YulAssignment","src":"36309:14:9","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"36318:1:9"},{"name":"y","nodeType":"YulIdentifier","src":"36321:1:9"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"36314:3:9"},"nodeType":"YulFunctionCall","src":"36314:9:9"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"36309:1:9"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"36175:1:9","type":""},{"name":"y","nodeType":"YulTypedName","src":"36178:1:9","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"36184:1:9","type":""}],"src":"36144:185:9"},{"body":{"nodeType":"YulBlock","src":"36441:75:9","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"36463:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"36471:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36459:3:9"},"nodeType":"YulFunctionCall","src":"36459:14:9"},{"hexValue":"45524332303a206d696e7420746f20746865207a65726f2061646472657373","kind":"string","nodeType":"YulLiteral","src":"36475:33:9","type":"","value":"ERC20: mint to the zero address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"36452:6:9"},"nodeType":"YulFunctionCall","src":"36452:57:9"},"nodeType":"YulExpressionStatement","src":"36452:57:9"}]},"name":"store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"36433:6:9","type":""}],"src":"36335:181:9"},{"body":{"nodeType":"YulBlock","src":"36668:220:9","statements":[{"nodeType":"YulAssignment","src":"36678:74:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"36744:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"36749:2:9","type":"","value":"31"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"36685:58:9"},"nodeType":"YulFunctionCall","src":"36685:67:9"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"36678:3:9"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"36850:3:9"}],"functionName":{"name":"store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","nodeType":"YulIdentifier","src":"36761:88:9"},"nodeType":"YulFunctionCall","src":"36761:93:9"},"nodeType":"YulExpressionStatement","src":"36761:93:9"},{"nodeType":"YulAssignment","src":"36863:19:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"36874:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"36879:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36870:3:9"},"nodeType":"YulFunctionCall","src":"36870:12:9"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"36863:3:9"}]}]},"name":"abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"36656:3:9","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"36664:3:9","type":""}],"src":"36522:366:9"},{"body":{"nodeType":"YulBlock","src":"37065:248:9","statements":[{"nodeType":"YulAssignment","src":"37075:26:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37087:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"37098:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37083:3:9"},"nodeType":"YulFunctionCall","src":"37083:18:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"37075:4:9"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37122:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"37133:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37118:3:9"},"nodeType":"YulFunctionCall","src":"37118:17:9"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"37141:4:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"37147:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"37137:3:9"},"nodeType":"YulFunctionCall","src":"37137:20:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"37111:6:9"},"nodeType":"YulFunctionCall","src":"37111:47:9"},"nodeType":"YulExpressionStatement","src":"37111:47:9"},{"nodeType":"YulAssignment","src":"37167:139:9","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"37301:4:9"}],"functionName":{"name":"abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"37175:124:9"},"nodeType":"YulFunctionCall","src":"37175:131:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"37167:4:9"}]}]},"name":"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"37045:9:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"37060:4:9","type":""}],"src":"36894:419:9"},{"body":{"nodeType":"YulBlock","src":"37361:52:9","statements":[{"nodeType":"YulAssignment","src":"37371:35:9","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"37396:2:9","type":"","value":"96"},{"name":"value","nodeType":"YulIdentifier","src":"37400:5:9"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"37392:3:9"},"nodeType":"YulFunctionCall","src":"37392:14:9"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"37371:8:9"}]}]},"name":"shift_left_96","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"37342:5:9","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"37352:8:9","type":""}],"src":"37319:94:9"},{"body":{"nodeType":"YulBlock","src":"37466:47:9","statements":[{"nodeType":"YulAssignment","src":"37476:31:9","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"37501:5:9"}],"functionName":{"name":"shift_left_96","nodeType":"YulIdentifier","src":"37487:13:9"},"nodeType":"YulFunctionCall","src":"37487:20:9"},"variableNames":[{"name":"aligned","nodeType":"YulIdentifier","src":"37476:7:9"}]}]},"name":"leftAlign_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"37448:5:9","type":""}],"returnVariables":[{"name":"aligned","nodeType":"YulTypedName","src":"37458:7:9","type":""}],"src":"37419:94:9"},{"body":{"nodeType":"YulBlock","src":"37566:53:9","statements":[{"nodeType":"YulAssignment","src":"37576:37:9","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"37607:5:9"}],"functionName":{"name":"leftAlign_t_uint160","nodeType":"YulIdentifier","src":"37587:19:9"},"nodeType":"YulFunctionCall","src":"37587:26:9"},"variableNames":[{"name":"aligned","nodeType":"YulIdentifier","src":"37576:7:9"}]}]},"name":"leftAlign_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"37548:5:9","type":""}],"returnVariables":[{"name":"aligned","nodeType":"YulTypedName","src":"37558:7:9","type":""}],"src":"37519:100:9"},{"body":{"nodeType":"YulBlock","src":"37708:74:9","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"37725:3:9"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"37768:5:9"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"37750:17:9"},"nodeType":"YulFunctionCall","src":"37750:24:9"}],"functionName":{"name":"leftAlign_t_address","nodeType":"YulIdentifier","src":"37730:19:9"},"nodeType":"YulFunctionCall","src":"37730:45:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"37718:6:9"},"nodeType":"YulFunctionCall","src":"37718:58:9"},"nodeType":"YulExpressionStatement","src":"37718:58:9"}]},"name":"abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"37696:5:9","type":""},{"name":"pos","nodeType":"YulTypedName","src":"37703:3:9","type":""}],"src":"37625:157:9"},{"body":{"nodeType":"YulBlock","src":"37835:32:9","statements":[{"nodeType":"YulAssignment","src":"37845:16:9","value":{"name":"value","nodeType":"YulIdentifier","src":"37856:5:9"},"variableNames":[{"name":"aligned","nodeType":"YulIdentifier","src":"37845:7:9"}]}]},"name":"leftAlign_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"37817:5:9","type":""}],"returnVariables":[{"name":"aligned","nodeType":"YulTypedName","src":"37827:7:9","type":""}],"src":"37788:79:9"},{"body":{"nodeType":"YulBlock","src":"37956:74:9","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"37973:3:9"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"38016:5:9"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"37998:17:9"},"nodeType":"YulFunctionCall","src":"37998:24:9"}],"functionName":{"name":"leftAlign_t_uint256","nodeType":"YulIdentifier","src":"37978:19:9"},"nodeType":"YulFunctionCall","src":"37978:45:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"37966:6:9"},"nodeType":"YulFunctionCall","src":"37966:58:9"},"nodeType":"YulExpressionStatement","src":"37966:58:9"}]},"name":"abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"37944:5:9","type":""},{"name":"pos","nodeType":"YulTypedName","src":"37951:3:9","type":""}],"src":"37873:157:9"},{"body":{"nodeType":"YulBlock","src":"38149:34:9","statements":[{"nodeType":"YulAssignment","src":"38159:18:9","value":{"name":"pos","nodeType":"YulIdentifier","src":"38174:3:9"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"38159:11:9"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"38121:3:9","type":""},{"name":"length","nodeType":"YulTypedName","src":"38126:6:9","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"38137:11:9","type":""}],"src":"38036:147:9"},{"body":{"nodeType":"YulBlock","src":"38329:209:9","statements":[{"nodeType":"YulAssignment","src":"38339:95:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"38422:3:9"},{"name":"length","nodeType":"YulIdentifier","src":"38427:6:9"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"38346:75:9"},"nodeType":"YulFunctionCall","src":"38346:88:9"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"38339:3:9"}]},{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"38481:5:9"},{"name":"pos","nodeType":"YulIdentifier","src":"38488:3:9"},{"name":"length","nodeType":"YulIdentifier","src":"38493:6:9"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"38444:36:9"},"nodeType":"YulFunctionCall","src":"38444:56:9"},"nodeType":"YulExpressionStatement","src":"38444:56:9"},{"nodeType":"YulAssignment","src":"38509:23:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"38520:3:9"},{"name":"length","nodeType":"YulIdentifier","src":"38525:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38516:3:9"},"nodeType":"YulFunctionCall","src":"38516:16:9"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"38509:3:9"}]}]},"name":"abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"38302:5:9","type":""},{"name":"length","nodeType":"YulTypedName","src":"38309:6:9","type":""},{"name":"pos","nodeType":"YulTypedName","src":"38317:3:9","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"38325:3:9","type":""}],"src":"38211:327:9"},{"body":{"nodeType":"YulBlock","src":"38744:373:9","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"38817:6:9"},{"name":"pos","nodeType":"YulIdentifier","src":"38826:3:9"}],"functionName":{"name":"abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"38755:61:9"},"nodeType":"YulFunctionCall","src":"38755:75:9"},"nodeType":"YulExpressionStatement","src":"38755:75:9"},{"nodeType":"YulAssignment","src":"38839:19:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"38850:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"38855:2:9","type":"","value":"20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38846:3:9"},"nodeType":"YulFunctionCall","src":"38846:12:9"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"38839:3:9"}]},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"38930:6:9"},{"name":"pos","nodeType":"YulIdentifier","src":"38939:3:9"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"38868:61:9"},"nodeType":"YulFunctionCall","src":"38868:75:9"},"nodeType":"YulExpressionStatement","src":"38868:75:9"},{"nodeType":"YulAssignment","src":"38952:19:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"38963:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"38968:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38959:3:9"},"nodeType":"YulFunctionCall","src":"38959:12:9"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"38952:3:9"}]},{"nodeType":"YulAssignment","src":"38981:110:9","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"39070:6:9"},{"name":"value3","nodeType":"YulIdentifier","src":"39078:6:9"},{"name":"pos","nodeType":"YulIdentifier","src":"39087:3:9"}],"functionName":{"name":"abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"38988:81:9"},"nodeType":"YulFunctionCall","src":"38988:103:9"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"38981:3:9"}]},{"nodeType":"YulAssignment","src":"39101:10:9","value":{"name":"pos","nodeType":"YulIdentifier","src":"39108:3:9"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"39101:3:9"}]}]},"name":"abi_encode_tuple_packed_t_address_t_uint256_t_bytes_calldata_ptr__to_t_address_t_uint256_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"38699:3:9","type":""},{"name":"value3","nodeType":"YulTypedName","src":"38705:6:9","type":""},{"name":"value2","nodeType":"YulTypedName","src":"38713:6:9","type":""},{"name":"value1","nodeType":"YulTypedName","src":"38721:6:9","type":""},{"name":"value0","nodeType":"YulTypedName","src":"38729:6:9","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"38740:3:9","type":""}],"src":"38544:573:9"},{"body":{"nodeType":"YulBlock","src":"39229:114:9","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"39251:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"39259:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39247:3:9"},"nodeType":"YulFunctionCall","src":"39247:14:9"},{"hexValue":"52657175657374206170706561727320746f2062652061206475706c69636174","kind":"string","nodeType":"YulLiteral","src":"39263:34:9","type":"","value":"Request appears to be a duplicat"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"39240:6:9"},"nodeType":"YulFunctionCall","src":"39240:58:9"},"nodeType":"YulExpressionStatement","src":"39240:58:9"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"39319:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"39327:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39315:3:9"},"nodeType":"YulFunctionCall","src":"39315:15:9"},{"hexValue":"65","kind":"string","nodeType":"YulLiteral","src":"39332:3:9","type":"","value":"e"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"39308:6:9"},"nodeType":"YulFunctionCall","src":"39308:28:9"},"nodeType":"YulExpressionStatement","src":"39308:28:9"}]},"name":"store_literal_in_memory_955d5c03ae98365b3505eba00b7e6d4dd87685869b10aacdc7b60c110ca7e23f","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"39221:6:9","type":""}],"src":"39123:220:9"},{"body":{"nodeType":"YulBlock","src":"39495:220:9","statements":[{"nodeType":"YulAssignment","src":"39505:74:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"39571:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"39576:2:9","type":"","value":"33"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"39512:58:9"},"nodeType":"YulFunctionCall","src":"39512:67:9"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"39505:3:9"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"39677:3:9"}],"functionName":{"name":"store_literal_in_memory_955d5c03ae98365b3505eba00b7e6d4dd87685869b10aacdc7b60c110ca7e23f","nodeType":"YulIdentifier","src":"39588:88:9"},"nodeType":"YulFunctionCall","src":"39588:93:9"},"nodeType":"YulExpressionStatement","src":"39588:93:9"},{"nodeType":"YulAssignment","src":"39690:19:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"39701:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"39706:2:9","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39697:3:9"},"nodeType":"YulFunctionCall","src":"39697:12:9"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"39690:3:9"}]}]},"name":"abi_encode_t_stringliteral_955d5c03ae98365b3505eba00b7e6d4dd87685869b10aacdc7b60c110ca7e23f_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"39483:3:9","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"39491:3:9","type":""}],"src":"39349:366:9"},{"body":{"nodeType":"YulBlock","src":"39892:248:9","statements":[{"nodeType":"YulAssignment","src":"39902:26:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"39914:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"39925:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39910:3:9"},"nodeType":"YulFunctionCall","src":"39910:18:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"39902:4:9"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"39949:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"39960:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39945:3:9"},"nodeType":"YulFunctionCall","src":"39945:17:9"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"39968:4:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"39974:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"39964:3:9"},"nodeType":"YulFunctionCall","src":"39964:20:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"39938:6:9"},"nodeType":"YulFunctionCall","src":"39938:47:9"},"nodeType":"YulExpressionStatement","src":"39938:47:9"},{"nodeType":"YulAssignment","src":"39994:139:9","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"40128:4:9"}],"functionName":{"name":"abi_encode_t_stringliteral_955d5c03ae98365b3505eba00b7e6d4dd87685869b10aacdc7b60c110ca7e23f_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"40002:124:9"},"nodeType":"YulFunctionCall","src":"40002:131:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"39994:4:9"}]}]},"name":"abi_encode_tuple_t_stringliteral_955d5c03ae98365b3505eba00b7e6d4dd87685869b10aacdc7b60c110ca7e23f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"39872:9:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"39887:4:9","type":""}],"src":"39721:419:9"},{"body":{"nodeType":"YulBlock","src":"40252:64:9","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"40274:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"40282:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40270:3:9"},"nodeType":"YulFunctionCall","src":"40270:14:9"},{"hexValue":"5061757361626c653a206e6f7420706175736564","kind":"string","nodeType":"YulLiteral","src":"40286:22:9","type":"","value":"Pausable: not paused"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"40263:6:9"},"nodeType":"YulFunctionCall","src":"40263:46:9"},"nodeType":"YulExpressionStatement","src":"40263:46:9"}]},"name":"store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"40244:6:9","type":""}],"src":"40146:170:9"},{"body":{"nodeType":"YulBlock","src":"40468:220:9","statements":[{"nodeType":"YulAssignment","src":"40478:74:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"40544:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"40549:2:9","type":"","value":"20"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"40485:58:9"},"nodeType":"YulFunctionCall","src":"40485:67:9"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"40478:3:9"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"40650:3:9"}],"functionName":{"name":"store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a","nodeType":"YulIdentifier","src":"40561:88:9"},"nodeType":"YulFunctionCall","src":"40561:93:9"},"nodeType":"YulExpressionStatement","src":"40561:93:9"},{"nodeType":"YulAssignment","src":"40663:19:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"40674:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"40679:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40670:3:9"},"nodeType":"YulFunctionCall","src":"40670:12:9"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"40663:3:9"}]}]},"name":"abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"40456:3:9","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"40464:3:9","type":""}],"src":"40322:366:9"},{"body":{"nodeType":"YulBlock","src":"40865:248:9","statements":[{"nodeType":"YulAssignment","src":"40875:26:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"40887:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"40898:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40883:3:9"},"nodeType":"YulFunctionCall","src":"40883:18:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"40875:4:9"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"40922:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"40933:1:9","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40918:3:9"},"nodeType":"YulFunctionCall","src":"40918:17:9"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"40941:4:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"40947:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"40937:3:9"},"nodeType":"YulFunctionCall","src":"40937:20:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"40911:6:9"},"nodeType":"YulFunctionCall","src":"40911:47:9"},"nodeType":"YulExpressionStatement","src":"40911:47:9"},{"nodeType":"YulAssignment","src":"40967:139:9","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"41101:4:9"}],"functionName":{"name":"abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"40975:124:9"},"nodeType":"YulFunctionCall","src":"40975:131:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"40967:4:9"}]}]},"name":"abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"40845:9:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"40860:4:9","type":""}],"src":"40694:419:9"},{"body":{"nodeType":"YulBlock","src":"41319:373:9","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"41392:6:9"},{"name":"pos","nodeType":"YulIdentifier","src":"41401:3:9"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"41330:61:9"},"nodeType":"YulFunctionCall","src":"41330:75:9"},"nodeType":"YulExpressionStatement","src":"41330:75:9"},{"nodeType":"YulAssignment","src":"41414:19:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"41425:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"41430:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41421:3:9"},"nodeType":"YulFunctionCall","src":"41421:12:9"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"41414:3:9"}]},{"nodeType":"YulAssignment","src":"41443:110:9","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"41532:6:9"},{"name":"value2","nodeType":"YulIdentifier","src":"41540:6:9"},{"name":"pos","nodeType":"YulIdentifier","src":"41549:3:9"}],"functionName":{"name":"abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"41450:81:9"},"nodeType":"YulFunctionCall","src":"41450:103:9"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"41443:3:9"}]},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"41625:6:9"},{"name":"pos","nodeType":"YulIdentifier","src":"41634:3:9"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"41563:61:9"},"nodeType":"YulFunctionCall","src":"41563:75:9"},"nodeType":"YulExpressionStatement","src":"41563:75:9"},{"nodeType":"YulAssignment","src":"41647:19:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"41658:3:9"},{"kind":"number","nodeType":"YulLiteral","src":"41663:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41654:3:9"},"nodeType":"YulFunctionCall","src":"41654:12:9"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"41647:3:9"}]},{"nodeType":"YulAssignment","src":"41676:10:9","value":{"name":"pos","nodeType":"YulIdentifier","src":"41683:3:9"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"41676:3:9"}]}]},"name":"abi_encode_tuple_packed_t_uint256_t_bytes_calldata_ptr_t_uint256__to_t_uint256_t_bytes_memory_ptr_t_uint256__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"41274:3:9","type":""},{"name":"value3","nodeType":"YulTypedName","src":"41280:6:9","type":""},{"name":"value2","nodeType":"YulTypedName","src":"41288:6:9","type":""},{"name":"value1","nodeType":"YulTypedName","src":"41296:6:9","type":""},{"name":"value0","nodeType":"YulTypedName","src":"41304:6:9","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"41315:3:9","type":""}],"src":"41119:573:9"}]},"contents":"{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x01)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_bytes32t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1, value2 := abi_decode_t_bytes_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_bytes_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1, value2 := abi_decode_t_bytes_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_03ea8cfeff0459e125641b51ffaeaacb881b172abb4a1cae381360ba7e33f193(memPtr) {\n\n        mstore(add(memPtr, 0), \"Must have a valid requestId\")\n\n    }\n\n    function abi_encode_t_stringliteral_03ea8cfeff0459e125641b51ffaeaacb881b172abb4a1cae381360ba7e33f193_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_03ea8cfeff0459e125641b51ffaeaacb881b172abb4a1cae381360ba7e33f193(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_03ea8cfeff0459e125641b51ffaeaacb881b172abb4a1cae381360ba7e33f193__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_03ea8cfeff0459e125641b51ffaeaacb881b172abb4a1cae381360ba7e33f193_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_3171005413b2d9c41f1a7950fecbe6684be54180b50a3918c59874ae6ee26d66(memPtr) {\n\n        mstore(add(memPtr, 0), \"Requester does not match\")\n\n    }\n\n    function abi_encode_t_stringliteral_3171005413b2d9c41f1a7950fecbe6684be54180b50a3918c59874ae6ee26d66_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_3171005413b2d9c41f1a7950fecbe6684be54180b50a3918c59874ae6ee26d66(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3171005413b2d9c41f1a7950fecbe6684be54180b50a3918c59874ae6ee26d66__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3171005413b2d9c41f1a7950fecbe6684be54180b50a3918c59874ae6ee26d66_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    // bytes -> bytes\n    function abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack(start, length, pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n\n        copy_calldata_to_memory_with_cleanup(start, pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack(value0, value1,  tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_6e0ba3ea59b30a840c0b797c7d04b6c612b68aaacf304abeb8524b82759a6e30(memPtr) {\n\n        mstore(add(memPtr, 0), \"You cannot mint directly\")\n\n    }\n\n    function abi_encode_t_stringliteral_6e0ba3ea59b30a840c0b797c7d04b6c612b68aaacf304abeb8524b82759a6e30_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_6e0ba3ea59b30a840c0b797c7d04b6c612b68aaacf304abeb8524b82759a6e30(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_6e0ba3ea59b30a840c0b797c7d04b6c612b68aaacf304abeb8524b82759a6e30__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6e0ba3ea59b30a840c0b797c7d04b6c612b68aaacf304abeb8524b82759a6e30_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: decreased allowance below\")\n\n        mstore(add(memPtr, 32), \" zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_178737e5f8d3bb08805c837a16fa9250a9a3808ba7fad1041b7fb05f30c86cda(memPtr) {\n\n        mstore(add(memPtr, 0), \"Request is expired\")\n\n    }\n\n    function abi_encode_t_stringliteral_178737e5f8d3bb08805c837a16fa9250a9a3808ba7fad1041b7fb05f30c86cda_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_178737e5f8d3bb08805c837a16fa9250a9a3808ba7fad1041b7fb05f30c86cda(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_178737e5f8d3bb08805c837a16fa9250a9a3808ba7fad1041b7fb05f30c86cda__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_178737e5f8d3bb08805c837a16fa9250a9a3808ba7fad1041b7fb05f30c86cda_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_dataslot_t_bytes_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_bytes_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_bytes_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_bytes_memory_ptr_to_t_bytes_storage(slot, src) {\n\n        let newLen := array_length_t_bytes_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_bytes_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_bytes_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_bytes_calldata_ptr__to_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack(value2, value3,  tail)\n\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve from the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve to the zero addre\")\n\n        mstore(add(memPtr, 32), \"ss\")\n\n    }\n\n    function abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Pausable: paused\")\n\n    }\n\n    function abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: insufficient allowance\")\n\n    }\n\n    function abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer from the zero ad\")\n\n        mstore(add(memPtr, 32), \"dress\")\n\n    }\n\n    function abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer to the zero addr\")\n\n        mstore(add(memPtr, 32), \"ess\")\n\n    }\n\n    function abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer amount exceeds b\")\n\n        mstore(add(memPtr, 32), \"alance\")\n\n    }\n\n    function abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: burn from the zero addres\")\n\n        mstore(add(memPtr, 32), \"s\")\n\n    }\n\n    function abi_encode_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: burn amount exceeds balan\")\n\n        mstore(add(memPtr, 32), \"ce\")\n\n    }\n\n    function abi_encode_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: mint to the zero address\")\n\n    }\n\n    function abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function shift_left_96(value) -> newValue {\n        newValue :=\n\n        shl(96, value)\n\n    }\n\n    function leftAlign_t_uint160(value) -> aligned {\n        aligned := shift_left_96(value)\n    }\n\n    function leftAlign_t_address(value) -> aligned {\n        aligned := leftAlign_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_address(cleanup_t_address(value)))\n    }\n\n    function leftAlign_t_uint256(value) -> aligned {\n        aligned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_uint256(cleanup_t_uint256(value)))\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    // bytes -> bytes\n    function abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(start, length, pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n\n        copy_calldata_to_memory_with_cleanup(start, pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_address_t_uint256_t_bytes_calldata_ptr__to_t_address_t_uint256_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value3, value2, value1, value0) -> end {\n\n        abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value0,  pos)\n        pos := add(pos, 20)\n\n        abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value1,  pos)\n        pos := add(pos, 32)\n\n        pos := abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value2, value3,  pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_955d5c03ae98365b3505eba00b7e6d4dd87685869b10aacdc7b60c110ca7e23f(memPtr) {\n\n        mstore(add(memPtr, 0), \"Request appears to be a duplicat\")\n\n        mstore(add(memPtr, 32), \"e\")\n\n    }\n\n    function abi_encode_t_stringliteral_955d5c03ae98365b3505eba00b7e6d4dd87685869b10aacdc7b60c110ca7e23f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_955d5c03ae98365b3505eba00b7e6d4dd87685869b10aacdc7b60c110ca7e23f(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_955d5c03ae98365b3505eba00b7e6d4dd87685869b10aacdc7b60c110ca7e23f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_955d5c03ae98365b3505eba00b7e6d4dd87685869b10aacdc7b60c110ca7e23f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Pausable: not paused\")\n\n    }\n\n    function abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_packed_t_uint256_t_bytes_calldata_ptr_t_uint256__to_t_uint256_t_bytes_memory_ptr_t_uint256__nonPadded_inplace_fromStack_reversed(pos , value3, value2, value1, value0) -> end {\n\n        abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value0,  pos)\n        pos := add(pos, 32)\n\n        pos := abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value1, value2,  pos)\n\n        abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value3,  pos)\n        pos := add(pos, 32)\n\n        end := pos\n    }\n\n}\n","id":9,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106101da5760003560e01c806363ffab3111610104578063a457c2d7116100a2578063ac5b756d11610071578063ac5b756d1461050f578063cdc1f6d41461052b578063dd62ed3e14610547578063f2fde38b14610577576101da565b8063a457c2d714610477578063a4629533146104a7578063a9059cbb146104c3578063a91d58b4146104f3576101da565b806379cc6790116100de57806379cc6790146104155780638456cb59146104315780638da5cb5b1461043b57806395d89b4114610459576101da565b806363ffab31146103bd57806370a08231146103db578063715018a61461040b576101da565b8063313ce5671161017c5780633f4ba83a1161014b5780633f4ba83a1461035d57806340c10f191461036757806342966c68146103835780635c975abb1461039f576101da565b8063313ce567146102d357806334913f28146102f1578063395093511461030f5780633addb12c1461033f576101da565b806318160ddd116101b857806318160ddd1461024b57806321a7e7e91461026957806323b872dd1461028557806325cb5bc0146102b5576101da565b806306fdde03146101df578063095ea7b3146101fd5780631285cc2a1461022d575b600080fd5b6101e7610593565b6040516101f49190611d5f565b60405180910390f35b61021760048036038101906102129190611e29565b610625565b6040516102249190611e84565b60405180910390f35b610235610648565b6040516102429190611eae565b60405180910390f35b61025361064d565b6040516102609190611eae565b60405180910390f35b610283600480360381019061027e9190611f64565b610657565b005b61029f600480360381019061029a9190611fc4565b6107cc565b6040516102ac9190611e84565b60405180910390f35b6102bd6107fb565b6040516102ca9190611eae565b60405180910390f35b6102db610801565b6040516102e89190612033565b60405180910390f35b6102f961080a565b6040516103069190611eae565b60405180910390f35b61032960048036038101906103249190611e29565b610810565b6040516103369190611e84565b60405180910390f35b610347610847565b6040516103549190611eae565b60405180910390f35b610365610859565b005b610381600480360381019061037c9190611e29565b61086b565b005b61039d6004803603810190610398919061204e565b6108ae565b005b6103a76108c2565b6040516103b49190611e84565b60405180910390f35b6103c56108d9565b6040516103d291906120d0565b60405180910390f35b6103f560048036038101906103f091906120f2565b610967565b6040516104029190611eae565b60405180910390f35b6104136109af565b005b61042f600480360381019061042a9190611e29565b6109c3565b005b6104396109e3565b005b6104436109f5565b604051610450919061212e565b60405180910390f35b610461610a1f565b60405161046e9190611d5f565b60405180910390f35b610491600480360381019061048c9190611e29565b610ab1565b60405161049e9190611e84565b60405180910390f35b6104c160048036038101906104bc9190611f64565b610b28565b005b6104dd60048036038101906104d89190611e29565b610c8e565b6040516104ea9190611e84565b60405180910390f35b61050d60048036038101906105089190612279565b610cb1565b005b610529600480360381019061052491906122c2565b610ccc565b005b610545600480360381019061054091906122ef565b610e63565b005b610561600480360381019061055c919061234f565b610eda565b60405161056e9190611eae565b60405180910390f35b610591600480360381019061058c91906120f2565b610f61565b005b6060600380546105a2906123be565b80601f01602080910402602001604051908101604052809291908181526020018280546105ce906123be565b801561061b5780601f106105f05761010080835404028352916020019161061b565b820191906000526020600020905b8154815290600101906020018083116105fe57829003601f168201915b5050505050905090565b600080610630610fe4565b905061063d818585610fec565b600191505092915050565b600a81565b6000600254905090565b61065f6111b5565b82600060081b6007600083815260200190815260200160002060000160009054906101000a900460081b60ff1916036106cd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106c49061243b565b60405180910390fd5b83338073ffffffffffffffffffffffffffffffffffffffff166007600084815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610773576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161076a906124a7565b60405180910390fd5b853373ffffffffffffffffffffffffffffffffffffffff167fa3cd7d021dc9794ae8a4520e68440669e45a8758c6feac5a46db4c6953d35d2587876040516107bc9291906124f4565b60405180910390a3505050505050565b6000806107d7610fe4565b90506107e48582856111ff565b6107ef85858561128b565b60019150509392505050565b611c2081565b60006012905090565b61271081565b60008061081b610fe4565b905061083c81858561082d8589610eda565b6108379190612547565b610fec565b600191505092915050565b600a612710610856919061257b565b81565b610861611501565b61086961157f565b565b610873611501565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108a5906125fb565b60405180910390fd5b6108bf6108b9610fe4565b826115e2565b50565b6000600560009054906101000a900460ff16905090565b600680546108e6906123be565b80601f0160208091040260200160405190810160405280929190818152602001828054610912906123be565b801561095f5780601f106109345761010080835404028352916020019161095f565b820191906000526020600020905b81548152906001019060200180831161094257829003601f168201915b505050505081565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6109b7611501565b6109c160006117af565b565b6109d5826109cf610fe4565b836111ff565b6109df82826115e2565b5050565b6109eb611501565b6109f3611875565b565b6000600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060048054610a2e906123be565b80601f0160208091040260200160405190810160405280929190818152602001828054610a5a906123be565b8015610aa75780601f10610a7c57610100808354040283529160200191610aa7565b820191906000526020600020905b815481529060010190602001808311610a8a57829003601f168201915b5050505050905090565b600080610abc610fe4565b90506000610aca8286610eda565b905083811015610b0f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b069061268d565b60405180910390fd5b610b1c8286868403610fec565b60019250505092915050565b610b30611501565b610b386111b5565b82600060081b6007600083815260200190815260200160002060000160009054906101000a900460081b60ff191603610ba6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b9d9061243b565b60405180910390fd5b834260076000838152602001908152602001600020600201541015610c00576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bf7906126f9565b60405180910390fd5b846007600087815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f220f931a071dfcd35fda9f25680cb03785508840415a802de6e99230f889862b8686604051610c7f9291906124f4565b60405180910390a35050505050565b600080610c99610fe4565b9050610ca681858561128b565b600191505092915050565b610cb9611501565b8060069081610cc891906128c5565b5050565b610cd4611501565b610cdc6111b5565b80600060081b6007600083815260200190815260200160002060000160009054906101000a900460081b60ff191603610d4a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d419061243b565b60405180910390fd5b60006007600084815260200190815260200160002060030154905060006007600085815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060076000858152602001908152602001600020600080820160006101000a8154907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff02191690556001820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055600282016000905560038201600090555050610e5d81610e58612710610e4a600a612710610e3b919061257b565b876118d890919063ffffffff16565b6118ee90919063ffffffff16565b611904565b50505050565b610e6b6111b5565b600080610e7a33868686611a5a565b91509150813373ffffffffffffffffffffffffffffffffffffffff167f45fa4b26a755f4cc5780432570badb0410d1ed0c688479aa9e708761ffb82ec287848888604051610ecb9493929190612997565b60405180910390a35050505050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b610f69611501565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610fd8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fcf90612a49565b60405180910390fd5b610fe1816117af565b50565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361105b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161105290612adb565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036110ca576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110c190612b6d565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516111a89190611eae565b60405180910390a3505050565b6111bd6108c2565b156111fd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111f490612bd9565b60405180910390fd5b565b600061120b8484610eda565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146112855781811015611277576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161126e90612c45565b60405180910390fd5b6112848484848403610fec565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036112fa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112f190612cd7565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611369576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161136090612d69565b60405180910390fd5b611374838383611c15565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050818110156113fa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113f190612dfb565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516114e89190611eae565b60405180910390a36114fb848484611c2d565b50505050565b611509610fe4565b73ffffffffffffffffffffffffffffffffffffffff166115276109f5565b73ffffffffffffffffffffffffffffffffffffffff161461157d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161157490612e67565b60405180910390fd5b565b611587611c32565b6000600560006101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6115cb610fe4565b6040516115d8919061212e565b60405180910390a1565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611651576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161164890612ef9565b60405180910390fd5b61165d82600083611c15565b60008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050818110156116e3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116da90612f8b565b60405180910390fd5b8181036000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081600260008282540392505081905550600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516117969190611eae565b60405180910390a36117aa83600084611c2d565b505050565b6000600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b61187d6111b5565b6001600560006101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586118c1610fe4565b6040516118ce919061212e565b60405180910390a1565b600081836118e69190612fab565b905092915050565b600081836118fc919061301c565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611973576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161196a90613099565b60405180910390fd5b61197f60008383611c15565b80600260008282546119919190612547565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051611a429190611eae565b60405180910390a3611a5660008383611c2d565b5050565b60008085858585604051602001611a749493929190613152565b604051602081830303815290604052805190602001209150600060081b6007600084815260200190815260200160002060000160009054906101000a900460081b60ff191614611af9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611af0906131ff565b60405180910390fd5b611b0e611c2042611c7b90919063ffffffff16565b90506000611b1e86868685611c91565b905060405180608001604052808260ff191681526020018873ffffffffffffffffffffffffffffffffffffffff168152602001838152602001878152506007600085815260200190815260200160002060008201518160000160006101000a8154817effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff021916908360081c021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020155606082015181600301559050505094509492505050565b611c1d6111b5565b611c28838383611cca565b505050565b505050565b611c3a6108c2565b611c79576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c709061326b565b60405180910390fd5b565b60008183611c899190612547565b905092915050565b600084848484604051602001611caa949392919061328b565b604051602081830303815290604052805190602001209050949350505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611d09578082015181840152602081019050611cee565b60008484015250505050565b6000601f19601f8301169050919050565b6000611d3182611ccf565b611d3b8185611cda565b9350611d4b818560208601611ceb565b611d5481611d15565b840191505092915050565b60006020820190508181036000830152611d798184611d26565b905092915050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611dc082611d95565b9050919050565b611dd081611db5565b8114611ddb57600080fd5b50565b600081359050611ded81611dc7565b92915050565b6000819050919050565b611e0681611df3565b8114611e1157600080fd5b50565b600081359050611e2381611dfd565b92915050565b60008060408385031215611e4057611e3f611d8b565b5b6000611e4e85828601611dde565b9250506020611e5f85828601611e14565b9150509250929050565b60008115159050919050565b611e7e81611e69565b82525050565b6000602082019050611e996000830184611e75565b92915050565b611ea881611df3565b82525050565b6000602082019050611ec36000830184611e9f565b92915050565b6000819050919050565b611edc81611ec9565b8114611ee757600080fd5b50565b600081359050611ef981611ed3565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f840112611f2457611f23611eff565b5b8235905067ffffffffffffffff811115611f4157611f40611f04565b5b602083019150836001820283011115611f5d57611f5c611f09565b5b9250929050565b600080600060408486031215611f7d57611f7c611d8b565b5b6000611f8b86828701611eea565b935050602084013567ffffffffffffffff811115611fac57611fab611d90565b5b611fb886828701611f0e565b92509250509250925092565b600080600060608486031215611fdd57611fdc611d8b565b5b6000611feb86828701611dde565b9350506020611ffc86828701611dde565b925050604061200d86828701611e14565b9150509250925092565b600060ff82169050919050565b61202d81612017565b82525050565b60006020820190506120486000830184612024565b92915050565b60006020828403121561206457612063611d8b565b5b600061207284828501611e14565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60006120a28261207b565b6120ac8185612086565b93506120bc818560208601611ceb565b6120c581611d15565b840191505092915050565b600060208201905081810360008301526120ea8184612097565b905092915050565b60006020828403121561210857612107611d8b565b5b600061211684828501611dde565b91505092915050565b61212881611db5565b82525050565b6000602082019050612143600083018461211f565b92915050565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61218682611d15565b810181811067ffffffffffffffff821117156121a5576121a461214e565b5b80604052505050565b60006121b8611d81565b90506121c4828261217d565b919050565b600067ffffffffffffffff8211156121e4576121e361214e565b5b6121ed82611d15565b9050602081019050919050565b82818337600083830152505050565b600061221c612217846121c9565b6121ae565b90508281526020810184848401111561223857612237612149565b5b6122438482856121fa565b509392505050565b600082601f8301126122605761225f611eff565b5b8135612270848260208601612209565b91505092915050565b60006020828403121561228f5761228e611d8b565b5b600082013567ffffffffffffffff8111156122ad576122ac611d90565b5b6122b98482850161224b565b91505092915050565b6000602082840312156122d8576122d7611d8b565b5b60006122e684828501611eea565b91505092915050565b60008060006040848603121561230857612307611d8b565b5b600061231686828701611e14565b935050602084013567ffffffffffffffff81111561233757612336611d90565b5b61234386828701611f0e565b92509250509250925092565b6000806040838503121561236657612365611d8b565b5b600061237485828601611dde565b925050602061238585828601611dde565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806123d657607f821691505b6020821081036123e9576123e861238f565b5b50919050565b7f4d757374206861766520612076616c6964207265717565737449640000000000600082015250565b6000612425601b83611cda565b9150612430826123ef565b602082019050919050565b6000602082019050818103600083015261245481612418565b9050919050565b7f52657175657374657220646f6573206e6f74206d617463680000000000000000600082015250565b6000612491601883611cda565b915061249c8261245b565b602082019050919050565b600060208201905081810360008301526124c081612484565b9050919050565b60006124d38385612086565b93506124e08385846121fa565b6124e983611d15565b840190509392505050565b6000602082019050818103600083015261250f8184866124c7565b90509392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061255282611df3565b915061255d83611df3565b925082820190508082111561257557612574612518565b5b92915050565b600061258682611df3565b915061259183611df3565b92508282039050818111156125a9576125a8612518565b5b92915050565b7f596f752063616e6e6f74206d696e74206469726563746c790000000000000000600082015250565b60006125e5601883611cda565b91506125f0826125af565b602082019050919050565b60006020820190508181036000830152612614816125d8565b9050919050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b6000612677602583611cda565b91506126828261261b565b604082019050919050565b600060208201905081810360008301526126a68161266a565b9050919050565b7f5265717565737420697320657870697265640000000000000000000000000000600082015250565b60006126e3601283611cda565b91506126ee826126ad565b602082019050919050565b60006020820190508181036000830152612712816126d6565b9050919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b60006008830261277b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261273e565b612785868361273e565b95508019841693508086168417925050509392505050565b6000819050919050565b60006127c26127bd6127b884611df3565b61279d565b611df3565b9050919050565b6000819050919050565b6127dc836127a7565b6127f06127e8826127c9565b84845461274b565b825550505050565b600090565b6128056127f8565b6128108184846127d3565b505050565b5b81811015612834576128296000826127fd565b600181019050612816565b5050565b601f8211156128795761284a81612719565b6128538461272e565b81016020851015612862578190505b61287661286e8561272e565b830182612815565b50505b505050565b600082821c905092915050565b600061289c6000198460080261287e565b1980831691505092915050565b60006128b5838361288b565b9150826002028217905092915050565b6128ce8261207b565b67ffffffffffffffff8111156128e7576128e661214e565b5b6128f182546123be565b6128fc828285612838565b600060209050601f83116001811461292f576000841561291d578287015190505b61292785826128a9565b86555061298f565b601f19841661293d86612719565b60005b8281101561296557848901518255600182019150602085019450602081019050612940565b86831015612982578489015161297e601f89168261288b565b8355505b6001600288020188555050505b505050505050565b60006060820190506129ac6000830187611e9f565b6129b96020830186611e9f565b81810360408301526129cc8184866124c7565b905095945050505050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000612a33602683611cda565b9150612a3e826129d7565b604082019050919050565b60006020820190508181036000830152612a6281612a26565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000612ac5602483611cda565b9150612ad082612a69565b604082019050919050565b60006020820190508181036000830152612af481612ab8565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b6000612b57602283611cda565b9150612b6282612afb565b604082019050919050565b60006020820190508181036000830152612b8681612b4a565b9050919050565b7f5061757361626c653a2070617573656400000000000000000000000000000000600082015250565b6000612bc3601083611cda565b9150612bce82612b8d565b602082019050919050565b60006020820190508181036000830152612bf281612bb6565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b6000612c2f601d83611cda565b9150612c3a82612bf9565b602082019050919050565b60006020820190508181036000830152612c5e81612c22565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b6000612cc1602583611cda565b9150612ccc82612c65565b604082019050919050565b60006020820190508181036000830152612cf081612cb4565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b6000612d53602383611cda565b9150612d5e82612cf7565b604082019050919050565b60006020820190508181036000830152612d8281612d46565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b6000612de5602683611cda565b9150612df082612d89565b604082019050919050565b60006020820190508181036000830152612e1481612dd8565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000612e51602083611cda565b9150612e5c82612e1b565b602082019050919050565b60006020820190508181036000830152612e8081612e44565b9050919050565b7f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360008201527f7300000000000000000000000000000000000000000000000000000000000000602082015250565b6000612ee3602183611cda565b9150612eee82612e87565b604082019050919050565b60006020820190508181036000830152612f1281612ed6565b9050919050565b7f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60008201527f6365000000000000000000000000000000000000000000000000000000000000602082015250565b6000612f75602283611cda565b9150612f8082612f19565b604082019050919050565b60006020820190508181036000830152612fa481612f68565b9050919050565b6000612fb682611df3565b9150612fc183611df3565b9250828202612fcf81611df3565b91508282048414831517612fe657612fe5612518565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061302782611df3565b915061303283611df3565b92508261304257613041612fed565b5b828204905092915050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b6000613083601f83611cda565b915061308e8261304d565b602082019050919050565b600060208201905081810360008301526130b281613076565b9050919050565b60008160601b9050919050565b60006130d1826130b9565b9050919050565b60006130e3826130c6565b9050919050565b6130fb6130f682611db5565b6130d8565b82525050565b6000819050919050565b61311c61311782611df3565b613101565b82525050565b600081905092915050565b60006131398385613122565b93506131468385846121fa565b82840190509392505050565b600061315e82876130ea565b60148201915061316e828661310b565b60208201915061317f82848661312d565b915081905095945050505050565b7f52657175657374206170706561727320746f2062652061206475706c6963617460008201527f6500000000000000000000000000000000000000000000000000000000000000602082015250565b60006131e9602183611cda565b91506131f48261318d565b604082019050919050565b60006020820190508181036000830152613218816131dc565b9050919050565b7f5061757361626c653a206e6f7420706175736564000000000000000000000000600082015250565b6000613255601483611cda565b91506132608261321f565b602082019050919050565b6000602082019050818103600083015261328481613248565b9050919050565b6000613297828761310b565b6020820191506132a882858761312d565b91506132b4828461310b565b6020820191508190509594505050505056fea26469706673582212207126450d60b0357e4501223560873a904b4004e5fee1e84467d96e2f88c4d25564736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1DA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x63FFAB31 GT PUSH2 0x104 JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xAC5B756D GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xAC5B756D EQ PUSH2 0x50F JUMPI DUP1 PUSH4 0xCDC1F6D4 EQ PUSH2 0x52B JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x547 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x577 JUMPI PUSH2 0x1DA JUMP JUMPDEST DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x477 JUMPI DUP1 PUSH4 0xA4629533 EQ PUSH2 0x4A7 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x4C3 JUMPI DUP1 PUSH4 0xA91D58B4 EQ PUSH2 0x4F3 JUMPI PUSH2 0x1DA JUMP JUMPDEST DUP1 PUSH4 0x79CC6790 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x415 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x431 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x43B JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x459 JUMPI PUSH2 0x1DA JUMP JUMPDEST DUP1 PUSH4 0x63FFAB31 EQ PUSH2 0x3BD JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x3DB JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x40B JUMPI PUSH2 0x1DA JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0x17C JUMPI DUP1 PUSH4 0x3F4BA83A GT PUSH2 0x14B JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x35D JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x367 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x383 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x39F JUMPI PUSH2 0x1DA JUMP JUMPDEST DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2D3 JUMPI DUP1 PUSH4 0x34913F28 EQ PUSH2 0x2F1 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x30F JUMPI DUP1 PUSH4 0x3ADDB12C EQ PUSH2 0x33F JUMPI PUSH2 0x1DA JUMP JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0x1B8 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x24B JUMPI DUP1 PUSH4 0x21A7E7E9 EQ PUSH2 0x269 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x285 JUMPI DUP1 PUSH4 0x25CB5BC0 EQ PUSH2 0x2B5 JUMPI PUSH2 0x1DA JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1DF JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1FD JUMPI DUP1 PUSH4 0x1285CC2A EQ PUSH2 0x22D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1E7 PUSH2 0x593 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F4 SWAP2 SWAP1 PUSH2 0x1D5F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x217 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x212 SWAP2 SWAP1 PUSH2 0x1E29 JUMP JUMPDEST PUSH2 0x625 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x224 SWAP2 SWAP1 PUSH2 0x1E84 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x235 PUSH2 0x648 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x242 SWAP2 SWAP1 PUSH2 0x1EAE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x253 PUSH2 0x64D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x260 SWAP2 SWAP1 PUSH2 0x1EAE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x283 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x27E SWAP2 SWAP1 PUSH2 0x1F64 JUMP JUMPDEST PUSH2 0x657 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x29F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29A SWAP2 SWAP1 PUSH2 0x1FC4 JUMP JUMPDEST PUSH2 0x7CC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AC SWAP2 SWAP1 PUSH2 0x1E84 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BD PUSH2 0x7FB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2CA SWAP2 SWAP1 PUSH2 0x1EAE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2DB PUSH2 0x801 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E8 SWAP2 SWAP1 PUSH2 0x2033 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F9 PUSH2 0x80A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x306 SWAP2 SWAP1 PUSH2 0x1EAE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x329 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x324 SWAP2 SWAP1 PUSH2 0x1E29 JUMP JUMPDEST PUSH2 0x810 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x336 SWAP2 SWAP1 PUSH2 0x1E84 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x347 PUSH2 0x847 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x354 SWAP2 SWAP1 PUSH2 0x1EAE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x365 PUSH2 0x859 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x381 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x37C SWAP2 SWAP1 PUSH2 0x1E29 JUMP JUMPDEST PUSH2 0x86B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x39D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x398 SWAP2 SWAP1 PUSH2 0x204E JUMP JUMPDEST PUSH2 0x8AE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3A7 PUSH2 0x8C2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B4 SWAP2 SWAP1 PUSH2 0x1E84 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3C5 PUSH2 0x8D9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3D2 SWAP2 SWAP1 PUSH2 0x20D0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3F5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3F0 SWAP2 SWAP1 PUSH2 0x20F2 JUMP JUMPDEST PUSH2 0x967 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x402 SWAP2 SWAP1 PUSH2 0x1EAE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x413 PUSH2 0x9AF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x42F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x42A SWAP2 SWAP1 PUSH2 0x1E29 JUMP JUMPDEST PUSH2 0x9C3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x439 PUSH2 0x9E3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x443 PUSH2 0x9F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x450 SWAP2 SWAP1 PUSH2 0x212E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x461 PUSH2 0xA1F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x46E SWAP2 SWAP1 PUSH2 0x1D5F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x491 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x48C SWAP2 SWAP1 PUSH2 0x1E29 JUMP JUMPDEST PUSH2 0xAB1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x49E SWAP2 SWAP1 PUSH2 0x1E84 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4C1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4BC SWAP2 SWAP1 PUSH2 0x1F64 JUMP JUMPDEST PUSH2 0xB28 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4DD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4D8 SWAP2 SWAP1 PUSH2 0x1E29 JUMP JUMPDEST PUSH2 0xC8E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4EA SWAP2 SWAP1 PUSH2 0x1E84 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x50D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x508 SWAP2 SWAP1 PUSH2 0x2279 JUMP JUMPDEST PUSH2 0xCB1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x529 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x524 SWAP2 SWAP1 PUSH2 0x22C2 JUMP JUMPDEST PUSH2 0xCCC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x545 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x540 SWAP2 SWAP1 PUSH2 0x22EF JUMP JUMPDEST PUSH2 0xE63 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x561 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x55C SWAP2 SWAP1 PUSH2 0x234F JUMP JUMPDEST PUSH2 0xEDA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x56E SWAP2 SWAP1 PUSH2 0x1EAE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x591 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x58C SWAP2 SWAP1 PUSH2 0x20F2 JUMP JUMPDEST PUSH2 0xF61 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x5A2 SWAP1 PUSH2 0x23BE JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x5CE SWAP1 PUSH2 0x23BE JUMP JUMPDEST DUP1 ISZERO PUSH2 0x61B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5F0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x61B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5FE JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x630 PUSH2 0xFE4 JUMP JUMPDEST SWAP1 POP PUSH2 0x63D DUP2 DUP6 DUP6 PUSH2 0xFEC JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xA DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x65F PUSH2 0x11B5 JUMP JUMPDEST DUP3 PUSH1 0x0 PUSH1 0x8 SHL PUSH1 0x7 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x8 SHL PUSH1 0xFF NOT AND SUB PUSH2 0x6CD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6C4 SWAP1 PUSH2 0x243B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 CALLER DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x7 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x773 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x76A SWAP1 PUSH2 0x24A7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP6 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xA3CD7D021DC9794AE8A4520E68440669E45A8758C6FEAC5A46DB4C6953D35D25 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x7BC SWAP3 SWAP2 SWAP1 PUSH2 0x24F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x7D7 PUSH2 0xFE4 JUMP JUMPDEST SWAP1 POP PUSH2 0x7E4 DUP6 DUP3 DUP6 PUSH2 0x11FF JUMP JUMPDEST PUSH2 0x7EF DUP6 DUP6 DUP6 PUSH2 0x128B JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1C20 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x2710 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x81B PUSH2 0xFE4 JUMP JUMPDEST SWAP1 POP PUSH2 0x83C DUP2 DUP6 DUP6 PUSH2 0x82D DUP6 DUP10 PUSH2 0xEDA JUMP JUMPDEST PUSH2 0x837 SWAP2 SWAP1 PUSH2 0x2547 JUMP JUMPDEST PUSH2 0xFEC JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xA PUSH2 0x2710 PUSH2 0x856 SWAP2 SWAP1 PUSH2 0x257B JUMP JUMPDEST DUP2 JUMP JUMPDEST PUSH2 0x861 PUSH2 0x1501 JUMP JUMPDEST PUSH2 0x869 PUSH2 0x157F JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x873 PUSH2 0x1501 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8A5 SWAP1 PUSH2 0x25FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8BF PUSH2 0x8B9 PUSH2 0xFE4 JUMP JUMPDEST DUP3 PUSH2 0x15E2 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH2 0x8E6 SWAP1 PUSH2 0x23BE JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x912 SWAP1 PUSH2 0x23BE JUMP JUMPDEST DUP1 ISZERO PUSH2 0x95F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x934 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x95F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x942 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9B7 PUSH2 0x1501 JUMP JUMPDEST PUSH2 0x9C1 PUSH1 0x0 PUSH2 0x17AF JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x9D5 DUP3 PUSH2 0x9CF PUSH2 0xFE4 JUMP JUMPDEST DUP4 PUSH2 0x11FF JUMP JUMPDEST PUSH2 0x9DF DUP3 DUP3 PUSH2 0x15E2 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x9EB PUSH2 0x1501 JUMP JUMPDEST PUSH2 0x9F3 PUSH2 0x1875 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0xA2E SWAP1 PUSH2 0x23BE JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xA5A SWAP1 PUSH2 0x23BE JUMP JUMPDEST DUP1 ISZERO PUSH2 0xAA7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xA7C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xAA7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA8A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xABC PUSH2 0xFE4 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xACA DUP3 DUP7 PUSH2 0xEDA JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0xB0F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB06 SWAP1 PUSH2 0x268D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB1C DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0xFEC JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xB30 PUSH2 0x1501 JUMP JUMPDEST PUSH2 0xB38 PUSH2 0x11B5 JUMP JUMPDEST DUP3 PUSH1 0x0 PUSH1 0x8 SHL PUSH1 0x7 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x8 SHL PUSH1 0xFF NOT AND SUB PUSH2 0xBA6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB9D SWAP1 PUSH2 0x243B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 TIMESTAMP PUSH1 0x7 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD LT ISZERO PUSH2 0xC00 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBF7 SWAP1 PUSH2 0x26F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 PUSH1 0x7 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x220F931A071DFCD35FDA9F25680CB03785508840415A802DE6E99230F889862B DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0xC7F SWAP3 SWAP2 SWAP1 PUSH2 0x24F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xC99 PUSH2 0xFE4 JUMP JUMPDEST SWAP1 POP PUSH2 0xCA6 DUP2 DUP6 DUP6 PUSH2 0x128B JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xCB9 PUSH2 0x1501 JUMP JUMPDEST DUP1 PUSH1 0x6 SWAP1 DUP2 PUSH2 0xCC8 SWAP2 SWAP1 PUSH2 0x28C5 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xCD4 PUSH2 0x1501 JUMP JUMPDEST PUSH2 0xCDC PUSH2 0x11B5 JUMP JUMPDEST DUP1 PUSH1 0x0 PUSH1 0x8 SHL PUSH1 0x7 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x8 SHL PUSH1 0xFF NOT AND SUB PUSH2 0xD4A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD41 SWAP1 PUSH2 0x243B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x7 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x3 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE POP POP PUSH2 0xE5D DUP2 PUSH2 0xE58 PUSH2 0x2710 PUSH2 0xE4A PUSH1 0xA PUSH2 0x2710 PUSH2 0xE3B SWAP2 SWAP1 PUSH2 0x257B JUMP JUMPDEST DUP8 PUSH2 0x18D8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x18EE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1904 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0xE6B PUSH2 0x11B5 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xE7A CALLER DUP7 DUP7 DUP7 PUSH2 0x1A5A JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP2 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x45FA4B26A755F4CC5780432570BADB0410D1ED0C688479AA9E708761FFB82EC2 DUP8 DUP5 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH2 0xECB SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2997 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xF69 PUSH2 0x1501 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xFD8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFCF SWAP1 PUSH2 0x2A49 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xFE1 DUP2 PUSH2 0x17AF JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x105B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1052 SWAP1 PUSH2 0x2ADB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x10CA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10C1 SWAP1 PUSH2 0x2B6D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x11A8 SWAP2 SWAP1 PUSH2 0x1EAE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x11BD PUSH2 0x8C2 JUMP JUMPDEST ISZERO PUSH2 0x11FD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11F4 SWAP1 PUSH2 0x2BD9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x120B DUP5 DUP5 PUSH2 0xEDA JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x1285 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x1277 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x126E SWAP1 PUSH2 0x2C45 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1284 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0xFEC JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x12FA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12F1 SWAP1 PUSH2 0x2CD7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1369 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1360 SWAP1 PUSH2 0x2D69 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1374 DUP4 DUP4 DUP4 PUSH2 0x1C15 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x13FA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13F1 SWAP1 PUSH2 0x2DFB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x14E8 SWAP2 SWAP1 PUSH2 0x1EAE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x14FB DUP5 DUP5 DUP5 PUSH2 0x1C2D JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x1509 PUSH2 0xFE4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1527 PUSH2 0x9F5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x157D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1574 SWAP1 PUSH2 0x2E67 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x1587 PUSH2 0x1C32 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0x15CB PUSH2 0xFE4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15D8 SWAP2 SWAP1 PUSH2 0x212E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1651 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1648 SWAP1 PUSH2 0x2EF9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x165D DUP3 PUSH1 0x0 DUP4 PUSH2 0x1C15 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x16E3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16DA SWAP1 PUSH2 0x2F8B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x1796 SWAP2 SWAP1 PUSH2 0x1EAE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x17AA DUP4 PUSH1 0x0 DUP5 PUSH2 0x1C2D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x187D PUSH2 0x11B5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x18C1 PUSH2 0xFE4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18CE SWAP2 SWAP1 PUSH2 0x212E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x18E6 SWAP2 SWAP1 PUSH2 0x2FAB JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x18FC SWAP2 SWAP1 PUSH2 0x301C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1973 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x196A SWAP1 PUSH2 0x3099 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x197F PUSH1 0x0 DUP4 DUP4 PUSH2 0x1C15 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1991 SWAP2 SWAP1 PUSH2 0x2547 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1A42 SWAP2 SWAP1 PUSH2 0x1EAE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x1A56 PUSH1 0x0 DUP4 DUP4 PUSH2 0x1C2D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1A74 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3152 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP2 POP PUSH1 0x0 PUSH1 0x8 SHL PUSH1 0x7 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x8 SHL PUSH1 0xFF NOT AND EQ PUSH2 0x1AF9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AF0 SWAP1 PUSH2 0x31FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1B0E PUSH2 0x1C20 TIMESTAMP PUSH2 0x1C7B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1B1E DUP7 DUP7 DUP7 DUP6 PUSH2 0x1C91 JUMP JUMPDEST SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 DUP3 PUSH1 0xFF NOT AND DUP2 MSTORE PUSH1 0x20 ADD DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE POP PUSH1 0x7 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH1 0x8 SHR MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE SWAP1 POP POP POP SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1C1D PUSH2 0x11B5 JUMP JUMPDEST PUSH2 0x1C28 DUP4 DUP4 DUP4 PUSH2 0x1CCA JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1C3A PUSH2 0x8C2 JUMP JUMPDEST PUSH2 0x1C79 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C70 SWAP1 PUSH2 0x326B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1C89 SWAP2 SWAP1 PUSH2 0x2547 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1CAA SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x328B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1D09 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1CEE JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D31 DUP3 PUSH2 0x1CCF JUMP JUMPDEST PUSH2 0x1D3B DUP2 DUP6 PUSH2 0x1CDA JUMP JUMPDEST SWAP4 POP PUSH2 0x1D4B DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1CEB JUMP JUMPDEST PUSH2 0x1D54 DUP2 PUSH2 0x1D15 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D79 DUP2 DUP5 PUSH2 0x1D26 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DC0 DUP3 PUSH2 0x1D95 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1DD0 DUP2 PUSH2 0x1DB5 JUMP JUMPDEST DUP2 EQ PUSH2 0x1DDB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1DED DUP2 PUSH2 0x1DC7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E06 DUP2 PUSH2 0x1DF3 JUMP JUMPDEST DUP2 EQ PUSH2 0x1E11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1E23 DUP2 PUSH2 0x1DFD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1E40 JUMPI PUSH2 0x1E3F PUSH2 0x1D8B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1E4E DUP6 DUP3 DUP7 ADD PUSH2 0x1DDE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1E5F DUP6 DUP3 DUP7 ADD PUSH2 0x1E14 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E7E DUP2 PUSH2 0x1E69 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1E99 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1E75 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1EA8 DUP2 PUSH2 0x1DF3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1EC3 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1E9F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1EDC DUP2 PUSH2 0x1EC9 JUMP JUMPDEST DUP2 EQ PUSH2 0x1EE7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1EF9 DUP2 PUSH2 0x1ED3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x1F24 JUMPI PUSH2 0x1F23 PUSH2 0x1EFF JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F41 JUMPI PUSH2 0x1F40 PUSH2 0x1F04 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x1F5D JUMPI PUSH2 0x1F5C PUSH2 0x1F09 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1F7D JUMPI PUSH2 0x1F7C PUSH2 0x1D8B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1F8B DUP7 DUP3 DUP8 ADD PUSH2 0x1EEA JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1FAC JUMPI PUSH2 0x1FAB PUSH2 0x1D90 JUMP JUMPDEST JUMPDEST PUSH2 0x1FB8 DUP7 DUP3 DUP8 ADD PUSH2 0x1F0E JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1FDD JUMPI PUSH2 0x1FDC PUSH2 0x1D8B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1FEB DUP7 DUP3 DUP8 ADD PUSH2 0x1DDE JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1FFC DUP7 DUP3 DUP8 ADD PUSH2 0x1DDE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x200D DUP7 DUP3 DUP8 ADD PUSH2 0x1E14 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x202D DUP2 PUSH2 0x2017 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2048 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2024 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2064 JUMPI PUSH2 0x2063 PUSH2 0x1D8B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2072 DUP5 DUP3 DUP6 ADD PUSH2 0x1E14 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20A2 DUP3 PUSH2 0x207B JUMP JUMPDEST PUSH2 0x20AC DUP2 DUP6 PUSH2 0x2086 JUMP JUMPDEST SWAP4 POP PUSH2 0x20BC DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1CEB JUMP JUMPDEST PUSH2 0x20C5 DUP2 PUSH2 0x1D15 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x20EA DUP2 DUP5 PUSH2 0x2097 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2108 JUMPI PUSH2 0x2107 PUSH2 0x1D8B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2116 DUP5 DUP3 DUP6 ADD PUSH2 0x1DDE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2128 DUP2 PUSH2 0x1DB5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2143 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x211F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x2186 DUP3 PUSH2 0x1D15 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x21A5 JUMPI PUSH2 0x21A4 PUSH2 0x214E JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21B8 PUSH2 0x1D81 JUMP JUMPDEST SWAP1 POP PUSH2 0x21C4 DUP3 DUP3 PUSH2 0x217D JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x21E4 JUMPI PUSH2 0x21E3 PUSH2 0x214E JUMP JUMPDEST JUMPDEST PUSH2 0x21ED DUP3 PUSH2 0x1D15 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x221C PUSH2 0x2217 DUP5 PUSH2 0x21C9 JUMP JUMPDEST PUSH2 0x21AE JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2238 JUMPI PUSH2 0x2237 PUSH2 0x2149 JUMP JUMPDEST JUMPDEST PUSH2 0x2243 DUP5 DUP3 DUP6 PUSH2 0x21FA JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2260 JUMPI PUSH2 0x225F PUSH2 0x1EFF JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2270 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2209 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x228F JUMPI PUSH2 0x228E PUSH2 0x1D8B JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x22AD JUMPI PUSH2 0x22AC PUSH2 0x1D90 JUMP JUMPDEST JUMPDEST PUSH2 0x22B9 DUP5 DUP3 DUP6 ADD PUSH2 0x224B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x22D8 JUMPI PUSH2 0x22D7 PUSH2 0x1D8B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x22E6 DUP5 DUP3 DUP6 ADD PUSH2 0x1EEA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2308 JUMPI PUSH2 0x2307 PUSH2 0x1D8B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2316 DUP7 DUP3 DUP8 ADD PUSH2 0x1E14 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2337 JUMPI PUSH2 0x2336 PUSH2 0x1D90 JUMP JUMPDEST JUMPDEST PUSH2 0x2343 DUP7 DUP3 DUP8 ADD PUSH2 0x1F0E JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2366 JUMPI PUSH2 0x2365 PUSH2 0x1D8B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2374 DUP6 DUP3 DUP7 ADD PUSH2 0x1DDE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2385 DUP6 DUP3 DUP7 ADD PUSH2 0x1DDE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x23D6 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x23E9 JUMPI PUSH2 0x23E8 PUSH2 0x238F JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4D757374206861766520612076616C6964207265717565737449640000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2425 PUSH1 0x1B DUP4 PUSH2 0x1CDA JUMP JUMPDEST SWAP2 POP PUSH2 0x2430 DUP3 PUSH2 0x23EF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2454 DUP2 PUSH2 0x2418 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x52657175657374657220646F6573206E6F74206D617463680000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2491 PUSH1 0x18 DUP4 PUSH2 0x1CDA JUMP JUMPDEST SWAP2 POP PUSH2 0x249C DUP3 PUSH2 0x245B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x24C0 DUP2 PUSH2 0x2484 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24D3 DUP4 DUP6 PUSH2 0x2086 JUMP JUMPDEST SWAP4 POP PUSH2 0x24E0 DUP4 DUP6 DUP5 PUSH2 0x21FA JUMP JUMPDEST PUSH2 0x24E9 DUP4 PUSH2 0x1D15 JUMP JUMPDEST DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x250F DUP2 DUP5 DUP7 PUSH2 0x24C7 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2552 DUP3 PUSH2 0x1DF3 JUMP JUMPDEST SWAP2 POP PUSH2 0x255D DUP4 PUSH2 0x1DF3 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2575 JUMPI PUSH2 0x2574 PUSH2 0x2518 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2586 DUP3 PUSH2 0x1DF3 JUMP JUMPDEST SWAP2 POP PUSH2 0x2591 DUP4 PUSH2 0x1DF3 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x25A9 JUMPI PUSH2 0x25A8 PUSH2 0x2518 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x596F752063616E6E6F74206D696E74206469726563746C790000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x25E5 PUSH1 0x18 DUP4 PUSH2 0x1CDA JUMP JUMPDEST SWAP2 POP PUSH2 0x25F0 DUP3 PUSH2 0x25AF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2614 DUP2 PUSH2 0x25D8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2677 PUSH1 0x25 DUP4 PUSH2 0x1CDA JUMP JUMPDEST SWAP2 POP PUSH2 0x2682 DUP3 PUSH2 0x261B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x26A6 DUP2 PUSH2 0x266A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5265717565737420697320657870697265640000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26E3 PUSH1 0x12 DUP4 PUSH2 0x1CDA JUMP JUMPDEST SWAP2 POP PUSH2 0x26EE DUP3 PUSH2 0x26AD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2712 DUP2 PUSH2 0x26D6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x277B PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x273E JUMP JUMPDEST PUSH2 0x2785 DUP7 DUP4 PUSH2 0x273E JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27C2 PUSH2 0x27BD PUSH2 0x27B8 DUP5 PUSH2 0x1DF3 JUMP JUMPDEST PUSH2 0x279D JUMP JUMPDEST PUSH2 0x1DF3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x27DC DUP4 PUSH2 0x27A7 JUMP JUMPDEST PUSH2 0x27F0 PUSH2 0x27E8 DUP3 PUSH2 0x27C9 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x274B JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x2805 PUSH2 0x27F8 JUMP JUMPDEST PUSH2 0x2810 DUP2 DUP5 DUP5 PUSH2 0x27D3 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2834 JUMPI PUSH2 0x2829 PUSH1 0x0 DUP3 PUSH2 0x27FD JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2816 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x2879 JUMPI PUSH2 0x284A DUP2 PUSH2 0x2719 JUMP JUMPDEST PUSH2 0x2853 DUP5 PUSH2 0x272E JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x2862 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x2876 PUSH2 0x286E DUP6 PUSH2 0x272E JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x2815 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x289C PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x287E JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x28B5 DUP4 DUP4 PUSH2 0x288B JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x28CE DUP3 PUSH2 0x207B JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x28E7 JUMPI PUSH2 0x28E6 PUSH2 0x214E JUMP JUMPDEST JUMPDEST PUSH2 0x28F1 DUP3 SLOAD PUSH2 0x23BE JUMP JUMPDEST PUSH2 0x28FC DUP3 DUP3 DUP6 PUSH2 0x2838 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x292F JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x291D JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x2927 DUP6 DUP3 PUSH2 0x28A9 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x298F JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x293D DUP7 PUSH2 0x2719 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2965 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2940 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x2982 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x297E PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x288B JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x29AC PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1E9F JUMP JUMPDEST PUSH2 0x29B9 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1E9F JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x29CC DUP2 DUP5 DUP7 PUSH2 0x24C7 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A33 PUSH1 0x26 DUP4 PUSH2 0x1CDA JUMP JUMPDEST SWAP2 POP PUSH2 0x2A3E DUP3 PUSH2 0x29D7 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2A62 DUP2 PUSH2 0x2A26 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2AC5 PUSH1 0x24 DUP4 PUSH2 0x1CDA JUMP JUMPDEST SWAP2 POP PUSH2 0x2AD0 DUP3 PUSH2 0x2A69 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2AF4 DUP2 PUSH2 0x2AB8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B57 PUSH1 0x22 DUP4 PUSH2 0x1CDA JUMP JUMPDEST SWAP2 POP PUSH2 0x2B62 DUP3 PUSH2 0x2AFB JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2B86 DUP2 PUSH2 0x2B4A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5061757361626C653A2070617573656400000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BC3 PUSH1 0x10 DUP4 PUSH2 0x1CDA JUMP JUMPDEST SWAP2 POP PUSH2 0x2BCE DUP3 PUSH2 0x2B8D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2BF2 DUP2 PUSH2 0x2BB6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C2F PUSH1 0x1D DUP4 PUSH2 0x1CDA JUMP JUMPDEST SWAP2 POP PUSH2 0x2C3A DUP3 PUSH2 0x2BF9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2C5E DUP2 PUSH2 0x2C22 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2CC1 PUSH1 0x25 DUP4 PUSH2 0x1CDA JUMP JUMPDEST SWAP2 POP PUSH2 0x2CCC DUP3 PUSH2 0x2C65 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2CF0 DUP2 PUSH2 0x2CB4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D53 PUSH1 0x23 DUP4 PUSH2 0x1CDA JUMP JUMPDEST SWAP2 POP PUSH2 0x2D5E DUP3 PUSH2 0x2CF7 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2D82 DUP2 PUSH2 0x2D46 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2DE5 PUSH1 0x26 DUP4 PUSH2 0x1CDA JUMP JUMPDEST SWAP2 POP PUSH2 0x2DF0 DUP3 PUSH2 0x2D89 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2E14 DUP2 PUSH2 0x2DD8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E51 PUSH1 0x20 DUP4 PUSH2 0x1CDA JUMP JUMPDEST SWAP2 POP PUSH2 0x2E5C DUP3 PUSH2 0x2E1B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2E80 DUP2 PUSH2 0x2E44 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7300000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2EE3 PUSH1 0x21 DUP4 PUSH2 0x1CDA JUMP JUMPDEST SWAP2 POP PUSH2 0x2EEE DUP3 PUSH2 0x2E87 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2F12 DUP2 PUSH2 0x2ED6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6365000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F75 PUSH1 0x22 DUP4 PUSH2 0x1CDA JUMP JUMPDEST SWAP2 POP PUSH2 0x2F80 DUP3 PUSH2 0x2F19 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2FA4 DUP2 PUSH2 0x2F68 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2FB6 DUP3 PUSH2 0x1DF3 JUMP JUMPDEST SWAP2 POP PUSH2 0x2FC1 DUP4 PUSH2 0x1DF3 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x2FCF DUP2 PUSH2 0x1DF3 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x2FE6 JUMPI PUSH2 0x2FE5 PUSH2 0x2518 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3027 DUP3 PUSH2 0x1DF3 JUMP JUMPDEST SWAP2 POP PUSH2 0x3032 DUP4 PUSH2 0x1DF3 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x3042 JUMPI PUSH2 0x3041 PUSH2 0x2FED JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3083 PUSH1 0x1F DUP4 PUSH2 0x1CDA JUMP JUMPDEST SWAP2 POP PUSH2 0x308E DUP3 PUSH2 0x304D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x30B2 DUP2 PUSH2 0x3076 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x60 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x30D1 DUP3 PUSH2 0x30B9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x30E3 DUP3 PUSH2 0x30C6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x30FB PUSH2 0x30F6 DUP3 PUSH2 0x1DB5 JUMP JUMPDEST PUSH2 0x30D8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x311C PUSH2 0x3117 DUP3 PUSH2 0x1DF3 JUMP JUMPDEST PUSH2 0x3101 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3139 DUP4 DUP6 PUSH2 0x3122 JUMP JUMPDEST SWAP4 POP PUSH2 0x3146 DUP4 DUP6 DUP5 PUSH2 0x21FA JUMP JUMPDEST DUP3 DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x315E DUP3 DUP8 PUSH2 0x30EA JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP PUSH2 0x316E DUP3 DUP7 PUSH2 0x310B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH2 0x317F DUP3 DUP5 DUP7 PUSH2 0x312D JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x52657175657374206170706561727320746F2062652061206475706C69636174 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6500000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x31E9 PUSH1 0x21 DUP4 PUSH2 0x1CDA JUMP JUMPDEST SWAP2 POP PUSH2 0x31F4 DUP3 PUSH2 0x318D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3218 DUP2 PUSH2 0x31DC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5061757361626C653A206E6F7420706175736564000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3255 PUSH1 0x14 DUP4 PUSH2 0x1CDA JUMP JUMPDEST SWAP2 POP PUSH2 0x3260 DUP3 PUSH2 0x321F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3284 DUP2 PUSH2 0x3248 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3297 DUP3 DUP8 PUSH2 0x310B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH2 0x32A8 DUP3 DUP6 DUP8 PUSH2 0x312D JUMP JUMPDEST SWAP2 POP PUSH2 0x32B4 DUP3 DUP5 PUSH2 0x310B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH18 0x26450D60B0357E4501223560873A904B4004 0xE5 INVALID 0xE1 0xE8 DIFFICULTY PUSH8 0xD96E2F88C4D25564 PUSH20 0x6F6C634300081100330000000000000000000000 ","sourceMap":"356:6978:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2154:98:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4431:197;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;634:42:8;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3242:106:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3930:345:8;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5190:286:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;533:47:8;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3091:91:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;702:49:8;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5871:234:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;803:82:8;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1833:63;;;:::i;:::-;;2081:179;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;578:89:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1615:84:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;941:27:8;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3406:125:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1831:101:0;;;:::i;:::-;;973:161:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1768:59:8;;;:::i;:::-;;1201:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2365:102:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6592:427;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3381:314:8;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3727:189:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1902:103:8;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4466:510;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2701:424;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3974:149:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2081:198:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2154:98:2;2208:13;2240:5;2233:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2154:98;:::o;4431:197::-;4514:4;4530:13;4546:12;:10;:12::i;:::-;4530:28;;4568:32;4577:5;4584:7;4593:6;4568:8;:32::i;:::-;4617:4;4610:11;;;4431:197;;;;:::o;634:42:8:-;674:2;634:42;:::o;3242:106:2:-;3303:7;3329:12;;3322:19;;3242:106;:::o;3930:345:8:-;1239:19:1;:17;:19::i;:::-;4051:9:8::1;6520:1;6477:44;;:17;:28;6495:9;6477:28;;;;;;;;;;;:39;;;;;;;;;;;;:44;;;::::0;6469:84:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;4088:9:::2;4099:10;7276:9;7234:51;;:17;:28;7252:9;7234:28;;;;;;;;;;;:38;;;;;;;;;;;;:51;;;7226:88;;;;;;;;;;;;:::i;:::-;;;;;;;;;4243:9:::3;4231:10;4219:49;;;4254:13;;4219:49;;;;;;;:::i;:::-;;;;;;;;6563:1:::2;;1268::1::1;3930:345:8::0;;;:::o;5190:286:2:-;5317:4;5333:15;5351:12;:10;:12::i;:::-;5333:30;;5373:38;5389:4;5395:7;5404:6;5373:15;:38::i;:::-;5421:27;5431:4;5437:2;5441:6;5421:9;:27::i;:::-;5465:4;5458:11;;;5190:286;;;;;:::o;533:47:8:-;573:7;533:47;:::o;3091:91:2:-;3149:5;3173:2;3166:9;;3091:91;:::o;702:49:8:-;746:5;702:49;:::o;5871:234:2:-;5959:4;5975:13;5991:12;:10;:12::i;:::-;5975:28;;6013:64;6022:5;6029:7;6066:10;6038:25;6048:5;6055:7;6038:9;:25::i;:::-;:38;;;;:::i;:::-;6013:8;:64::i;:::-;6094:4;6087:11;;;5871:234;;;;:::o;803:82:8:-;674:2;746:5;852:33;;;;:::i;:::-;803:82;:::o;1833:63::-;1094:13:0;:11;:13::i;:::-;1879:10:8::1;:8;:10::i;:::-;1833:63::o:0;2081:179::-;1094:13:0;:11;:13::i;:::-;2219:34:8::1;;;;;;;;;;:::i;:::-;;;;;;;;578:89:4::0;633:27;639:12;:10;:12::i;:::-;653:6;633:5;:27::i;:::-;578:89;:::o;1615:84:1:-;1662:4;1685:7;;;;;;;;;;;1678:14;;1615:84;:::o;941:27:8:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3406:125:2:-;3480:7;3506:9;:18;3516:7;3506:18;;;;;;;;;;;;;;;;3499:25;;3406:125;;;:::o;1831:101:0:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;973:161:4:-;1049:46;1065:7;1074:12;:10;:12::i;:::-;1088:6;1049:15;:46::i;:::-;1105:22;1111:7;1120:6;1105:5;:22::i;:::-;973:161;;:::o;1768:59:8:-;1094:13:0;:11;:13::i;:::-;1812:8:8::1;:6;:8::i;:::-;1768:59::o:0;1201:85:0:-;1247:7;1273:6;;;;;;;;;;;1266:13;;1201:85;:::o;2365:102:2:-;2421:13;2453:7;2446:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2365:102;:::o;6592:427::-;6685:4;6701:13;6717:12;:10;:12::i;:::-;6701:28;;6739:24;6766:25;6776:5;6783:7;6766:9;:25::i;:::-;6739:52;;6829:15;6809:16;:35;;6801:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;6920:60;6929:5;6936:7;6964:15;6945:16;:34;6920:8;:60::i;:::-;7008:4;7001:11;;;;6592:427;;;;:::o;3381:314:8:-;1094:13:0;:11;:13::i;:::-;1239:19:1::1;:17;:19::i;:::-;3544:9:8::2;6520:1;6477:44;;:17;:28;6495:9;6477:28;;;;;;;;;;;:39;;;;;;;;;;;;:44;;;::::0;6469:84:::2;;;;;;;;;;;;:::i;:::-;;;;;;;;;3578:9:::3;6926:15;6883:17;:28;6901:9;6883:28;;;;;;;;;;;:39;;;:58;;6875:89;;;;;;;;;;;;:::i;:::-;;;;;;;;;3657:9:::4;3617:17;:28;3635:9;3617:28;;;;;;;;;;;:38;;;;;;;;;;;;3605:83;;;3668:19;;3605:83;;;;;;;:::i;:::-;;;;;;;;6563:1:::3;1268::1::2;3381:314:8::0;;;:::o;3727:189:2:-;3806:4;3822:13;3838:12;:10;:12::i;:::-;3822:28;;3860;3870:5;3877:2;3881:6;3860:9;:28::i;:::-;3905:4;3898:11;;;3727:189;;;;:::o;1902:103:8:-;1094:13:0;:11;:13::i;:::-;1988:10:8::1;1976:9;:22;;;;;;:::i;:::-;;1902:103:::0;:::o;4466:510::-;1094:13:0;:11;:13::i;:::-;1239:19:1::1;:17;:19::i;:::-;4575:9:8::2;6520:1;6477:44;;:17;:28;6495:9;6477:28;;;;;;;;;;;:39;;;;;;;;;;;;:44;;;::::0;6469:84:::2;;;;;;;;;;;;:::i;:::-;;;;;;;;;4667:14:::3;4684:17;:28;4702:9;4684:28;;;;;;;;;;;:35;;;4667:52;;4729:16;4748:17;:28;4766:9;4748:28;;;;;;;;;;;:38;;;;;;;;;;;;4729:57;;4833:17;:28;4851:9;4833:28;;;;;;;;;;;;4826:35:::0;::::3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4895:74;4901:8;4911:57;746:5;4911:34;674:2;746:5;852:33;;;;:::i;:::-;4911:6;:10;;:34;;;;:::i;:::-;:38;;:57;;;;:::i;:::-;4895:5;:74::i;:::-;4586:390;;1268:1:1::2;4466:510:8::0;:::o;2701:424::-;1239:19:1;:17;:19::i;:::-;2893:17:8::1;2912:18:::0;2934:100:::1;2967:10;2991:6;3011:13;;2934:19;:100::i;:::-;2892:142;;;;3073:9;3061:10;3049:69;;;3084:6;3092:10;3104:13;;3049:69;;;;;;;;;:::i;:::-;;;;;;;;2797:328;;2701:424:::0;;;:::o;3974:149:2:-;4063:7;4089:11;:18;4101:5;4089:18;;;;;;;;;;;;;;;:27;4108:7;4089:27;;;;;;;;;;;;;;;;4082:34;;3974:149;;;;:::o;2081:198:0:-;1094:13;:11;:13::i;:::-;2189:1:::1;2169:22;;:8;:22;;::::0;2161:73:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;640:96:6:-;693:7;719:10;712:17;;640:96;:::o;10504:370:2:-;10652:1;10635:19;;:5;:19;;;10627:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;10732:1;10713:21;;:7;:21;;;10705:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;10814:6;10784:11;:18;10796:5;10784:18;;;;;;;;;;;;;;;:27;10803:7;10784:27;;;;;;;;;;;;;;;:36;;;;10851:7;10835:32;;10844:5;10835:32;;;10860:6;10835:32;;;;;;:::i;:::-;;;;;;;;10504:370;;;:::o;1767:106:1:-;1837:8;:6;:8::i;:::-;1836:9;1828:38;;;;;;;;;;;;:::i;:::-;;;;;;;;;1767:106::o;11155:441:2:-;11285:24;11312:25;11322:5;11329:7;11312:9;:25::i;:::-;11285:52;;11371:17;11351:16;:37;11347:243;;11432:6;11412:16;:26;;11404:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;11514:51;11523:5;11530:7;11558:6;11539:16;:25;11514:8;:51::i;:::-;11347:243;11275:321;11155:441;;;:::o;7473:818::-;7615:1;7599:18;;:4;:18;;;7591:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;7691:1;7677:16;;:2;:16;;;7669:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;7744:38;7765:4;7771:2;7775:6;7744:20;:38::i;:::-;7793:19;7815:9;:15;7825:4;7815:15;;;;;;;;;;;;;;;;7793:37;;7863:6;7848:11;:21;;7840:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;7978:6;7964:11;:20;7946:9;:15;7956:4;7946:15;;;;;;;;;;;;;;;:38;;;;8178:6;8161:9;:13;8171:2;8161:13;;;;;;;;;;;;;;;;:23;;;;;;;;;;;8225:2;8210:26;;8219:4;8210:26;;;8229:6;8210:26;;;;;;:::i;:::-;;;;;;;;8247:37;8267:4;8273:2;8277:6;8247:19;:37::i;:::-;7581:710;7473:818;;;:::o;1359:130:0:-;1433:12;:10;:12::i;:::-;1422:23;;:7;:5;:7::i;:::-;:23;;;1414:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1359:130::o;2433:117:1:-;1486:16;:14;:16::i;:::-;2501:5:::1;2491:7;;:15;;;;;;;;;;;;;;;;;;2521:22;2530:12;:10;:12::i;:::-;2521:22;;;;;;:::i;:::-;;;;;;;;2433:117::o:0;9422:659:2:-;9524:1;9505:21;;:7;:21;;;9497:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;9575:49;9596:7;9613:1;9617:6;9575:20;:49::i;:::-;9635:22;9660:9;:18;9670:7;9660:18;;;;;;;;;;;;;;;;9635:43;;9714:6;9696:14;:24;;9688:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;9831:6;9814:14;:23;9793:9;:18;9803:7;9793:18;;;;;;;;;;;;;;;:44;;;;9946:6;9930:12;;:22;;;;;;;;;;;10004:1;9978:37;;9987:7;9978:37;;;10008:6;9978:37;;;;;;:::i;:::-;;;;;;;;10026:48;10046:7;10063:1;10067:6;10026:19;:48::i;:::-;9487:594;9422:659;;:::o;2433:187:0:-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;2186:115:1:-;1239:19;:17;:19::i;:::-;2255:4:::1;2245:7;;:14;;;;;;;;;;;;;;;;;;2274:20;2281:12;:10;:12::i;:::-;2274:20;;;;;;:::i;:::-;;;;;;;;2186:115::o:0;3465:96:7:-;3523:7;3553:1;3549;:5;;;;:::i;:::-;3542:12;;3465:96;;;;:::o;3850:::-;3908:7;3938:1;3934;:5;;;;:::i;:::-;3927:12;;3850:96;;;;:::o;8567:535:2:-;8669:1;8650:21;;:7;:21;;;8642:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;8718:49;8747:1;8751:7;8760:6;8718:20;:49::i;:::-;8794:6;8778:12;;:22;;;;;;;:::i;:::-;;;;;;;;8968:6;8946:9;:18;8956:7;8946:18;;;;;;;;;;;;;;;;:28;;;;;;;;;;;9020:7;8999:37;;9016:1;8999:37;;;9029:6;8999:37;;;;;;:::i;:::-;;;;;;;;9047:48;9075:1;9079:7;9088:6;9047:19;:48::i;:::-;8567:535;;:::o;4982:667:8:-;5099:17;5118:18;5187:6;5195;5203:13;;5170:47;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;5160:58;;;;;;5148:70;;5279:1;5236:44;;:17;:28;5254:9;5236:28;;;;;;;;;;;:39;;;;;;;;;;;;:44;;;;5228:90;;;;;;;;;;;;:::i;:::-;;;;;;;;;5395:34;573:7;5395:15;:19;;:34;;;;:::i;:::-;5382:47;;5439:18;5460:51;5477:6;5485:13;;5500:10;5460:16;:51::i;:::-;5439:72;;5552:50;;;;;;;;5563:10;5552:50;;;;;;;5575:6;5552:50;;;;;;5583:10;5552:50;;;;5595:6;5552:50;;;5521:17;:28;5539:9;5521:28;;;;;;;;;;;:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5612:30;4982:667;;;;;;;:::o;2266:181::-;1239:19:1;:17;:19::i;:::-;2396:44:8::1;2423:4;2429:2;2433:6;2396:26;:44::i;:::-;2266:181:::0;;;:::o;12889:120:2:-;;;;:::o;1945:106:1:-;2011:8;:6;:8::i;:::-;2003:41;;;;;;;;;;;;:::i;:::-;;;;;;;;;1945:106::o;2755:96:7:-;2813:7;2843:1;2839;:5;;;;:::i;:::-;2832:12;;2755:96;;;;:::o;6015:249:8:-;6160:7;6221:6;6229:13;;6244:10;6204:51;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;6194:62;;;;;;6179:78;;6015:249;;;;;;:::o;12180:121:2:-;;;;:::o;7:99:9:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:246::-;368:1;378:113;392:6;389:1;386:13;378:113;;;477:1;472:3;468:11;462:18;458:1;453:3;449:11;442:39;414:2;411:1;407:10;402:15;;378:113;;;525:1;516:6;511:3;507:16;500:27;349:184;287:246;;;:::o;539:102::-;580:6;631:2;627:7;622:2;615:5;611:14;607:28;597:38;;539:102;;;:::o;647:377::-;735:3;763:39;796:5;763:39;:::i;:::-;818:71;882:6;877:3;818:71;:::i;:::-;811:78;;898:65;956:6;951:3;944:4;937:5;933:16;898:65;:::i;:::-;988:29;1010:6;988:29;:::i;:::-;983:3;979:39;972:46;;739:285;647:377;;;;:::o;1030:313::-;1143:4;1181:2;1170:9;1166:18;1158:26;;1230:9;1224:4;1220:20;1216:1;1205:9;1201:17;1194:47;1258:78;1331:4;1322:6;1258:78;:::i;:::-;1250:86;;1030:313;;;;:::o;1349:75::-;1382:6;1415:2;1409:9;1399:19;;1349:75;:::o;1430:117::-;1539:1;1536;1529:12;1553:117;1662:1;1659;1652:12;1676:126;1713:7;1753:42;1746:5;1742:54;1731:65;;1676:126;;;:::o;1808:96::-;1845:7;1874:24;1892:5;1874:24;:::i;:::-;1863:35;;1808:96;;;:::o;1910:122::-;1983:24;2001:5;1983:24;:::i;:::-;1976:5;1973:35;1963:63;;2022:1;2019;2012:12;1963:63;1910:122;:::o;2038:139::-;2084:5;2122:6;2109:20;2100:29;;2138:33;2165:5;2138:33;:::i;:::-;2038:139;;;;:::o;2183:77::-;2220:7;2249:5;2238:16;;2183:77;;;:::o;2266:122::-;2339:24;2357:5;2339:24;:::i;:::-;2332:5;2329:35;2319:63;;2378:1;2375;2368:12;2319:63;2266:122;:::o;2394:139::-;2440:5;2478:6;2465:20;2456:29;;2494:33;2521:5;2494:33;:::i;:::-;2394:139;;;;:::o;2539:474::-;2607:6;2615;2664:2;2652:9;2643:7;2639:23;2635:32;2632:119;;;2670:79;;:::i;:::-;2632:119;2790:1;2815:53;2860:7;2851:6;2840:9;2836:22;2815:53;:::i;:::-;2805:63;;2761:117;2917:2;2943:53;2988:7;2979:6;2968:9;2964:22;2943:53;:::i;:::-;2933:63;;2888:118;2539:474;;;;;:::o;3019:90::-;3053:7;3096:5;3089:13;3082:21;3071:32;;3019:90;;;:::o;3115:109::-;3196:21;3211:5;3196:21;:::i;:::-;3191:3;3184:34;3115:109;;:::o;3230:210::-;3317:4;3355:2;3344:9;3340:18;3332:26;;3368:65;3430:1;3419:9;3415:17;3406:6;3368:65;:::i;:::-;3230:210;;;;:::o;3446:118::-;3533:24;3551:5;3533:24;:::i;:::-;3528:3;3521:37;3446:118;;:::o;3570:222::-;3663:4;3701:2;3690:9;3686:18;3678:26;;3714:71;3782:1;3771:9;3767:17;3758:6;3714:71;:::i;:::-;3570:222;;;;:::o;3798:77::-;3835:7;3864:5;3853:16;;3798:77;;;:::o;3881:122::-;3954:24;3972:5;3954:24;:::i;:::-;3947:5;3944:35;3934:63;;3993:1;3990;3983:12;3934:63;3881:122;:::o;4009:139::-;4055:5;4093:6;4080:20;4071:29;;4109:33;4136:5;4109:33;:::i;:::-;4009:139;;;;:::o;4154:117::-;4263:1;4260;4253:12;4277:117;4386:1;4383;4376:12;4400:117;4509:1;4506;4499:12;4536:552;4593:8;4603:6;4653:3;4646:4;4638:6;4634:17;4630:27;4620:122;;4661:79;;:::i;:::-;4620:122;4774:6;4761:20;4751:30;;4804:18;4796:6;4793:30;4790:117;;;4826:79;;:::i;:::-;4790:117;4940:4;4932:6;4928:17;4916:29;;4994:3;4986:4;4978:6;4974:17;4964:8;4960:32;4957:41;4954:128;;;5001:79;;:::i;:::-;4954:128;4536:552;;;;;:::o;5094:672::-;5173:6;5181;5189;5238:2;5226:9;5217:7;5213:23;5209:32;5206:119;;;5244:79;;:::i;:::-;5206:119;5364:1;5389:53;5434:7;5425:6;5414:9;5410:22;5389:53;:::i;:::-;5379:63;;5335:117;5519:2;5508:9;5504:18;5491:32;5550:18;5542:6;5539:30;5536:117;;;5572:79;;:::i;:::-;5536:117;5685:64;5741:7;5732:6;5721:9;5717:22;5685:64;:::i;:::-;5667:82;;;;5462:297;5094:672;;;;;:::o;5772:619::-;5849:6;5857;5865;5914:2;5902:9;5893:7;5889:23;5885:32;5882:119;;;5920:79;;:::i;:::-;5882:119;6040:1;6065:53;6110:7;6101:6;6090:9;6086:22;6065:53;:::i;:::-;6055:63;;6011:117;6167:2;6193:53;6238:7;6229:6;6218:9;6214:22;6193:53;:::i;:::-;6183:63;;6138:118;6295:2;6321:53;6366:7;6357:6;6346:9;6342:22;6321:53;:::i;:::-;6311:63;;6266:118;5772:619;;;;;:::o;6397:86::-;6432:7;6472:4;6465:5;6461:16;6450:27;;6397:86;;;:::o;6489:112::-;6572:22;6588:5;6572:22;:::i;:::-;6567:3;6560:35;6489:112;;:::o;6607:214::-;6696:4;6734:2;6723:9;6719:18;6711:26;;6747:67;6811:1;6800:9;6796:17;6787:6;6747:67;:::i;:::-;6607:214;;;;:::o;6827:329::-;6886:6;6935:2;6923:9;6914:7;6910:23;6906:32;6903:119;;;6941:79;;:::i;:::-;6903:119;7061:1;7086:53;7131:7;7122:6;7111:9;7107:22;7086:53;:::i;:::-;7076:63;;7032:117;6827:329;;;;:::o;7162:98::-;7213:6;7247:5;7241:12;7231:22;;7162:98;;;:::o;7266:168::-;7349:11;7383:6;7378:3;7371:19;7423:4;7418:3;7414:14;7399:29;;7266:168;;;;:::o;7440:373::-;7526:3;7554:38;7586:5;7554:38;:::i;:::-;7608:70;7671:6;7666:3;7608:70;:::i;:::-;7601:77;;7687:65;7745:6;7740:3;7733:4;7726:5;7722:16;7687:65;:::i;:::-;7777:29;7799:6;7777:29;:::i;:::-;7772:3;7768:39;7761:46;;7530:283;7440:373;;;;:::o;7819:309::-;7930:4;7968:2;7957:9;7953:18;7945:26;;8017:9;8011:4;8007:20;8003:1;7992:9;7988:17;7981:47;8045:76;8116:4;8107:6;8045:76;:::i;:::-;8037:84;;7819:309;;;;:::o;8134:329::-;8193:6;8242:2;8230:9;8221:7;8217:23;8213:32;8210:119;;;8248:79;;:::i;:::-;8210:119;8368:1;8393:53;8438:7;8429:6;8418:9;8414:22;8393:53;:::i;:::-;8383:63;;8339:117;8134:329;;;;:::o;8469:118::-;8556:24;8574:5;8556:24;:::i;:::-;8551:3;8544:37;8469:118;;:::o;8593:222::-;8686:4;8724:2;8713:9;8709:18;8701:26;;8737:71;8805:1;8794:9;8790:17;8781:6;8737:71;:::i;:::-;8593:222;;;;:::o;8821:117::-;8930:1;8927;8920:12;8944:180;8992:77;8989:1;8982:88;9089:4;9086:1;9079:15;9113:4;9110:1;9103:15;9130:281;9213:27;9235:4;9213:27;:::i;:::-;9205:6;9201:40;9343:6;9331:10;9328:22;9307:18;9295:10;9292:34;9289:62;9286:88;;;9354:18;;:::i;:::-;9286:88;9394:10;9390:2;9383:22;9173:238;9130:281;;:::o;9417:129::-;9451:6;9478:20;;:::i;:::-;9468:30;;9507:33;9535:4;9527:6;9507:33;:::i;:::-;9417:129;;;:::o;9552:307::-;9613:4;9703:18;9695:6;9692:30;9689:56;;;9725:18;;:::i;:::-;9689:56;9763:29;9785:6;9763:29;:::i;:::-;9755:37;;9847:4;9841;9837:15;9829:23;;9552:307;;;:::o;9865:146::-;9962:6;9957:3;9952;9939:30;10003:1;9994:6;9989:3;9985:16;9978:27;9865:146;;;:::o;10017:423::-;10094:5;10119:65;10135:48;10176:6;10135:48;:::i;:::-;10119:65;:::i;:::-;10110:74;;10207:6;10200:5;10193:21;10245:4;10238:5;10234:16;10283:3;10274:6;10269:3;10265:16;10262:25;10259:112;;;10290:79;;:::i;:::-;10259:112;10380:54;10427:6;10422:3;10417;10380:54;:::i;:::-;10100:340;10017:423;;;;;:::o;10459:338::-;10514:5;10563:3;10556:4;10548:6;10544:17;10540:27;10530:122;;10571:79;;:::i;:::-;10530:122;10688:6;10675:20;10713:78;10787:3;10779:6;10772:4;10764:6;10760:17;10713:78;:::i;:::-;10704:87;;10520:277;10459:338;;;;:::o;10803:507::-;10871:6;10920:2;10908:9;10899:7;10895:23;10891:32;10888:119;;;10926:79;;:::i;:::-;10888:119;11074:1;11063:9;11059:17;11046:31;11104:18;11096:6;11093:30;11090:117;;;11126:79;;:::i;:::-;11090:117;11231:62;11285:7;11276:6;11265:9;11261:22;11231:62;:::i;:::-;11221:72;;11017:286;10803:507;;;;:::o;11316:329::-;11375:6;11424:2;11412:9;11403:7;11399:23;11395:32;11392:119;;;11430:79;;:::i;:::-;11392:119;11550:1;11575:53;11620:7;11611:6;11600:9;11596:22;11575:53;:::i;:::-;11565:63;;11521:117;11316:329;;;;:::o;11651:672::-;11730:6;11738;11746;11795:2;11783:9;11774:7;11770:23;11766:32;11763:119;;;11801:79;;:::i;:::-;11763:119;11921:1;11946:53;11991:7;11982:6;11971:9;11967:22;11946:53;:::i;:::-;11936:63;;11892:117;12076:2;12065:9;12061:18;12048:32;12107:18;12099:6;12096:30;12093:117;;;12129:79;;:::i;:::-;12093:117;12242:64;12298:7;12289:6;12278:9;12274:22;12242:64;:::i;:::-;12224:82;;;;12019:297;11651:672;;;;;:::o;12329:474::-;12397:6;12405;12454:2;12442:9;12433:7;12429:23;12425:32;12422:119;;;12460:79;;:::i;:::-;12422:119;12580:1;12605:53;12650:7;12641:6;12630:9;12626:22;12605:53;:::i;:::-;12595:63;;12551:117;12707:2;12733:53;12778:7;12769:6;12758:9;12754:22;12733:53;:::i;:::-;12723:63;;12678:118;12329:474;;;;;:::o;12809:180::-;12857:77;12854:1;12847:88;12954:4;12951:1;12944:15;12978:4;12975:1;12968:15;12995:320;13039:6;13076:1;13070:4;13066:12;13056:22;;13123:1;13117:4;13113:12;13144:18;13134:81;;13200:4;13192:6;13188:17;13178:27;;13134:81;13262:2;13254:6;13251:14;13231:18;13228:38;13225:84;;13281:18;;:::i;:::-;13225:84;13046:269;12995:320;;;:::o;13321:177::-;13461:29;13457:1;13449:6;13445:14;13438:53;13321:177;:::o;13504:366::-;13646:3;13667:67;13731:2;13726:3;13667:67;:::i;:::-;13660:74;;13743:93;13832:3;13743:93;:::i;:::-;13861:2;13856:3;13852:12;13845:19;;13504:366;;;:::o;13876:419::-;14042:4;14080:2;14069:9;14065:18;14057:26;;14129:9;14123:4;14119:20;14115:1;14104:9;14100:17;14093:47;14157:131;14283:4;14157:131;:::i;:::-;14149:139;;13876:419;;;:::o;14301:174::-;14441:26;14437:1;14429:6;14425:14;14418:50;14301:174;:::o;14481:366::-;14623:3;14644:67;14708:2;14703:3;14644:67;:::i;:::-;14637:74;;14720:93;14809:3;14720:93;:::i;:::-;14838:2;14833:3;14829:12;14822:19;;14481:366;;;:::o;14853:419::-;15019:4;15057:2;15046:9;15042:18;15034:26;;15106:9;15100:4;15096:20;15092:1;15081:9;15077:17;15070:47;15134:131;15260:4;15134:131;:::i;:::-;15126:139;;14853:419;;;:::o;15300:314::-;15396:3;15417:70;15480:6;15475:3;15417:70;:::i;:::-;15410:77;;15497:56;15546:6;15541:3;15534:5;15497:56;:::i;:::-;15578:29;15600:6;15578:29;:::i;:::-;15573:3;15569:39;15562:46;;15300:314;;;;;:::o;15620:329::-;15741:4;15779:2;15768:9;15764:18;15756:26;;15828:9;15822:4;15818:20;15814:1;15803:9;15799:17;15792:47;15856:86;15937:4;15928:6;15920;15856:86;:::i;:::-;15848:94;;15620:329;;;;;:::o;15955:180::-;16003:77;16000:1;15993:88;16100:4;16097:1;16090:15;16124:4;16121:1;16114:15;16141:191;16181:3;16200:20;16218:1;16200:20;:::i;:::-;16195:25;;16234:20;16252:1;16234:20;:::i;:::-;16229:25;;16277:1;16274;16270:9;16263:16;;16298:3;16295:1;16292:10;16289:36;;;16305:18;;:::i;:::-;16289:36;16141:191;;;;:::o;16338:194::-;16378:4;16398:20;16416:1;16398:20;:::i;:::-;16393:25;;16432:20;16450:1;16432:20;:::i;:::-;16427:25;;16476:1;16473;16469:9;16461:17;;16500:1;16494:4;16491:11;16488:37;;;16505:18;;:::i;:::-;16488:37;16338:194;;;;:::o;16538:174::-;16678:26;16674:1;16666:6;16662:14;16655:50;16538:174;:::o;16718:366::-;16860:3;16881:67;16945:2;16940:3;16881:67;:::i;:::-;16874:74;;16957:93;17046:3;16957:93;:::i;:::-;17075:2;17070:3;17066:12;17059:19;;16718:366;;;:::o;17090:419::-;17256:4;17294:2;17283:9;17279:18;17271:26;;17343:9;17337:4;17333:20;17329:1;17318:9;17314:17;17307:47;17371:131;17497:4;17371:131;:::i;:::-;17363:139;;17090:419;;;:::o;17515:224::-;17655:34;17651:1;17643:6;17639:14;17632:58;17724:7;17719:2;17711:6;17707:15;17700:32;17515:224;:::o;17745:366::-;17887:3;17908:67;17972:2;17967:3;17908:67;:::i;:::-;17901:74;;17984:93;18073:3;17984:93;:::i;:::-;18102:2;18097:3;18093:12;18086:19;;17745:366;;;:::o;18117:419::-;18283:4;18321:2;18310:9;18306:18;18298:26;;18370:9;18364:4;18360:20;18356:1;18345:9;18341:17;18334:47;18398:131;18524:4;18398:131;:::i;:::-;18390:139;;18117:419;;;:::o;18542:168::-;18682:20;18678:1;18670:6;18666:14;18659:44;18542:168;:::o;18716:366::-;18858:3;18879:67;18943:2;18938:3;18879:67;:::i;:::-;18872:74;;18955:93;19044:3;18955:93;:::i;:::-;19073:2;19068:3;19064:12;19057:19;;18716:366;;;:::o;19088:419::-;19254:4;19292:2;19281:9;19277:18;19269:26;;19341:9;19335:4;19331:20;19327:1;19316:9;19312:17;19305:47;19369:131;19495:4;19369:131;:::i;:::-;19361:139;;19088:419;;;:::o;19513:140::-;19561:4;19584:3;19576:11;;19607:3;19604:1;19597:14;19641:4;19638:1;19628:18;19620:26;;19513:140;;;:::o;19659:93::-;19696:6;19743:2;19738;19731:5;19727:14;19723:23;19713:33;;19659:93;;;:::o;19758:107::-;19802:8;19852:5;19846:4;19842:16;19821:37;;19758:107;;;;:::o;19871:393::-;19940:6;19990:1;19978:10;19974:18;20013:97;20043:66;20032:9;20013:97;:::i;:::-;20131:39;20161:8;20150:9;20131:39;:::i;:::-;20119:51;;20203:4;20199:9;20192:5;20188:21;20179:30;;20252:4;20242:8;20238:19;20231:5;20228:30;20218:40;;19947:317;;19871:393;;;;;:::o;20270:60::-;20298:3;20319:5;20312:12;;20270:60;;;:::o;20336:142::-;20386:9;20419:53;20437:34;20446:24;20464:5;20446:24;:::i;:::-;20437:34;:::i;:::-;20419:53;:::i;:::-;20406:66;;20336:142;;;:::o;20484:75::-;20527:3;20548:5;20541:12;;20484:75;;;:::o;20565:269::-;20675:39;20706:7;20675:39;:::i;:::-;20736:91;20785:41;20809:16;20785:41;:::i;:::-;20777:6;20770:4;20764:11;20736:91;:::i;:::-;20730:4;20723:105;20641:193;20565:269;;;:::o;20840:73::-;20885:3;20840:73;:::o;20919:189::-;20996:32;;:::i;:::-;21037:65;21095:6;21087;21081:4;21037:65;:::i;:::-;20972:136;20919:189;;:::o;21114:186::-;21174:120;21191:3;21184:5;21181:14;21174:120;;;21245:39;21282:1;21275:5;21245:39;:::i;:::-;21218:1;21211:5;21207:13;21198:22;;21174:120;;;21114:186;;:::o;21306:541::-;21406:2;21401:3;21398:11;21395:445;;;21440:37;21471:5;21440:37;:::i;:::-;21523:29;21541:10;21523:29;:::i;:::-;21513:8;21509:44;21706:2;21694:10;21691:18;21688:49;;;21727:8;21712:23;;21688:49;21750:80;21806:22;21824:3;21806:22;:::i;:::-;21796:8;21792:37;21779:11;21750:80;:::i;:::-;21410:430;;21395:445;21306:541;;;:::o;21853:117::-;21907:8;21957:5;21951:4;21947:16;21926:37;;21853:117;;;;:::o;21976:169::-;22020:6;22053:51;22101:1;22097:6;22089:5;22086:1;22082:13;22053:51;:::i;:::-;22049:56;22134:4;22128;22124:15;22114:25;;22027:118;21976:169;;;;:::o;22150:295::-;22226:4;22372:29;22397:3;22391:4;22372:29;:::i;:::-;22364:37;;22434:3;22431:1;22427:11;22421:4;22418:21;22410:29;;22150:295;;;;:::o;22450:1390::-;22565:36;22597:3;22565:36;:::i;:::-;22666:18;22658:6;22655:30;22652:56;;;22688:18;;:::i;:::-;22652:56;22732:38;22764:4;22758:11;22732:38;:::i;:::-;22817:66;22876:6;22868;22862:4;22817:66;:::i;:::-;22910:1;22934:4;22921:17;;22966:2;22958:6;22955:14;22983:1;22978:617;;;;23639:1;23656:6;23653:77;;;23705:9;23700:3;23696:19;23690:26;23681:35;;23653:77;23756:67;23816:6;23809:5;23756:67;:::i;:::-;23750:4;23743:81;23612:222;22948:886;;22978:617;23030:4;23026:9;23018:6;23014:22;23064:36;23095:4;23064:36;:::i;:::-;23122:1;23136:208;23150:7;23147:1;23144:14;23136:208;;;23229:9;23224:3;23220:19;23214:26;23206:6;23199:42;23280:1;23272:6;23268:14;23258:24;;23327:2;23316:9;23312:18;23299:31;;23173:4;23170:1;23166:12;23161:17;;23136:208;;;23372:6;23363:7;23360:19;23357:179;;;23430:9;23425:3;23421:19;23415:26;23473:48;23515:4;23507:6;23503:17;23492:9;23473:48;:::i;:::-;23465:6;23458:64;23380:156;23357:179;23582:1;23578;23570:6;23566:14;23562:22;23556:4;23549:36;22985:610;;;22948:886;;22540:1300;;;22450:1390;;:::o;23846:549::-;24023:4;24061:2;24050:9;24046:18;24038:26;;24074:71;24142:1;24131:9;24127:17;24118:6;24074:71;:::i;:::-;24155:72;24223:2;24212:9;24208:18;24199:6;24155:72;:::i;:::-;24274:9;24268:4;24264:20;24259:2;24248:9;24244:18;24237:48;24302:86;24383:4;24374:6;24366;24302:86;:::i;:::-;24294:94;;23846:549;;;;;;;:::o;24401:225::-;24541:34;24537:1;24529:6;24525:14;24518:58;24610:8;24605:2;24597:6;24593:15;24586:33;24401:225;:::o;24632:366::-;24774:3;24795:67;24859:2;24854:3;24795:67;:::i;:::-;24788:74;;24871:93;24960:3;24871:93;:::i;:::-;24989:2;24984:3;24980:12;24973:19;;24632:366;;;:::o;25004:419::-;25170:4;25208:2;25197:9;25193:18;25185:26;;25257:9;25251:4;25247:20;25243:1;25232:9;25228:17;25221:47;25285:131;25411:4;25285:131;:::i;:::-;25277:139;;25004:419;;;:::o;25429:223::-;25569:34;25565:1;25557:6;25553:14;25546:58;25638:6;25633:2;25625:6;25621:15;25614:31;25429:223;:::o;25658:366::-;25800:3;25821:67;25885:2;25880:3;25821:67;:::i;:::-;25814:74;;25897:93;25986:3;25897:93;:::i;:::-;26015:2;26010:3;26006:12;25999:19;;25658:366;;;:::o;26030:419::-;26196:4;26234:2;26223:9;26219:18;26211:26;;26283:9;26277:4;26273:20;26269:1;26258:9;26254:17;26247:47;26311:131;26437:4;26311:131;:::i;:::-;26303:139;;26030:419;;;:::o;26455:221::-;26595:34;26591:1;26583:6;26579:14;26572:58;26664:4;26659:2;26651:6;26647:15;26640:29;26455:221;:::o;26682:366::-;26824:3;26845:67;26909:2;26904:3;26845:67;:::i;:::-;26838:74;;26921:93;27010:3;26921:93;:::i;:::-;27039:2;27034:3;27030:12;27023:19;;26682:366;;;:::o;27054:419::-;27220:4;27258:2;27247:9;27243:18;27235:26;;27307:9;27301:4;27297:20;27293:1;27282:9;27278:17;27271:47;27335:131;27461:4;27335:131;:::i;:::-;27327:139;;27054:419;;;:::o;27479:166::-;27619:18;27615:1;27607:6;27603:14;27596:42;27479:166;:::o;27651:366::-;27793:3;27814:67;27878:2;27873:3;27814:67;:::i;:::-;27807:74;;27890:93;27979:3;27890:93;:::i;:::-;28008:2;28003:3;27999:12;27992:19;;27651:366;;;:::o;28023:419::-;28189:4;28227:2;28216:9;28212:18;28204:26;;28276:9;28270:4;28266:20;28262:1;28251:9;28247:17;28240:47;28304:131;28430:4;28304:131;:::i;:::-;28296:139;;28023:419;;;:::o;28448:179::-;28588:31;28584:1;28576:6;28572:14;28565:55;28448:179;:::o;28633:366::-;28775:3;28796:67;28860:2;28855:3;28796:67;:::i;:::-;28789:74;;28872:93;28961:3;28872:93;:::i;:::-;28990:2;28985:3;28981:12;28974:19;;28633:366;;;:::o;29005:419::-;29171:4;29209:2;29198:9;29194:18;29186:26;;29258:9;29252:4;29248:20;29244:1;29233:9;29229:17;29222:47;29286:131;29412:4;29286:131;:::i;:::-;29278:139;;29005:419;;;:::o;29430:224::-;29570:34;29566:1;29558:6;29554:14;29547:58;29639:7;29634:2;29626:6;29622:15;29615:32;29430:224;:::o;29660:366::-;29802:3;29823:67;29887:2;29882:3;29823:67;:::i;:::-;29816:74;;29899:93;29988:3;29899:93;:::i;:::-;30017:2;30012:3;30008:12;30001:19;;29660:366;;;:::o;30032:419::-;30198:4;30236:2;30225:9;30221:18;30213:26;;30285:9;30279:4;30275:20;30271:1;30260:9;30256:17;30249:47;30313:131;30439:4;30313:131;:::i;:::-;30305:139;;30032:419;;;:::o;30457:222::-;30597:34;30593:1;30585:6;30581:14;30574:58;30666:5;30661:2;30653:6;30649:15;30642:30;30457:222;:::o;30685:366::-;30827:3;30848:67;30912:2;30907:3;30848:67;:::i;:::-;30841:74;;30924:93;31013:3;30924:93;:::i;:::-;31042:2;31037:3;31033:12;31026:19;;30685:366;;;:::o;31057:419::-;31223:4;31261:2;31250:9;31246:18;31238:26;;31310:9;31304:4;31300:20;31296:1;31285:9;31281:17;31274:47;31338:131;31464:4;31338:131;:::i;:::-;31330:139;;31057:419;;;:::o;31482:225::-;31622:34;31618:1;31610:6;31606:14;31599:58;31691:8;31686:2;31678:6;31674:15;31667:33;31482:225;:::o;31713:366::-;31855:3;31876:67;31940:2;31935:3;31876:67;:::i;:::-;31869:74;;31952:93;32041:3;31952:93;:::i;:::-;32070:2;32065:3;32061:12;32054:19;;31713:366;;;:::o;32085:419::-;32251:4;32289:2;32278:9;32274:18;32266:26;;32338:9;32332:4;32328:20;32324:1;32313:9;32309:17;32302:47;32366:131;32492:4;32366:131;:::i;:::-;32358:139;;32085:419;;;:::o;32510:182::-;32650:34;32646:1;32638:6;32634:14;32627:58;32510:182;:::o;32698:366::-;32840:3;32861:67;32925:2;32920:3;32861:67;:::i;:::-;32854:74;;32937:93;33026:3;32937:93;:::i;:::-;33055:2;33050:3;33046:12;33039:19;;32698:366;;;:::o;33070:419::-;33236:4;33274:2;33263:9;33259:18;33251:26;;33323:9;33317:4;33313:20;33309:1;33298:9;33294:17;33287:47;33351:131;33477:4;33351:131;:::i;:::-;33343:139;;33070:419;;;:::o;33495:220::-;33635:34;33631:1;33623:6;33619:14;33612:58;33704:3;33699:2;33691:6;33687:15;33680:28;33495:220;:::o;33721:366::-;33863:3;33884:67;33948:2;33943:3;33884:67;:::i;:::-;33877:74;;33960:93;34049:3;33960:93;:::i;:::-;34078:2;34073:3;34069:12;34062:19;;33721:366;;;:::o;34093:419::-;34259:4;34297:2;34286:9;34282:18;34274:26;;34346:9;34340:4;34336:20;34332:1;34321:9;34317:17;34310:47;34374:131;34500:4;34374:131;:::i;:::-;34366:139;;34093:419;;;:::o;34518:221::-;34658:34;34654:1;34646:6;34642:14;34635:58;34727:4;34722:2;34714:6;34710:15;34703:29;34518:221;:::o;34745:366::-;34887:3;34908:67;34972:2;34967:3;34908:67;:::i;:::-;34901:74;;34984:93;35073:3;34984:93;:::i;:::-;35102:2;35097:3;35093:12;35086:19;;34745:366;;;:::o;35117:419::-;35283:4;35321:2;35310:9;35306:18;35298:26;;35370:9;35364:4;35360:20;35356:1;35345:9;35341:17;35334:47;35398:131;35524:4;35398:131;:::i;:::-;35390:139;;35117:419;;;:::o;35542:410::-;35582:7;35605:20;35623:1;35605:20;:::i;:::-;35600:25;;35639:20;35657:1;35639:20;:::i;:::-;35634:25;;35694:1;35691;35687:9;35716:30;35734:11;35716:30;:::i;:::-;35705:41;;35895:1;35886:7;35882:15;35879:1;35876:22;35856:1;35849:9;35829:83;35806:139;;35925:18;;:::i;:::-;35806:139;35590:362;35542:410;;;;:::o;35958:180::-;36006:77;36003:1;35996:88;36103:4;36100:1;36093:15;36127:4;36124:1;36117:15;36144:185;36184:1;36201:20;36219:1;36201:20;:::i;:::-;36196:25;;36235:20;36253:1;36235:20;:::i;:::-;36230:25;;36274:1;36264:35;;36279:18;;:::i;:::-;36264:35;36321:1;36318;36314:9;36309:14;;36144:185;;;;:::o;36335:181::-;36475:33;36471:1;36463:6;36459:14;36452:57;36335:181;:::o;36522:366::-;36664:3;36685:67;36749:2;36744:3;36685:67;:::i;:::-;36678:74;;36761:93;36850:3;36761:93;:::i;:::-;36879:2;36874:3;36870:12;36863:19;;36522:366;;;:::o;36894:419::-;37060:4;37098:2;37087:9;37083:18;37075:26;;37147:9;37141:4;37137:20;37133:1;37122:9;37118:17;37111:47;37175:131;37301:4;37175:131;:::i;:::-;37167:139;;36894:419;;;:::o;37319:94::-;37352:8;37400:5;37396:2;37392:14;37371:35;;37319:94;;;:::o;37419:::-;37458:7;37487:20;37501:5;37487:20;:::i;:::-;37476:31;;37419:94;;;:::o;37519:100::-;37558:7;37587:26;37607:5;37587:26;:::i;:::-;37576:37;;37519:100;;;:::o;37625:157::-;37730:45;37750:24;37768:5;37750:24;:::i;:::-;37730:45;:::i;:::-;37725:3;37718:58;37625:157;;:::o;37788:79::-;37827:7;37856:5;37845:16;;37788:79;;;:::o;37873:157::-;37978:45;37998:24;38016:5;37998:24;:::i;:::-;37978:45;:::i;:::-;37973:3;37966:58;37873:157;;:::o;38036:147::-;38137:11;38174:3;38159:18;;38036:147;;;;:::o;38211:327::-;38325:3;38346:88;38427:6;38422:3;38346:88;:::i;:::-;38339:95;;38444:56;38493:6;38488:3;38481:5;38444:56;:::i;:::-;38525:6;38520:3;38516:16;38509:23;;38211:327;;;;;:::o;38544:573::-;38740:3;38755:75;38826:3;38817:6;38755:75;:::i;:::-;38855:2;38850:3;38846:12;38839:19;;38868:75;38939:3;38930:6;38868:75;:::i;:::-;38968:2;38963:3;38959:12;38952:19;;38988:103;39087:3;39078:6;39070;38988:103;:::i;:::-;38981:110;;39108:3;39101:10;;38544:573;;;;;;;:::o;39123:220::-;39263:34;39259:1;39251:6;39247:14;39240:58;39332:3;39327:2;39319:6;39315:15;39308:28;39123:220;:::o;39349:366::-;39491:3;39512:67;39576:2;39571:3;39512:67;:::i;:::-;39505:74;;39588:93;39677:3;39588:93;:::i;:::-;39706:2;39701:3;39697:12;39690:19;;39349:366;;;:::o;39721:419::-;39887:4;39925:2;39914:9;39910:18;39902:26;;39974:9;39968:4;39964:20;39960:1;39949:9;39945:17;39938:47;40002:131;40128:4;40002:131;:::i;:::-;39994:139;;39721:419;;;:::o;40146:170::-;40286:22;40282:1;40274:6;40270:14;40263:46;40146:170;:::o;40322:366::-;40464:3;40485:67;40549:2;40544:3;40485:67;:::i;:::-;40478:74;;40561:93;40650:3;40561:93;:::i;:::-;40679:2;40674:3;40670:12;40663:19;;40322:366;;;:::o;40694:419::-;40860:4;40898:2;40887:9;40883:18;40875:26;;40947:9;40941:4;40937:20;40933:1;40922:9;40918:17;40911:47;40975:131;41101:4;40975:131;:::i;:::-;40967:139;;40694:419;;;:::o;41119:573::-;41315:3;41330:75;41401:3;41392:6;41330:75;:::i;:::-;41430:2;41425:3;41421:12;41414:19;;41450:103;41549:3;41540:6;41532;41450:103;:::i;:::-;41443:110;;41563:75;41634:3;41625:6;41563:75;:::i;:::-;41663:2;41658:3;41654:12;41647:19;;41683:3;41676:10;;41119:573;;;;;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"2610400","executionCost":"infinite","totalCost":"infinite"},"external":{"actualMintedPercentage()":"infinite","allowance(address,address)":"infinite","approve(address,uint256)":"infinite","authGranted(bytes32,bytes)":"infinite","authRequest(bytes32,bytes)":"infinite","balanceOf(address)":"2909","burn(uint256)":"infinite","burnFrom(address,uint256)":"infinite","decimals()":"389","decreaseAllowance(address,uint256)":"infinite","getExpiryTime()":"441","increaseAllowance(address,uint256)":"infinite","mint(address,uint256)":"3295","mintRequest(uint256,bytes)":"infinite","name()":"infinite","oneHundredPercent()":"397","owner()":"2661","pause()":"infinite","paused()":"2590","paymentComplete(bytes32)":"infinite","publicKey()":"infinite","renounceOwnership()":"30638","seignorageFee()":"420","setPublicKey(bytes)":"infinite","symbol()":"infinite","totalSupply()":"2483","transfer(address,uint256)":"infinite","transferFrom(address,address,uint256)":"infinite","transferOwnership(address)":"31004","unpause()":"infinite"},"internal":{"_beforeTokenTransfer(address,address,uint256)":"infinite","_buildParamsHash(uint256,bytes calldata,uint256)":"infinite","_processMintRequest(address,uint256,bytes calldata)":"infinite"}},"methodIdentifiers":{"actualMintedPercentage()":"3addb12c","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","authGranted(bytes32,bytes)":"21a7e7e9","authRequest(bytes32,bytes)":"a4629533","balanceOf(address)":"70a08231","burn(uint256)":"42966c68","burnFrom(address,uint256)":"79cc6790","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","getExpiryTime()":"25cb5bc0","increaseAllowance(address,uint256)":"39509351","mint(address,uint256)":"40c10f19","mintRequest(uint256,bytes)":"cdc1f6d4","name()":"06fdde03","oneHundredPercent()":"34913f28","owner()":"8da5cb5b","pause()":"8456cb59","paused()":"5c975abb","paymentComplete(bytes32)":"ac5b756d","publicKey()":"63ffab31","renounceOwnership()":"715018a6","seignorageFee()":"1285cc2a","setPublicKey(bytes)":"a91d58b4","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd","transferOwnership(address)":"f2fde38b","unpause()":"3f4ba83a"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_publicKey\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"requester\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"requestId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"grantEncryptedData\",\"type\":\"bytes\"}],\"name\":\"AuthGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"requester\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"requestId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"authEncryptedData\",\"type\":\"bytes\"}],\"name\":\"AuthRequest\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"requester\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"requestId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"expiration\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"encryptedData\",\"type\":\"bytes\"}],\"name\":\"MintRequest\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"actualMintedPercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"requestId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"encryptedData\",\"type\":\"bytes\"}],\"name\":\"authGranted\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"requestId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"serverEncryptedData\",\"type\":\"bytes\"}],\"name\":\"authRequest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getExpiryTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"encryptedData\",\"type\":\"bytes\"}],\"name\":\"mintRequest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oneHundredPercent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"requestId\",\"type\":\"bytes32\"}],\"name\":\"paymentComplete\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"publicKey\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"seignorageFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_publicKey\",\"type\":\"bytes\"}],\"name\":\"setPublicKey\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"authGranted(bytes32,bytes)\":{\"params\":{\"encryptedData\":\"the grant's encrypted data\",\"requestId\":\"the original mint request id\"}},\"authRequest(bytes32,bytes)\":{\"params\":{\"requestId\":\"the original mint request id\",\"serverEncryptedData\":\"the current auth. request's encrypted data\"}},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys `amount` tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"mintRequest(uint256,bytes)\":{\"params\":{\"amount\":\"The amount to be minted (specified in 10^18 decimals)\",\"encryptedData\":\"The encrypted payload of the request\"}},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"paymentComplete(bytes32)\":{\"params\":{\"requestId\":\"the original mint request id\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"authGranted(bytes32,bytes)\":{\"notice\":\"Triggered by the original requester, emits an AuthGranted event for the server. Pausable.\"},\"authRequest(bytes32,bytes)\":{\"notice\":\"Triggered by the owner, emits an AuthRequest event for the original requester. Pausable.\"},\"mint(address,uint256)\":{\"notice\":\"Not implemented, cannot mint directly.\"},\"mintRequest(uint256,bytes)\":{\"notice\":\"Creates an internal mint Commitment and emits a MintRequest event. Pausable.\"},\"paymentComplete(bytes32)\":{\"notice\":\"Triggered by the owner, when the fiat funds have cleared. Does the mint, minus seignorage. Pausable.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ProvableGBP.sol\":\"ProvableGBP\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/security/Pausable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (security/Pausable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which allows children to implement an emergency stop\\n * mechanism that can be triggered by an authorized account.\\n *\\n * This module is used through inheritance. It will make available the\\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\\n * the functions of your contract. Note that they will not be pausable by\\n * simply including this module, only once the modifiers are put in place.\\n */\\nabstract contract Pausable is Context {\\n    /**\\n     * @dev Emitted when the pause is triggered by `account`.\\n     */\\n    event Paused(address account);\\n\\n    /**\\n     * @dev Emitted when the pause is lifted by `account`.\\n     */\\n    event Unpaused(address account);\\n\\n    bool private _paused;\\n\\n    /**\\n     * @dev Initializes the contract in unpaused state.\\n     */\\n    constructor() {\\n        _paused = false;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is not paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    modifier whenNotPaused() {\\n        _requireNotPaused();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    modifier whenPaused() {\\n        _requirePaused();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns true if the contract is paused, and false otherwise.\\n     */\\n    function paused() public view virtual returns (bool) {\\n        return _paused;\\n    }\\n\\n    /**\\n     * @dev Throws if the contract is paused.\\n     */\\n    function _requireNotPaused() internal view virtual {\\n        require(!paused(), \\\"Pausable: paused\\\");\\n    }\\n\\n    /**\\n     * @dev Throws if the contract is not paused.\\n     */\\n    function _requirePaused() internal view virtual {\\n        require(paused(), \\\"Pausable: not paused\\\");\\n    }\\n\\n    /**\\n     * @dev Triggers stopped state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    function _pause() internal virtual whenNotPaused {\\n        _paused = true;\\n        emit Paused(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns to normal state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    function _unpause() internal virtual whenPaused {\\n        _paused = false;\\n        emit Unpaused(_msgSender());\\n    }\\n}\\n\",\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"./extensions/IERC20Metadata.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20 is Context, IERC20, IERC20Metadata {\\n    mapping(address => uint256) private _balances;\\n\\n    mapping(address => mapping(address => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * The default value of {decimals} is 18. To select a different value for\\n     * {decimals} you should overload it.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\\n     * overridden;\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual override returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `amount`.\\n     */\\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `amount`.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) public virtual override returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, amount);\\n        _transfer(from, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `spender` must have allowance for the caller of at least\\n     * `subtractedValue`.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        uint256 currentAllowance = allowance(owner, spender);\\n        require(currentAllowance >= subtractedValue, \\\"ERC20: decreased allowance below zero\\\");\\n        unchecked {\\n            _approve(owner, spender, currentAllowance - subtractedValue);\\n        }\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves `amount` of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     */\\n    function _transfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {\\n        require(from != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(to != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, amount);\\n\\n        uint256 fromBalance = _balances[from];\\n        require(fromBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        unchecked {\\n            _balances[from] = fromBalance - amount;\\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\\n            // decrementing then incrementing.\\n            _balances[to] += amount;\\n        }\\n\\n        emit Transfer(from, to, amount);\\n\\n        _afterTokenTransfer(from, to, amount);\\n    }\\n\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _beforeTokenTransfer(address(0), account, amount);\\n\\n        _totalSupply += amount;\\n        unchecked {\\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\\n            _balances[account] += amount;\\n        }\\n        emit Transfer(address(0), account, amount);\\n\\n        _afterTokenTransfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     */\\n    function _burn(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        _beforeTokenTransfer(account, address(0), amount);\\n\\n        uint256 accountBalance = _balances[account];\\n        require(accountBalance >= amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        unchecked {\\n            _balances[account] = accountBalance - amount;\\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\\n            _totalSupply -= amount;\\n        }\\n\\n        emit Transfer(account, address(0), amount);\\n\\n        _afterTokenTransfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     */\\n    function _approve(\\n        address owner,\\n        address spender,\\n        uint256 amount\\n    ) internal virtual {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\\n     *\\n     * Does not update the allowance amount in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Might emit an {Approval} event.\\n     */\\n    function _spendAllowance(\\n        address owner,\\n        address spender,\\n        uint256 amount\\n    ) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            require(currentAllowance >= amount, \\\"ERC20: insufficient allowance\\\");\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - amount);\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * will be transferred to `to`.\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * has been transferred to `to`.\\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n}\\n\",\"keccak256\":\"0x4ffc0547c02ad22925310c585c0f166f8759e2648a09e9b489100c42f15dd98d\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/extensions/ERC20Burnable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../ERC20.sol\\\";\\nimport \\\"../../../utils/Context.sol\\\";\\n\\n/**\\n * @dev Extension of {ERC20} that allows token holders to destroy both their own\\n * tokens and those that they have an allowance for, in a way that can be\\n * recognized off-chain (via event analysis).\\n */\\nabstract contract ERC20Burnable is Context, ERC20 {\\n    /**\\n     * @dev Destroys `amount` tokens from the caller.\\n     *\\n     * See {ERC20-_burn}.\\n     */\\n    function burn(uint256 amount) public virtual {\\n        _burn(_msgSender(), amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, deducting from the caller's\\n     * allowance.\\n     *\\n     * See {ERC20-_burn} and {ERC20-allowance}.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have allowance for ``accounts``'s tokens of at least\\n     * `amount`.\\n     */\\n    function burnFrom(address account, uint256 amount) public virtual {\\n        _spendAllowance(account, _msgSender(), amount);\\n        _burn(account, amount);\\n    }\\n}\\n\",\"keccak256\":\"0x0d19410453cda55960a818e02bd7c18952a5c8fe7a3036e81f0d599f34487a7b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\\n\\npragma solidity ^0.8.0;\\n\\n// CAUTION\\n// This version of SafeMath should only be used with Solidity 0.8 or later,\\n// because it relies on the compiler's built in overflow checks.\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations.\\n *\\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\\n * now has built in overflow checking.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            uint256 c = a + b;\\n            if (c < a) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b > a) return (false, 0);\\n            return (true, a - b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n            // benefit is lost if 'b' is also tested.\\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n            if (a == 0) return (true, 0);\\n            uint256 c = a * b;\\n            if (c / a != b) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a / b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a % b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a + b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a - b;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a * b;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a / b;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a % b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {trySub}.\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b <= a, errorMessage);\\n            return a - b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a / b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting with custom message when dividing by zero.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryMod}.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a % b;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\"},\"contracts/ProvableGBP.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.4;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/ERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\\\";\\nimport \\\"@openzeppelin/contracts/security/Pausable.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/math/SafeMath.sol\\\";\\n\\ncontract ProvableGBP is ERC20, ERC20Burnable, Pausable, Ownable {\\n\\n    using SafeMath for uint256;\\n\\n    // --- Constants ---\\n    // Requests are considered expired after 2h\\n    uint256 public constant getExpiryTime = 2 hours;\\n    // % of the trx we keep in bips (10 = 0.1%)\\n    uint256 public constant seignorageFee = 10;\\n    // 100% in bips\\n    uint256 public constant oneHundredPercent = 10000;\\n    // the actual amount we are going to mint\\n    uint256 public constant actualMintedPercentage = oneHundredPercent - seignorageFee;\\n\\n    // the public key of the server-side account\\n    bytes public publicKey = \\\"\\\";\\n\\n    struct Commitment {\\n        bytes31 paramsHash;\\n        address requester;\\n        uint256 expiration;\\n        uint256 amount;\\n    }\\n\\n    // map of mint commitments\\n    mapping(bytes32 => Commitment) private s_mintCommitments;\\n\\n\\n    constructor(bytes memory _publicKey) ERC20(\\\"Provable GBP\\\", \\\"PGBP\\\") {\\n        publicKey = _publicKey;\\n    }\\n\\n    event MintRequest(\\n        address indexed requester,\\n        bytes32 indexed requestId,\\n        uint256 amount,\\n        uint256 expiration,\\n        bytes encryptedData\\n    );\\n\\n    event AuthRequest(\\n        address indexed requester,\\n        bytes32 indexed requestId,\\n        bytes authEncryptedData\\n    );\\n\\n    event AuthGranted(\\n        address indexed requester,\\n        bytes32 indexed requestId,\\n        bytes grantEncryptedData\\n    );\\n\\n    function pause() public onlyOwner {\\n        _pause();\\n    }\\n\\n    function unpause() public onlyOwner {\\n        _unpause();\\n    }\\n\\n    function setPublicKey(bytes memory _publicKey) public onlyOwner {\\n        publicKey = _publicKey;\\n    }\\n\\n    /**\\n     * @notice Not implemented, cannot mint directly.\\n     */\\n    function mint(address, uint256) view public onlyOwner {\\n        // nameless function params mute \\\"unused param\\\" compiler warnings\\n        revert(\\\"You cannot mint directly\\\");\\n    }\\n\\n    function _beforeTokenTransfer(address from, address to, uint256 amount)\\n    internal\\n    whenNotPaused\\n    override\\n    {\\n        super._beforeTokenTransfer(from, to, amount);\\n    }\\n\\n    /**\\n     * @notice Creates an internal mint Commitment and emits a MintRequest event. Pausable.\\n     * @param amount The amount to be minted (specified in 10^18 decimals)\\n     * @param encryptedData The encrypted payload of the request\\n     */\\n    function mintRequest(uint256 amount, bytes calldata encryptedData)\\n    public\\n    whenNotPaused {\\n\\n        // TODO: add checks here, e.g. duplicate request, too many in the queue,...\\n        (bytes32 requestId, uint256 expiration) = _processMintRequest(\\n            msg.sender,\\n            amount,\\n            encryptedData\\n        );\\n        emit MintRequest(msg.sender, requestId, amount, expiration, encryptedData);\\n    }\\n\\n    /**\\n     * @notice Triggered by the owner, emits an AuthRequest event for the original requester. Pausable.\\n     * @param requestId the original mint request id\\n     * @param serverEncryptedData the current auth. request's encrypted data\\n     */\\n    function authRequest(\\n        bytes32 requestId,\\n        bytes calldata serverEncryptedData\\n    )\\n    public\\n    onlyOwner\\n    whenNotPaused\\n    validateRequestId(requestId)\\n    validateNotExpired(requestId) {\\n\\n        emit AuthRequest(s_mintCommitments[requestId].requester, requestId, serverEncryptedData);\\n    }\\n\\n\\n    /**\\n    * @notice Triggered by the original requester, emits an AuthGranted event for the server. Pausable.\\n     * @param requestId the original mint request id\\n     * @param encryptedData the grant's encrypted data\\n     */\\n    function authGranted(bytes32 requestId, bytes calldata encryptedData)\\n    public\\n    whenNotPaused\\n    validateRequestId(requestId)\\n    validateSameRequester(requestId, msg.sender) {\\n\\n        // TODO: does it make sense to check for expiry? or not since this THE final step?\\n\\n        emit AuthGranted(msg.sender, requestId, encryptedData);\\n    }\\n\\n    /**\\n     * @notice Triggered by the owner, when the fiat funds have cleared. Does the mint, minus seignorage. Pausable.\\n     * @param requestId the original mint request id\\n     */\\n    function paymentComplete(bytes32 requestId)\\n    public\\n    onlyOwner\\n    whenNotPaused\\n    validateRequestId(requestId) {\\n\\n        // TODO: maybe add a lifecycle status?\\n\\n        // get values\\n        uint256 amount = s_mintCommitments[requestId].amount;\\n        address receiver = s_mintCommitments[requestId].requester;\\n\\n        // delete commitment\\n        delete s_mintCommitments[requestId];\\n\\n        // do the mint\\n        _mint(receiver, amount.mul(actualMintedPercentage).div(oneHundredPercent));\\n    }\\n\\n    function _processMintRequest(address sender, uint256 amount, bytes calldata encryptedData)\\n    internal\\n    returns (bytes32 requestId, uint256 expiration) {\\n        requestId = keccak256(abi.encodePacked(sender, amount, encryptedData));\\n        require(s_mintCommitments[requestId].paramsHash == 0, \\\"Request appears to be a duplicate\\\");\\n        // solhint-disable-next-line not-rely-on-time\\n        expiration = block.timestamp.add(getExpiryTime);\\n        bytes31 paramsHash = _buildParamsHash(amount, encryptedData, expiration);\\n        s_mintCommitments[requestId] = Commitment(paramsHash, sender, expiration, amount);\\n        return (requestId, expiration);\\n    }\\n\\n    /**\\n     * @notice Build the bytes31 hash from the amount, encryptedData and expiration.\\n     * @param amount The amount to be minted (specified in 10^18 decimals)\\n     * @param encryptedData The encrypted payload of the request\\n     * @param expiration The expiration before the commitment becomes eligible for cleanup\\n     * @return hash bytes31\\n     */\\n    function _buildParamsHash(\\n        uint256 amount,\\n        bytes calldata encryptedData,\\n        uint256 expiration\\n    ) internal pure returns (bytes31) {\\n        return bytes31(keccak256(abi.encodePacked(amount, encryptedData, expiration)));\\n    }\\n\\n    /**\\n     * @dev Reverts if request ID does not exist\\n     * @param requestId The given request ID to check in stored `commitments`\\n     */\\n    modifier validateRequestId(bytes32 requestId) {\\n        require(s_mintCommitments[requestId].paramsHash != 0, \\\"Must have a valid requestId\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Reverts if the commitment identified by the request ID has an expiry in the past\\n     * @param requestId The given request ID to check in stored `commitments`\\n     */\\n    modifier validateNotExpired(bytes32 requestId) {\\n        // solhint-disable-next-line not-rely-on-time\\n        require(s_mintCommitments[requestId].expiration >= block.timestamp, \\\"Request is expired\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Reverts if the commitment has a recorded address different to the requester\\n     * @param requester The account making the request\\n     */\\n    modifier validateSameRequester(bytes32 requestId, address requester) {\\n        require(s_mintCommitments[requestId].requester == requester, \\\"Requester does not match\\\");\\n        _;\\n    }\\n}\\n\",\"keccak256\":\"0x95e430e310faaf412cb74b2b3d550a99f3a4d64a562ce96f121740ae9690084f\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":236,"contract":"contracts/ProvableGBP.sol:ProvableGBP","label":"_balances","offset":0,"slot":"0","type":"t_mapping(t_address,t_uint256)"},{"astId":242,"contract":"contracts/ProvableGBP.sol:ProvableGBP","label":"_allowances","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":244,"contract":"contracts/ProvableGBP.sol:ProvableGBP","label":"_totalSupply","offset":0,"slot":"2","type":"t_uint256"},{"astId":246,"contract":"contracts/ProvableGBP.sol:ProvableGBP","label":"_name","offset":0,"slot":"3","type":"t_string_storage"},{"astId":248,"contract":"contracts/ProvableGBP.sol:ProvableGBP","label":"_symbol","offset":0,"slot":"4","type":"t_string_storage"},{"astId":130,"contract":"contracts/ProvableGBP.sol:ProvableGBP","label":"_paused","offset":0,"slot":"5","type":"t_bool"},{"astId":7,"contract":"contracts/ProvableGBP.sol:ProvableGBP","label":"_owner","offset":1,"slot":"5","type":"t_address"},{"astId":1323,"contract":"contracts/ProvableGBP.sol:ProvableGBP","label":"publicKey","offset":0,"slot":"6","type":"t_bytes_storage"},{"astId":1337,"contract":"contracts/ProvableGBP.sol:ProvableGBP","label":"s_mintCommitments","offset":0,"slot":"7","type":"t_mapping(t_bytes32,t_struct(Commitment)1332_storage)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_bytes31":{"encoding":"inplace","label":"bytes31","numberOfBytes":"31"},"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"},"t_bytes_storage":{"encoding":"bytes","label":"bytes","numberOfBytes":"32"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_bytes32,t_struct(Commitment)1332_storage)":{"encoding":"mapping","key":"t_bytes32","label":"mapping(bytes32 => struct ProvableGBP.Commitment)","numberOfBytes":"32","value":"t_struct(Commitment)1332_storage"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_struct(Commitment)1332_storage":{"encoding":"inplace","label":"struct ProvableGBP.Commitment","members":[{"astId":1325,"contract":"contracts/ProvableGBP.sol:ProvableGBP","label":"paramsHash","offset":0,"slot":"0","type":"t_bytes31"},{"astId":1327,"contract":"contracts/ProvableGBP.sol:ProvableGBP","label":"requester","offset":0,"slot":"1","type":"t_address"},{"astId":1329,"contract":"contracts/ProvableGBP.sol:ProvableGBP","label":"expiration","offset":0,"slot":"2","type":"t_uint256"},{"astId":1331,"contract":"contracts/ProvableGBP.sol:ProvableGBP","label":"amount","offset":0,"slot":"3","type":"t_uint256"}],"numberOfBytes":"128"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{"authGranted(bytes32,bytes)":{"notice":"Triggered by the original requester, emits an AuthGranted event for the server. Pausable."},"authRequest(bytes32,bytes)":{"notice":"Triggered by the owner, emits an AuthRequest event for the original requester. Pausable."},"mint(address,uint256)":{"notice":"Not implemented, cannot mint directly."},"mintRequest(uint256,bytes)":{"notice":"Creates an internal mint Commitment and emits a MintRequest event. Pausable."},"paymentComplete(bytes32)":{"notice":"Triggered by the owner, when the fiat funds have cleared. Does the mint, minus seignorage. Pausable."}},"version":1}}}}}}